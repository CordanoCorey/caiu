import { EventEmitter } from '@angular/core';
import { Router, ActivatedRoute, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, RoutesRecognized, Params, Data, NavigationExtras } from '@angular/router';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
export declare class RouterService {
    private _router;
    private _route;
    private store;
    navigationCancel: EventEmitter<NavigationCancel>;
    navigationEnd: EventEmitter<NavigationEnd>;
    navigationError: EventEmitter<NavigationError>;
    navigationStart: EventEmitter<NavigationStart>;
    routesRecognized: EventEmitter<RoutesRecognized>;
    constructor(_router: Router, _route: ActivatedRoute, store: Store<any>);
    onNavigationCancel(e: NavigationCancel): void;
    onNavigationEnd(e: NavigationEnd): void;
    onNavigationError(e: NavigationError): void;
    onNavigationStart(e: NavigationStart): void;
    onRoutesRecognized(e: RoutesRecognized): void;
    readonly activatedRoute: ActivatedRoute;
    readonly routeData$: Observable<Data>;
    readonly routeParams$: Observable<Params>;
    readonly router: Router;
    readonly url$: Observable<string>;
    navigate(commands: any[], extras?: NavigationExtras): Observable<boolean>;
    navigateByUrl(url: string, extras?: NavigationExtras): Observable<boolean>;
}

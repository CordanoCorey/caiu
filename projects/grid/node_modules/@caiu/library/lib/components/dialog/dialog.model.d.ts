import { ViewContainerRef } from '@angular/core';
import { MatDialogConfig, DialogPosition, DialogRole } from '@angular/material';
export declare class DialogModel {
    title: string;
    actions: DialogAction[];
    /** Height of the dialog. */
    height?: string;
    /** Width of the dialog. */
    width?: string;
    /**
     * Where the attached component should live in Angular's *logical* component tree.
     * This affects what is available for injection and the change detection order for the
     * component instantiated inside of the dialog. This does not affect where the dialog
     * content will be rendered.
     */
    viewContainerRef?: ViewContainerRef;
    /** The ARIA role of the dialog element. */
    role?: DialogRole;
    /** Custom class for the overlay pane. */
    panelClass?: string;
    /** Whether the dialog has a backdrop. */
    hasBackdrop?: boolean;
    /** Custom class for the backdrop, */
    backdropClass?: string;
    /** Whether the user can use escape or clicking outside to close a modal. */
    disableClose?: boolean;
    /** Position overrides. */
    position?: DialogPosition;
    /** Data being injected into the child component. */
    data?: any;
    /** Layout direction for the dialog's content. */
    direction?: 'ltr' | 'rtl';
    readonly config: MatDialogConfig;
}
export declare class DialogAction {
    value: any;
    label: string;
    color: 'primary' | 'accent' | 'warn';
}

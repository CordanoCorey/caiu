import { GridComponent } from './grid.component';
import { Collection } from '../../shared/collection';
import { CompositeFilterDescriptor, GroupableSettings, SortDescriptor, SortSettings } from '../../shared/kendo';
import { QueryModel, StyleModel } from '../../shared/models';
export declare class Grid<T> {
    data: Collection<T>;
    query: QueryModel<T>;
    style: StyleModel;
    detailRowHeight: number;
    filter: CompositeFilterDescriptor;
    filterable: boolean;
    groupable: GroupableSettings | boolean;
    height: number;
    pageSize: number;
    pageable: any | boolean;
    rowHeight: number;
    scrollable: any;
    selectable: boolean;
    skip: number;
    sortable: SortSettings;
    group: any[];
    rowClass: Function;
    sort: any[];
    static ApplyFilter(acc: any[], operator: string, field: string, value: any): any[];
    static Build<T>(items: T[]): Grid<T>;
    static BuildSort(field: string, dir?: 'asc' | 'desc'): SortDescriptor;
    static Contains(str: string, substr: string): boolean;
    static FilterRows(rows: any[], filters: any[]): any[];
    static MatchDate(date1: Date, date2: Date): boolean;
    static PageRows(rows: any[], skip: number, take: number): any[];
    static SortRows(rows: any[], sort: SortDescriptor[]): any[];
    constructor(data: Collection<T>);
    update(grid: GridComponent): void;
}

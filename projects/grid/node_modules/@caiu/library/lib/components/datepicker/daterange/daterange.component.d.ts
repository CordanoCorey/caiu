import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DatepickerComponent } from '../datepicker.component';
import { DateRange } from '../../../shared/date';
export declare const DATERANGE_ACCESSOR: any;
export declare class DaterangeComponent implements ControlValueAccessor {
    private changeDetectorRef;
    inline: boolean;
    min: Date;
    max: Date;
    startAt: Date;
    startLabel: string;
    endLabel: string;
    startView: any;
    touchUi: any;
    startDateChanged: EventEmitter<Date>;
    endDateChanged: EventEmitter<Date>;
    startDatepicker: DatepickerComponent;
    endDatepicker: DatepickerComponent;
    private onModelChange;
    private onTouch;
    _value: DateRange;
    focused: DateRange;
    constructor(changeDetectorRef: ChangeDetectorRef);
    value: DateRange;
    readonly startDateId: string;
    readonly startDateOpened: boolean;
    readonly endDateId: string;
    readonly endDateOpened: boolean;
    startDateValue: Date;
    endDateValue: Date;
    changeStartDate(date: Date): void;
    closeStartDate(): void;
    openStateDate(): void;
    changeEndDate(date: Date): void;
    closeEndDate(): void;
    openEndDate(): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    writeValue(value: DateRange): void;
    onChange(value: DateRange): void;
    onBlur(value: DateRange): void;
    onFocus(value: DateRange): void;
}

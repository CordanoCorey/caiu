import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { BehaviorSubject } from 'rxjs';
import { FileUpload } from './file-upload.model';
import { Ordering } from '../../shared/ordering';
export declare const FILE_UPLOAD_ACCESSOR: any;
export declare class FileUploadComponent implements OnInit, ControlValueAccessor {
    private ref;
    id: string;
    multiple: boolean;
    ordered: boolean;
    preview: boolean;
    upload: EventEmitter<FileUpload | FileUpload[]>;
    private onModelChange;
    private onTouch;
    changes$: BehaviorSubject<FileUpload>;
    value: FileUpload[];
    focused: FileUpload[];
    ordering: Ordering<FileUpload>;
    constructor(ref: ChangeDetectorRef);
    readonly activeFile: FileUpload;
    readonly hasUploads: boolean;
    readonly showMultiple: boolean;
    uploads: FileUpload[];
    readonly orderedUploads: FileUpload[];
    ngOnInit(): void;
    add(f: FileUpload): void;
    emit(): void;
    moveUp(f: FileUpload): void;
    moveDown(f: FileUpload): void;
    remove(f?: FileUpload): void;
    update(f: FileUpload): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    writeValue(value: FileUpload[]): void;
    onChange(value: FileUpload[]): void;
    onInputChange(e: any): void;
    onBlur(value: FileUpload[]): void;
    onFocus(value: FileUpload[]): void;
    onUpload(upload: FileUpload): void;
    setupReader(file: File): void;
    uploadAll(uploads: FileUpload[]): void;
}

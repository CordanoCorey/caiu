import { Store } from '@ngrx/store';
import { Observable, Subscription } from 'rxjs';
import { HttpAction } from '../http/http.models';
import { Action } from '../store/models';
export declare class EventsService {
    store: Store<any>;
    eventIndex: number;
    events: Event[];
    constructor(store: Store<any>);
    readonly eventKey: string;
    addEvent(actionType: string, handler?: (action: Action) => any): string;
    dispatch(action: HttpAction, handler?: (action: Action) => any): Observable<any>;
    dispatchHttpAction(action: HttpAction, handler?: (action: Action) => any): Observable<any>;
    removeEvent(eventKey: string): void;
    subscribe(action: string, handler: (e: any) => void): Subscription;
    take(n: number, actionType: string, handler?: (action: Action) => any): Observable<any>;
    takeFrom(n: number, actions: string[], handler?: (action: Action) => any): Observable<any>;
    takeOne(actionType: string, handler?: (action: Action) => any): Observable<any>;
}

import { Action as NgrxAction, ActionReducer, Store } from '@ngrx/store';
import { Observable } from 'rxjs';
export interface Action extends NgrxAction {
    actionType?: ActionTypes | ActionTypes[];
    payload?: any;
}
export interface ActionWithKey extends Action {
    key: string;
}
export declare enum ActionTypes {
    DEFAULT = 0,
    GET = 1,
    GET_SUCCESS = 2,
    GET_ERROR = 3,
    POST = 4,
    POST_SUCCESS = 5,
    POST_ERROR = 6,
    PUT = 7,
    PUT_SUCCESS = 8,
    PUT_ERROR = 9,
    DELETE = 10,
    DELETE_SUCCESS = 11,
    DELETE_ERROR = 12,
    SAVE = 13,
}
export interface ActionWithPayload<T> extends Action {
    payload: T;
}
export declare type Mapper<T> = (store: any) => T;
export interface Reducers {
    [key: string]: ActionReducer<any>;
}
export declare type Selector<T> = (store: Store<any>) => Observable<T>;
export declare type SelectorParameterized<T> = (store: Store<any>, ...params: any[]) => Observable<T>;
export interface UnsafeAction extends Action {
    payload?: any;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { getValue, truthy } from './utils';
var DumbComponent = /** @class */ (function () {
    function DumbComponent() {
        this.requestState = 'DEFAULT';
        this.subscriptions = [];
    }
    Object.defineProperty(DumbComponent.prototype, "inErrorState", {
        get: /**
         * @return {?}
         */
        function () {
            return this.requestState === 'ERROR';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DumbComponent.prototype, "inSuccessState", {
        get: /**
         * @return {?}
         */
        function () {
            return this.requestState === 'SUCCESS';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DumbComponent.prototype, "message", {
        get: /**
         * @return {?}
         */
        function () {
            return this.inErrorState ? "An error has occurred. Please try again later."
                : this.inSuccessState ? "Saved successfully!" : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DumbComponent.prototype, "showMessage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.inErrorState || this.inSuccessState;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DumbComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeSubscriptions();
    };
    /**
     * @param {?} subscription
     * @return {?}
     */
    DumbComponent.prototype.addSubscription = /**
     * @param {?} subscription
     * @return {?}
     */
    function (subscription) {
        this.subscriptions.push(subscription);
    };
    /**
     * @param {?} result
     * @return {?}
     */
    DumbComponent.prototype.closeDialog = /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
        this.dialogRef.unsubscribe();
    };
    /**
     * @param {?} component
     * @param {?=} config
     * @return {?}
     */
    DumbComponent.prototype.openDialog = /**
     * @param {?} component
     * @param {?=} config
     * @return {?}
     */
    function (component, config) {
        var _this = this;
        if (config === void 0) { config = {}; }
        var /** @type {?} */ dialogRef = this.dialog.open(component, config);
        this.dialogRef = dialogRef.afterClosed().subscribe(function (result) {
            _this.closeDialog(result);
        });
    };
    /**
     * @return {?}
     */
    DumbComponent.prototype.removeSubscriptions = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach(function (s) {
            s.unsubscribe();
        });
    };
    /**
     * @param {?} subscriptions
     * @return {?}
     */
    DumbComponent.prototype.subscribe = /**
     * @param {?} subscriptions
     * @return {?}
     */
    function (subscriptions) {
        var _this = this;
        subscriptions.forEach(function (s) {
            _this.addSubscription(s);
        });
    };
    /**
     * @param {?=} duration
     * @return {?}
     */
    DumbComponent.prototype.flashErrorMessage = /**
     * @param {?=} duration
     * @return {?}
     */
    function (duration) {
        var _this = this;
        if (duration === void 0) { duration = 5000; }
        this.toErrorState();
        setTimeout(function () {
            _this.resetRequestState();
        }, duration);
    };
    /**
     * @param {?=} duration
     * @return {?}
     */
    DumbComponent.prototype.flashSuccessMessage = /**
     * @param {?=} duration
     * @return {?}
     */
    function (duration) {
        var _this = this;
        if (duration === void 0) { duration = 5000; }
        this.toSucessState();
        setTimeout(function () {
            _this.resetRequestState();
        }, duration);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DumbComponent.prototype.onError = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.flashErrorMessage();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DumbComponent.prototype.onSuccess = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.flashSuccessMessage();
    };
    /**
     * @return {?}
     */
    DumbComponent.prototype.resetRequestState = /**
     * @return {?}
     */
    function () {
        this.requestState = 'DEFAULT';
    };
    /**
     * @param {?} value
     * @return {?}
     */
    DumbComponent.prototype.setValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.form && this.form.setValue) {
            this.form.setValue(getValue(value));
        }
    };
    /**
     * @return {?}
     */
    DumbComponent.prototype.toErrorState = /**
     * @return {?}
     */
    function () {
        this.requestState = 'ERROR';
    };
    /**
     * @return {?}
     */
    DumbComponent.prototype.toSucessState = /**
     * @return {?}
     */
    function () {
        this.requestState = 'SUCCESS';
    };
    return DumbComponent;
}());
export { DumbComponent };
function DumbComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    DumbComponent.prototype.dialog;
    /** @type {?} */
    DumbComponent.prototype.dialogRef;
    /** @type {?} */
    DumbComponent.prototype.form;
    /** @type {?} */
    DumbComponent.prototype.requestState;
    /** @type {?} */
    DumbComponent.prototype.subscriptions;
}
var FormComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormComponent, _super);
    function FormComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormComponent.prototype, "editing", {
        get: /**
         * @return {?}
         */
        function () {
            return truthy(this.id);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormComponent.prototype, "id", {
        get: /**
         * @return {?}
         */
        function () {
            return this.model.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormComponent.prototype, "isValid", {
        get: /**
         * @return {?}
         */
        function () {
            return this.form.valid;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FormComponent.prototype.markAsSubmitted = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.form.markAsTouched();
        Object.keys(this.form.controls).forEach(function (key) {
            _this.form.controls[key].markAsTouched();
        });
    };
    return FormComponent;
}(DumbComponent));
export { FormComponent };
function FormComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormComponent.prototype.form;
    /** @type {?} */
    FormComponent.prototype.model;
}
var SmartComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SmartComponent, _super);
    function SmartComponent(store) {
        var _this = _super.call(this) || this;
        _this.store = store;
        return _this;
    }
    /**
     * @param {?} action
     * @return {?}
     */
    SmartComponent.prototype.dispatch = /**
     * @param {?} action
     * @return {?}
     */
    function (action) {
        this.store.dispatch(action);
    };
    /**
     * @param {?} action
     * @param {?=} onSuccess
     * @param {?=} onError
     * @return {?}
     */
    SmartComponent.prototype.dispatchAndSubscribe = /**
     * @param {?} action
     * @param {?=} onSuccess
     * @param {?=} onError
     * @return {?}
     */
    function (action, onSuccess, onError) {
        var _this = this;
        var /** @type {?} */ f1 = onSuccess ? onSuccess : function (e) {
            _this.flashSuccessMessage();
        };
        var /** @type {?} */ f2 = onError ? onError : function (e) {
            _this.flashErrorMessage();
        };
        if (this.events && this.events.dispatch) {
            this.addSubscription(this.events.dispatch(action).subscribe(f1, f2));
        }
        else {
            this.store.dispatch(action);
        }
    };
    return SmartComponent;
}(DumbComponent));
export { SmartComponent };
function SmartComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    SmartComponent.prototype.events;
    /** @type {?} */
    SmartComponent.prototype.store;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNhaXUvbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zaGFyZWQvY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBT0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFM0MsSUFBQTtJQVFJOzRCQUhnRCxTQUFTOzZCQUN6QixFQUFFO0tBR2pDO0lBRUQsc0JBQUksdUNBQVk7Ozs7UUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksS0FBSyxPQUFPLENBQUM7U0FDeEM7OztPQUFBO0lBRUQsc0JBQUkseUNBQWM7Ozs7UUFBbEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksS0FBSyxTQUFTLENBQUM7U0FDMUM7OztPQUFBO0lBRUQsc0JBQUksa0NBQU87Ozs7UUFBWDtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxnREFBZ0Q7Z0JBQ3ZFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1NBQzFEOzs7T0FBQTtJQUVELHNCQUFJLHNDQUFXOzs7O1FBQWY7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO1NBQ25EOzs7T0FBQTs7OztJQUVELG1DQUFXOzs7SUFBWDtRQUNJLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0tBQzlCOzs7OztJQUVELHVDQUFlOzs7O0lBQWYsVUFBZ0IsWUFBMEI7UUFDdEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDekM7Ozs7O0lBRUQsbUNBQVc7Ozs7SUFBWCxVQUFZLE1BQVc7UUFDbkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztLQUNoQzs7Ozs7O0lB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LEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDeEU7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQy9CO0tBQ0o7eUJBbEtMO0VBd0lvQyxhQUFhLEVBNEJoRCxDQUFBO0FBNUJELDBCQTRCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE1hdERpYWxvZyB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcclxuaW1wb3J0IHsgU3RvcmUsIEFjdGlvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBIYXNJZCB9IGZyb20gJy4vbW9kZWxzJztcclxuaW1wb3J0IHsgZ2V0VmFsdWUsIHRydXRoeSB9IGZyb20gJy4vdXRpbHMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIER1bWJDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xyXG5cclxuICAgIGRpYWxvZzogTWF0RGlhbG9nO1xyXG4gICAgZGlhbG9nUmVmOiBTdWJzY3JpcHRpb247XHJcbiAgICBmb3JtOiBGb3JtR3JvdXA7XHJcbiAgICByZXF1ZXN0U3RhdGU6ICdERUZBVUxUJyB8ICdTVUNDRVNTJyB8ICdFUlJPUicgPSAnREVGQVVMVCc7XHJcbiAgICBzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb25bXSA9IFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbkVycm9yU3RhdGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdFN0YXRlID09PSAnRVJST1InO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpblN1Y2Nlc3NTdGF0ZSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0U3RhdGUgPT09ICdTVUNDRVNTJztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbWVzc2FnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmluRXJyb3JTdGF0ZSA/IGBBbiBlcnJvciBoYXMgb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuYFxyXG4gICAgICAgICAgICA6IHRoaXMuaW5TdWNjZXNzU3RhdGUgPyBgU2F2ZWQgc3VjY2Vzc2Z1bGx5IWAgOiAnJztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgc2hvd01lc3NhZ2UoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5FcnJvclN0YXRlIHx8IHRoaXMuaW5TdWNjZXNzU3RhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVTdWJzY3JpcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goc3Vic2NyaXB0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZURpYWxvZyhyZXN1bHQ6IGFueSkge1xyXG4gICAgICAgIHRoaXMuZGlhbG9nUmVmLnVuc3Vic2NyaWJlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbkRpYWxvZyhjb21wb25lbnQ6IGFueSwgY29uZmlnID0ge30pIHtcclxuICAgICAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuKGNvbXBvbmVudCwgY29uZmlnKTtcclxuICAgICAgICB0aGlzLmRpYWxvZ1JlZiA9IGRpYWxvZ1JlZi5hZnRlckNsb3NlZCgpLnN1YnNjcmliZShyZXN1bHQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKHJlc3VsdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlU3Vic2NyaXB0aW9ucygpIHtcclxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuZm9yRWFjaChzID0+IHtcclxuICAgICAgICAgICAgcy51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN1YnNjcmliZShzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb25bXSkge1xyXG4gICAgICAgIHN1YnNjcmlwdGlvbnMuZm9yRWFjaChzID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hZGRTdWJzY3JpcHRpb24ocyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZmxhc2hFcnJvck1lc3NhZ2UoZHVyYXRpb24gPSA1MDAwKSB7XHJcbiAgICAgICAgdGhpcy50b0Vycm9yU3RhdGUoKTtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZXNldFJlcXVlc3RTdGF0ZSgpO1xyXG4gICAgICAgIH0sIGR1cmF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBmbGFzaFN1Y2Nlc3NNZXNzYWdlKGR1cmF0aW9uID0gNTAwMCkge1xyXG4gICAgICAgIHRoaXMudG9TdWNlc3NTdGF0ZSgpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJlc2V0UmVxdWVzdFN0YXRlKCk7XHJcbiAgICAgICAgfSwgZHVyYXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRXJyb3IoZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5mbGFzaEVycm9yTWVzc2FnZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uU3VjY2VzcyhlOiBhbnkpIHtcclxuICAgICAgICB0aGlzLmZsYXNoU3VjY2Vzc01lc3NhZ2UoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXNldFJlcXVlc3RTdGF0ZSgpIHtcclxuICAgICAgICB0aGlzLnJlcXVlc3RTdGF0ZSA9ICdERUZBVUxUJztcclxuICAgIH1cclxuXHJcbiAgICBzZXRWYWx1ZSh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZm9ybSAmJiB0aGlzLmZvcm0uc2V0VmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5mb3JtLnNldFZhbHVlKGdldFZhbHVlKHZhbHVlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRvRXJyb3JTdGF0ZSgpIHtcclxuICAgICAgICB0aGlzLnJlcXVlc3RTdGF0ZSA9ICdFUlJPUic7XHJcbiAgICB9XHJcblxyXG4gICAgdG9TdWNlc3NTdGF0ZSgpIHtcclxuICAgICAgICB0aGlzLnJlcXVlc3RTdGF0ZSA9ICdTVUNDRVNTJztcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtQ29tcG9uZW50IGV4dGVuZHMgRHVtYkNvbXBvbmVudCB7XHJcblxyXG4gICAgZm9ybTogRm9ybUdyb3VwO1xyXG4gICAgbW9kZWw6IEhhc0lkO1xyXG5cclxuICAgIGdldCBlZGl0aW5nKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0cnV0aHkodGhpcy5pZCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGlkKCk6IG51bWJlciB8IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWwuaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGlzVmFsaWQoKTogYm9vbGVhbiB7XHJcbiAgICAgIHJldHVybiB0aGlzLmZvcm0udmFsaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgbWFya0FzU3VibWl0dGVkKCkge1xyXG4gICAgICAgIHRoaXMuZm9ybS5tYXJrQXNUb3VjaGVkKCk7XHJcbiAgICAgICAgT2JqZWN0LmtleXModGhpcy5mb3JtLmNvbnRyb2xzKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZm9ybS5jb250cm9sc1trZXldLm1hcmtBc1RvdWNoZWQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBTbWFydENvbXBvbmVudCBleHRlbmRzIER1bWJDb21wb25lbnQge1xyXG5cclxuICAgIGV2ZW50cztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgc3RvcmU6IFN0b3JlPGFueT4pIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BhdGNoKGFjdGlvbjogQWN0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChhY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BhdGNoQW5kU3Vic2NyaWJlKGFjdGlvbjogQWN0aW9uLCBvblN1Y2Nlc3M/OiAoZTogYW55KSA9PiB2b2lkLCBvbkVycm9yPzogKGU6IGFueSkgPT4gdm9pZCkge1xyXG4gICAgICAgIGNvbnN0IGYxID0gb25TdWNjZXNzID8gb25TdWNjZXNzIDogZSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZmxhc2hTdWNjZXNzTWVzc2FnZSgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGNvbnN0IGYyID0gb25FcnJvciA/IG9uRXJyb3IgOiBlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5mbGFzaEVycm9yTWVzc2FnZSgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmV2ZW50cyAmJiB0aGlzLmV2ZW50cy5kaXNwYXRjaCkge1xyXG4gICAgICAgICAgICB0aGlzLmFkZFN1YnNjcmlwdGlvbih0aGlzLmV2ZW50cy5kaXNwYXRjaChhY3Rpb24pLnN1YnNjcmliZShmMSwgZjIpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKGFjdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdfQ==
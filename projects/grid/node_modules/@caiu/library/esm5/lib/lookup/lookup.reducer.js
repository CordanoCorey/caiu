/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { LookupActions } from './lookup.actions';
import { Lookups, Lookup } from './lookup.models';
import { AppActions } from '../store/actions';
import { build, toArray } from '../shared/utils';
/**
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function lookupReducer(state, action) {
    if (state === void 0) { state = new Lookups(); }
    switch (action.type) {
        case LookupActions.ADD_KEYS:
            return Lookups.AddLookups(state, toArray(action.payload).map(function (x) { return build(Lookup, x); }));
        case LookupActions.ADD_KEY:
            return Lookups.AddLookup(state, action.payload);
        case LookupActions.ADD_VALUES:
            return Lookups.AddLookups(state, action.payload);
        case LookupActions.REMOVE_KEY:
            return Lookups.RemoveLookup(state, action.payload);
        case AppActions.INIT_STORE:
            return build(Lookups, action.payload['lookup']);
        default:
            return state;
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLnJlZHVjZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2xvb2t1cC9sb29rdXAucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7OztBQUVqRCxNQUFNLHdCQUF3QixLQUE4QixFQUFFLE1BQWM7SUFBOUMsc0JBQUEsRUFBQSxZQUFxQixPQUFPLEVBQUU7SUFDeEQsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFbEIsS0FBSyxhQUFhLENBQUMsUUFBUTtZQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFoQixDQUFnQixDQUFDLENBQUMsQ0FBQztRQUV6RixLQUFLLGFBQWEsQ0FBQyxPQUFPO1lBQ3RCLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFcEQsS0FBSyxhQUFhLENBQUMsVUFBVTtZQUN6QixNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXJELEtBQUssYUFBYSxDQUFDLFVBQVU7WUFDekIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV2RCxLQUFLLFVBQVUsQ0FBQyxVQUFVO1lBQ3RCLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUVwRDtZQUNJLE1BQU0sQ0FBQyxLQUFLLENBQUM7S0FDcEI7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvb2t1cEFjdGlvbnMgfSBmcm9tICcuL2xvb2t1cC5hY3Rpb25zJztcclxuaW1wb3J0IHsgTG9va3VwcywgTG9va3VwIH0gZnJvbSAnLi9sb29rdXAubW9kZWxzJztcclxuaW1wb3J0IHsgQXBwQWN0aW9ucyB9IGZyb20gJy4uL3N0b3JlL2FjdGlvbnMnO1xyXG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuLi9zdG9yZS9tb2RlbHMnO1xyXG5pbXBvcnQgeyBidWlsZCwgdG9BcnJheSB9IGZyb20gJy4uL3NoYXJlZC91dGlscyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbG9va3VwUmVkdWNlcihzdGF0ZTogTG9va3VwcyA9IG5ldyBMb29rdXBzKCksIGFjdGlvbjogQWN0aW9uKTogTG9va3VwcyB7XHJcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblxyXG4gICAgICAgIGNhc2UgTG9va3VwQWN0aW9ucy5BRERfS0VZUzpcclxuICAgICAgICAgICAgcmV0dXJuIExvb2t1cHMuQWRkTG9va3VwcyhzdGF0ZSwgdG9BcnJheShhY3Rpb24ucGF5bG9hZCkubWFwKHggPT4gYnVpbGQoTG9va3VwLCB4KSkpO1xyXG5cclxuICAgICAgICBjYXNlIExvb2t1cEFjdGlvbnMuQUREX0tFWTpcclxuICAgICAgICAgICAgcmV0dXJuIExvb2t1cHMuQWRkTG9va3VwKHN0YXRlLCBhY3Rpb24ucGF5bG9hZCk7XHJcblxyXG4gICAgICAgIGNhc2UgTG9va3VwQWN0aW9ucy5BRERfVkFMVUVTOlxyXG4gICAgICAgICAgICByZXR1cm4gTG9va3Vwcy5BZGRMb29rdXBzKHN0YXRlLCBhY3Rpb24ucGF5bG9hZCk7XHJcblxyXG4gICAgICAgIGNhc2UgTG9va3VwQWN0aW9ucy5SRU1PVkVfS0VZOlxyXG4gICAgICAgICAgICByZXR1cm4gTG9va3Vwcy5SZW1vdmVMb29rdXAoc3RhdGUsIGFjdGlvbi5wYXlsb2FkKTtcclxuXHJcbiAgICAgICAgY2FzZSBBcHBBY3Rpb25zLklOSVRfU1RPUkU6XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZChMb29rdXBzLCBhY3Rpb24ucGF5bG9hZFsnbG9va3VwJ10pO1xyXG5cclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XHJcbiAgICB9XHJcbn1cclxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule, ErrorHandler } from '@angular/core';
import { ErrorEffects } from './errors.effects';
import { ErrorsService } from './errors.service';
import { GlobalErrorsService } from './global-errors.service';
var ErrorsModule = /** @class */ (function () {
    function ErrorsModule() {
    }
    /**
     * @return {?}
     */
    ErrorsModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ErrorsModule,
            providers: [
                ErrorsService,
                ErrorEffects,
                {
                    provide: ErrorHandler,
                    useClass: GlobalErrorsService
                }
            ]
        };
    };
    ErrorsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [],
                    declarations: []
                },] },
    ];
    return ErrorsModule;
}());
export { ErrorsModule };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvZXJyb3JzL2Vycm9ycy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7O0lBT3JELG9CQUFPOzs7SUFBZDtRQUNFLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFNBQVMsRUFBRTtnQkFDVCxhQUFhO2dCQUNiLFlBQVk7Z0JBQ1o7b0JBQ0UsT0FBTyxFQUFFLFlBQVk7b0JBQ3JCLFFBQVEsRUFBRSxtQkFBbUI7aUJBQzlCO2FBQ0Y7U0FDRixDQUFDO0tBQ0g7O2dCQWpCRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsWUFBWSxFQUFFLEVBQUU7aUJBQ2pCOzt1QkFURDs7U0FVYSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEVycm9ySGFuZGxlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBFcnJvckVmZmVjdHMgfSBmcm9tICcuL2Vycm9ycy5lZmZlY3RzJztcbmltcG9ydCB7IEVycm9yc1NlcnZpY2UgfSBmcm9tICcuL2Vycm9ycy5zZXJ2aWNlJztcbmltcG9ydCB7IEdsb2JhbEVycm9yc1NlcnZpY2UgfSBmcm9tICcuL2dsb2JhbC1lcnJvcnMuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIEVycm9yc01vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogRXJyb3JzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIEVycm9yc1NlcnZpY2UsXG4gICAgICAgIEVycm9yRWZmZWN0cyxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEVycm9ySGFuZGxlcixcbiAgICAgICAgICB1c2VDbGFzczogR2xvYmFsRXJyb3JzU2VydmljZVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19
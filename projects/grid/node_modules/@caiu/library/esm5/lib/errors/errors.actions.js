/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var ErrorActions = /** @class */ (function () {
    function ErrorActions() {
    }
    /**
     * @param {?} e
     * @param {?} outlet
     * @return {?}
     */
    ErrorActions.addAtOutlet = /**
     * @param {?} e
     * @param {?} outlet
     * @return {?}
     */
    function (e, outlet) {
        var /** @type {?} */ payload = {
            key: outlet.key,
            error: outlet.handler ? outlet.handler(e) : e
        };
        return ErrorActions.add(payload);
    };
    /**
     * @param {?} key
     * @param {?} e
     * @return {?}
     */
    ErrorActions.addError = /**
     * @param {?} key
     * @param {?} e
     * @return {?}
     */
    function (key, e) {
        var /** @type {?} */ payload = {
            key: key,
            error: e
        };
        return ErrorActions.add(payload);
    };
    /**
     * @param {?} payload
     * @return {?}
     */
    ErrorActions.add = /**
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        return {
            type: ErrorActions.ADD,
            payload: payload
        };
    };
    /**
     * @param {?} key
     * @return {?}
     */
    ErrorActions.remove = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return {
            type: ErrorActions.REMOVE,
            payload: key
        };
    };
    ErrorActions.ADD = '[Error] Add Error';
    ErrorActions.REMOVE = '[Error] Remove Error';
    ErrorActions.HANDLE_ERROR = '[Error Handler] Handle Error';
    ErrorActions.THROW_ERROR = '[Error Handler] Throw Error';
    return ErrorActions;
}());
export { ErrorActions };
function ErrorActions_tsickle_Closure_declarations() {
    /** @type {?} */
    ErrorActions.ADD;
    /** @type {?} */
    ErrorActions.REMOVE;
    /** @type {?} */
    ErrorActions.HANDLE_ERROR;
    /** @type {?} */
    ErrorActions.THROW_ERROR;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmFjdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2Vycm9ycy9lcnJvcnMuYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFTVyx3QkFBVzs7Ozs7SUFBbEIsVUFBbUIsQ0FBUSxFQUFFLE1BQW1CO1FBQzVDLHFCQUFJLE9BQU8sR0FBaUI7WUFDeEIsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHO1lBQ2YsS0FBSyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDaEQsQ0FBQztRQUNGLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3BDOzs7Ozs7SUFFTSxxQkFBUTs7Ozs7SUFBZixVQUFnQixHQUFXLEVBQUUsQ0FBUTtRQUNqQyxxQkFBSSxPQUFPLEdBQWlCO1lBQ3hCLEdBQUcsRUFBRSxHQUFHO1lBQ1IsS0FBSyxFQUFFLENBQUM7U0FDWCxDQUFDO1FBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDcEM7Ozs7O0lBRU0sZ0JBQUc7Ozs7SUFBVixVQUFXLE9BQXFCO1FBQzVCLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxZQUFZLENBQUMsR0FBRztZQUN0QixPQUFPLEVBQUUsT0FBTztTQUNuQixDQUFDO0tBQ0w7Ozs7O0lBRU0sbUJBQU07Ozs7SUFBYixVQUFjLEdBQVc7UUFDckIsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLFlBQVksQ0FBQyxNQUFNO1lBQ3pCLE9BQU8sRUFBRSxHQUFHO1NBQ2YsQ0FBQztLQUNMO3VCQWpDWSxtQkFBbUI7MEJBQ2hCLHNCQUFzQjtnQ0FDaEIsOEJBQThCOytCQUMvQiw2QkFBNkI7dUJBUHREOztTQUdhLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFcnJvck91dGxldCwgRXJyb3JQYXlsb2FkLCBFcnJvciB9IGZyb20gJy4vZXJyb3JzLm1vZGVscyc7XHJcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJy4uL3N0b3JlL21vZGVscyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRXJyb3JBY3Rpb25zIHtcclxuICAgIHN0YXRpYyBBREQgPSAnW0Vycm9yXSBBZGQgRXJyb3InO1xyXG4gICAgc3RhdGljIFJFTU9WRSA9ICdbRXJyb3JdIFJlbW92ZSBFcnJvcic7XHJcbiAgICBzdGF0aWMgSEFORExFX0VSUk9SID0gJ1tFcnJvciBIYW5kbGVyXSBIYW5kbGUgRXJyb3InO1xyXG4gICAgc3RhdGljIFRIUk9XX0VSUk9SID0gJ1tFcnJvciBIYW5kbGVyXSBUaHJvdyBFcnJvcic7XHJcblxyXG4gICAgc3RhdGljIGFkZEF0T3V0bGV0KGU6IEVycm9yLCBvdXRsZXQ6IEVycm9yT3V0bGV0KTogQWN0aW9uIHtcclxuICAgICAgICBsZXQgcGF5bG9hZDogRXJyb3JQYXlsb2FkID0ge1xyXG4gICAgICAgICAgICBrZXk6IG91dGxldC5rZXksXHJcbiAgICAgICAgICAgIGVycm9yOiBvdXRsZXQuaGFuZGxlciA/IG91dGxldC5oYW5kbGVyKGUpIDogZVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIEVycm9yQWN0aW9ucy5hZGQocGF5bG9hZCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFkZEVycm9yKGtleTogc3RyaW5nLCBlOiBFcnJvcik6IEFjdGlvbiB7XHJcbiAgICAgICAgbGV0IHBheWxvYWQ6IEVycm9yUGF5bG9hZCA9IHtcclxuICAgICAgICAgICAga2V5OiBrZXksXHJcbiAgICAgICAgICAgIGVycm9yOiBlXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gRXJyb3JBY3Rpb25zLmFkZChwYXlsb2FkKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYWRkKHBheWxvYWQ6IEVycm9yUGF5bG9hZCk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogRXJyb3JBY3Rpb25zLkFERCxcclxuICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHJlbW92ZShrZXk6IHN0cmluZyk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogRXJyb3JBY3Rpb25zLlJFTU9WRSxcclxuICAgICAgICAgICAgcGF5bG9hZDoga2V5XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=
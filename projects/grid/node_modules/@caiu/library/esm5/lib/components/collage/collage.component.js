/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { Collage } from './collage.model';
var CollageComponent = /** @class */ (function () {
    function CollageComponent() {
        this.images = [];
        this.canvasHeight = 0;
        this.canvasWidth = 0;
        this.totalRows = 0;
        this.totalColumns = 0;
        this.maxRows = 0;
        this.maxColumns = 0;
    }
    Object.defineProperty(CollageComponent.prototype, "collage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.canvasHeight > 0 && this.canvasWidth > 0 ?
                Collage.Build(this.images, this.canvasHeight, this.canvasWidth, this.totalRows, this.totalColumns, this.maxRows, this.maxColumns)
                : new Collage();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CollageComponent.prototype, "tiles", {
        get: /**
         * @return {?}
         */
        function () {
            return this.collage.tiles;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CollageComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    CollageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-collage',
                    template: "<iu-tile *ngFor=\"let tile of tiles\" [tile]=\"tile\"></iu-tile>",
                    styles: [""],
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    /** @nocollapse */
    CollageComponent.ctorParameters = function () { return []; };
    CollageComponent.propDecorators = {
        images: [{ type: Input }],
        canvasHeight: [{ type: Input }],
        canvasWidth: [{ type: Input }],
        totalRows: [{ type: Input }],
        totalColumns: [{ type: Input }],
        maxRows: [{ type: Input }],
        maxColumns: [{ type: Input }]
    };
    return CollageComponent;
}());
export { CollageComponent };
function CollageComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    CollageComponent.prototype.images;
    /** @type {?} */
    CollageComponent.prototype.canvasHeight;
    /** @type {?} */
    CollageComponent.prototype.canvasWidth;
    /** @type {?} */
    CollageComponent.prototype.totalRows;
    /** @type {?} */
    CollageComponent.prototype.totalColumns;
    /** @type {?} */
    CollageComponent.prototype.maxRows;
    /** @type {?} */
    CollageComponent.prototype.maxColumns;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvY29sbGFnZS9jb2xsYWdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSx1QkFBdUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEYsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQW9CeEM7c0JBUjJCLEVBQUU7NEJBQ0wsQ0FBQzsyQkFDRixDQUFDO3lCQUNILENBQUM7NEJBQ0UsQ0FBQzt1QkFDTixDQUFDOzBCQUNFLENBQUM7S0FFTjtJQUVqQixzQkFBSSxxQ0FBTzs7OztRQUFYO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BELE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDakksQ0FBQyxDQUFDLElBQUksT0FBTyxFQUFFLENBQUM7U0FDbkI7OztPQUFBO0lBRUQsc0JBQUksbUNBQUs7Ozs7UUFBVDtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztTQUMzQjs7O09BQUE7Ozs7SUFFRCxtQ0FBUTs7O0lBQVI7S0FDQzs7Z0JBN0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsUUFBUSxFQUFFLGtFQUE4RDtvQkFDeEUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO29CQUNaLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7Ozs7eUJBR0UsS0FBSzsrQkFDTCxLQUFLOzhCQUNMLEtBQUs7NEJBQ0wsS0FBSzsrQkFDTCxLQUFLOzBCQUNMLEtBQUs7NkJBQ0wsS0FBSzs7MkJBcEJSOztTQVlhLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IENvbGxhZ2UgfSBmcm9tICcuL2NvbGxhZ2UubW9kZWwnO1xyXG5pbXBvcnQgeyBUaWxlIH0gZnJvbSAnLi4vdGlsZS90aWxlLm1vZGVsJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvbW9kZWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXUtY29sbGFnZScsXHJcbiAgdGVtcGxhdGU6IGA8aXUtdGlsZSAqbmdGb3I9XCJsZXQgdGlsZSBvZiB0aWxlc1wiIFt0aWxlXT1cInRpbGVcIj48L2l1LXRpbGU+YCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbGxhZ2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBpbWFnZXM6IEltYWdlW10gPSBbXTtcclxuICBASW5wdXQoKSBjYW52YXNIZWlnaHQgPSAwO1xyXG4gIEBJbnB1dCgpIGNhbnZhc1dpZHRoID0gMDtcclxuICBASW5wdXQoKSB0b3RhbFJvd3MgPSAwO1xyXG4gIEBJbnB1dCgpIHRvdGFsQ29sdW1ucyA9IDA7XHJcbiAgQElucHV0KCkgbWF4Um93cyA9IDA7XHJcbiAgQElucHV0KCkgbWF4Q29sdW1ucyA9IDA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGdldCBjb2xsYWdlKCk6IENvbGxhZ2Uge1xyXG4gICAgcmV0dXJuIHRoaXMuY2FudmFzSGVpZ2h0ID4gMCAmJiB0aGlzLmNhbnZhc1dpZHRoID4gMCA/XHJcbiAgICAgIENvbGxhZ2UuQnVpbGQodGhpcy5pbWFnZXMsIHRoaXMuY2FudmFzSGVpZ2h0LCB0aGlzLmNhbnZhc1dpZHRoLCB0aGlzLnRvdGFsUm93cywgdGhpcy50b3RhbENvbHVtbnMsIHRoaXMubWF4Um93cywgdGhpcy5tYXhDb2x1bW5zKVxyXG4gICAgICA6IG5ldyBDb2xsYWdlKCk7XHJcbiAgfVxyXG5cclxuICBnZXQgdGlsZXMoKTogVGlsZVtdIHtcclxuICAgIHJldHVybiB0aGlzLmNvbGxhZ2UudGlsZXM7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var DialogModel = /** @class */ (function () {
    function DialogModel() {
        this.title = ' ';
        this.actions = [];
        /**
         * Whether the dialog has a backdrop.
         */
        this.hasBackdrop = true;
        /**
         * Whether the user can use escape or clicking outside to close a modal.
         */
        this.disableClose = false;
    }
    Object.defineProperty(DialogModel.prototype, "config", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                viewContainerRef: this.viewContainerRef,
                role: this.role,
                panelClass: this.panelClass,
                hasBackdrop: this.hasBackdrop,
                backdropClass: this.backdropClass,
                disableClose: this.disableClose,
                width: this.width,
                height: this.height,
                position: this.position,
                data: this.data,
                direction: this.direction
            };
        },
        enumerable: true,
        configurable: true
    });
    return DialogModel;
}());
export { DialogModel };
function DialogModel_tsickle_Closure_declarations() {
    /** @type {?} */
    DialogModel.prototype.title;
    /** @type {?} */
    DialogModel.prototype.actions;
    /**
     * Height of the dialog.
     * @type {?}
     */
    DialogModel.prototype.height;
    /**
     * Width of the dialog.
     * @type {?}
     */
    DialogModel.prototype.width;
    /**
     * Where the attached component should live in Angular's *logical* component tree.
     * This affects what is available for injection and the change detection order for the
     * component instantiated inside of the dialog. This does not affect where the dialog
     * content will be rendered.
     * @type {?}
     */
    DialogModel.prototype.viewContainerRef;
    /**
     * The ARIA role of the dialog element.
     * @type {?}
     */
    DialogModel.prototype.role;
    /**
     * Custom class for the overlay pane.
     * @type {?}
     */
    DialogModel.prototype.panelClass;
    /**
     * Whether the dialog has a backdrop.
     * @type {?}
     */
    DialogModel.prototype.hasBackdrop;
    /**
     * Custom class for the backdrop,
     * @type {?}
     */
    DialogModel.prototype.backdropClass;
    /**
     * Whether the user can use escape or clicking outside to close a modal.
     * @type {?}
     */
    DialogModel.prototype.disableClose;
    /**
     * Position overrides.
     * @type {?}
     */
    DialogModel.prototype.position;
    /**
     * Data being injected into the child component.
     * @type {?}
     */
    DialogModel.prototype.data;
    /**
     * Layout direction for the dialog's content.
     * @type {?}
     */
    DialogModel.prototype.direction;
}
var DialogAction = /** @class */ (function () {
    function DialogAction() {
        this.value = null;
        this.label = '';
        this.color = 'accent';
    }
    return DialogAction;
}());
export { DialogAction };
function DialogAction_tsickle_Closure_declarations() {
    /** @type {?} */
    DialogAction.prototype.value;
    /** @type {?} */
    DialogAction.prototype.label;
    /** @type {?} */
    DialogAction.prototype.color;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNhaXUvbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2RpYWxvZy9kaWFsb2cubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLElBQUE7O3FCQUNZLEdBQUc7dUJBQ2UsRUFBRTs7OzsyQkFpQmQsSUFBSTs7Ozs0QkFJSCxLQUFLOztJQVFwQixzQkFBSSwrQkFBTTs7OztRQUFWO1lBQ0ksTUFBTSxDQUFDO2dCQUNILGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7Z0JBQ3ZDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtnQkFDZixVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVU7Z0JBQzNCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztnQkFDN0IsYUFBYSxFQUFFLElBQUksQ0FBQyxhQUFhO2dCQUNqQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVk7Z0JBQy9CLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2dCQUNuQixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7Z0JBQ3ZCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtnQkFDZixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7YUFDNUIsQ0FBQztTQUNMOzs7T0FBQTtzQkFoREw7SUFpREMsQ0FBQTtBQTlDRCx1QkE4Q0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUQsSUFBQTs7cUJBQ2lCLElBQUk7cUJBQ1QsRUFBRTtxQkFDNkIsUUFBUTs7dUJBdERuRDtJQXVEQyxDQUFBO0FBSkQsd0JBSUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdERpYWxvZ0NvbmZpZywgRGlhbG9nUG9zaXRpb24sIERpYWxvZ1JvbGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgRGlhbG9nTW9kZWwge1xyXG4gICAgdGl0bGUgPSAnICc7XHJcbiAgICBhY3Rpb25zOiBEaWFsb2dBY3Rpb25bXSA9IFtdO1xyXG4gICAgLyoqIEhlaWdodCBvZiB0aGUgZGlhbG9nLiAqL1xyXG4gICAgaGVpZ2h0Pzogc3RyaW5nO1xyXG4gICAgLyoqIFdpZHRoIG9mIHRoZSBkaWFsb2cuICovXHJcbiAgICB3aWR0aD86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogV2hlcmUgdGhlIGF0dGFjaGVkIGNvbXBvbmVudCBzaG91bGQgbGl2ZSBpbiBBbmd1bGFyJ3MgKmxvZ2ljYWwqIGNvbXBvbmVudCB0cmVlLlxyXG4gICAgICogVGhpcyBhZmZlY3RzIHdoYXQgaXMgYXZhaWxhYmxlIGZvciBpbmplY3Rpb24gYW5kIHRoZSBjaGFuZ2UgZGV0ZWN0aW9uIG9yZGVyIGZvciB0aGVcclxuICAgICAqIGNvbXBvbmVudCBpbnN0YW50aWF0ZWQgaW5zaWRlIG9mIHRoZSBkaWFsb2cuIFRoaXMgZG9lcyBub3QgYWZmZWN0IHdoZXJlIHRoZSBkaWFsb2dcclxuICAgICAqIGNvbnRlbnQgd2lsbCBiZSByZW5kZXJlZC5cclxuICAgICAqL1xyXG4gICAgdmlld0NvbnRhaW5lclJlZj86IFZpZXdDb250YWluZXJSZWY7XHJcbiAgICAvKiogVGhlIEFSSUEgcm9sZSBvZiB0aGUgZGlhbG9nIGVsZW1lbnQuICovXHJcbiAgICByb2xlPzogRGlhbG9nUm9sZTtcclxuICAgIC8qKiBDdXN0b20gY2xhc3MgZm9yIHRoZSBvdmVybGF5IHBhbmUuICovXHJcbiAgICBwYW5lbENsYXNzPzogc3RyaW5nO1xyXG4gICAgLyoqIFdoZXRoZXIgdGhlIGRpYWxvZyBoYXMgYSBiYWNrZHJvcC4gKi9cclxuICAgIGhhc0JhY2tkcm9wPz0gdHJ1ZTtcclxuICAgIC8qKiBDdXN0b20gY2xhc3MgZm9yIHRoZSBiYWNrZHJvcCwgKi9cclxuICAgIGJhY2tkcm9wQ2xhc3M/OiBzdHJpbmc7XHJcbiAgICAvKiogV2hldGhlciB0aGUgdXNlciBjYW4gdXNlIGVzY2FwZSBvciBjbGlja2luZyBvdXRzaWRlIHRvIGNsb3NlIGEgbW9kYWwuICovXHJcbiAgICBkaXNhYmxlQ2xvc2U/PSBmYWxzZTtcclxuICAgIC8qKiBQb3NpdGlvbiBvdmVycmlkZXMuICovXHJcbiAgICBwb3NpdGlvbj86IERpYWxvZ1Bvc2l0aW9uO1xyXG4gICAgLyoqIERhdGEgYmVpbmcgaW5qZWN0ZWQgaW50byB0aGUgY2hpbGQgY29tcG9uZW50LiAqL1xyXG4gICAgZGF0YT86IGFueTtcclxuICAgIC8qKiBMYXlvdXQgZGlyZWN0aW9uIGZvciB0aGUgZGlhbG9nJ3MgY29udGVudC4gKi9cclxuICAgIGRpcmVjdGlvbj86ICdsdHInIHwgJ3J0bCc7XHJcblxyXG4gICAgZ2V0IGNvbmZpZygpOiBNYXREaWFsb2dDb25maWcge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHZpZXdDb250YWluZXJSZWY6IHRoaXMudmlld0NvbnRhaW5lclJlZixcclxuICAgICAgICAgICAgcm9sZTogdGhpcy5yb2xlLFxyXG4gICAgICAgICAgICBwYW5lbENsYXNzOiB0aGlzLnBhbmVsQ2xhc3MsXHJcbiAgICAgICAgICAgIGhhc0JhY2tkcm9wOiB0aGlzLmhhc0JhY2tkcm9wLFxyXG4gICAgICAgICAgICBiYWNrZHJvcENsYXNzOiB0aGlzLmJhY2tkcm9wQ2xhc3MsXHJcbiAgICAgICAgICAgIGRpc2FibGVDbG9zZTogdGhpcy5kaXNhYmxlQ2xvc2UsXHJcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpZHRoLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0LFxyXG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5wb3NpdGlvbixcclxuICAgICAgICAgICAgZGF0YTogdGhpcy5kYXRhLFxyXG4gICAgICAgICAgICBkaXJlY3Rpb246IHRoaXMuZGlyZWN0aW9uXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIERpYWxvZ0FjdGlvbiB7XHJcbiAgICB2YWx1ZTogYW55ID0gbnVsbDtcclxuICAgIGxhYmVsID0gJyc7XHJcbiAgICBjb2xvcjogJ3ByaW1hcnknIHwgJ2FjY2VudCcgfCAnd2FybicgPSAnYWNjZW50JztcclxufVxyXG4iXX0=
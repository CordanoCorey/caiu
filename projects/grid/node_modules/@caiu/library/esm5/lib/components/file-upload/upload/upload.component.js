/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FileUpload } from '../file-upload.model';
var UploadComponent = /** @class */ (function () {
    function UploadComponent() {
        this.upload = new FileUpload();
        this.height = 200;
        this.width = 600;
        this.remove = new EventEmitter();
    }
    Object.defineProperty(UploadComponent.prototype, "graphic", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.upload.loading) {
                return 'cloud_upload';
            }
            else if (this.upload.isImage) {
                return 'image';
            }
            else {
                switch (this.upload.extension) {
                    case 'pdf':
                        return 'picture_as_pdf';
                    default:
                        return 'cloud_done';
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UploadComponent.prototype, "showImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.graphic === 'image';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    UploadComponent.prototype.onRemove = /**
     * @return {?}
     */
    function () {
        this.remove.emit(this.upload);
    };
    UploadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-upload',
                    template: "<div class=\"upload\" [style.height]=\"img?.style?.height\">\n  <div class=\"graphic\" #img>\n    <img *ngIf=\"showImage\" [src]=\"upload.src\" [style.max-height.px]=\"height\" [style.max-width.px]=\"width\">\n    <mat-icon *ngIf=\"!showImage\" class=\"icon-graphic\" [style.max-height.px]=\"height\" [style.max-width.px]=\"width\">{{ graphic }}</mat-icon>\n    <mat-icon *ngIf=\"!upload.loading\" class=\"remove-upload\" (click)=\"onRemove()\">cancel</mat-icon>\n  </div>\n  <mat-spinner mode=\"indeterminate\" *ngIf=\"upload.loading\"></mat-spinner>\n  <div class=\"file-info\" *ngIf=\"!upload.loading\">\n    <span class=\"file-name\">{{ upload.name }}</span>\n  </div>\n</div>\n",
                    styles: [".upload{max-height:420px;max-width:600px;margin:10px 20px;position:relative;display:flex}.upload img{max-height:400px}.graphic{padding:0!important;float:left;margin:10px;position:relative}.icon-graphic{font-size:72px;height:72px;width:72px}.mat-progress-bar{position:absolute;left:0;top:73px}.file-info{float:right}.file-name{margin:18px 6px;display:inline-block;line-height:36px;font-size:20px;height:36px;font-weight:700;color:#000}.remove-upload{color:red;cursor:pointer;position:absolute;right:-20px;top:-20px;font-size:40px;height:40px;width:40px}"]
                },] },
    ];
    /** @nocollapse */
    UploadComponent.ctorParameters = function () { return []; };
    UploadComponent.propDecorators = {
        upload: [{ type: Input }],
        height: [{ type: Input }],
        width: [{ type: Input }],
        remove: [{ type: Output }]
    };
    return UploadComponent;
}());
export { UploadComponent };
function UploadComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    UploadComponent.prototype.upload;
    /** @type {?} */
    UploadComponent.prototype.height;
    /** @type {?} */
    UploadComponent.prototype.width;
    /** @type {?} */
    UploadComponent.prototype.remove;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWxlLXVwbG9hZC91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0lBeUJoRDtzQkFMOEIsSUFBSSxVQUFVLEVBQUU7c0JBQzVCLEdBQUc7cUJBQ0osR0FBRztzQkFDRCxJQUFJLFlBQVksRUFBYztLQUVoQztJQUVqQixzQkFBSSxvQ0FBTzs7OztRQUFYO1lBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixNQUFNLENBQUMsY0FBYyxDQUFDO2FBQ3ZCO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsTUFBTSxDQUFDLE9BQU8sQ0FBQzthQUNoQjtZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztvQkFDOUIsS0FBSyxLQUFLO3dCQUNSLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDMUI7d0JBQ0UsTUFBTSxDQUFDLFlBQVksQ0FBQztpQkFDdkI7YUFDRjtTQUNGOzs7T0FBQTtJQUVELHNCQUFJLHNDQUFTOzs7O1FBQWI7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyxPQUFPLENBQUM7U0FDakM7OztPQUFBOzs7O0lBRUQsa0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQy9COztnQkE5Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsNHFCQVdYO29CQUNDLE1BQU0sRUFBRSxDQUFDLDBpQkFBMGlCLENBQUM7aUJBQ3JqQjs7Ozs7eUJBR0UsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsTUFBTTs7MEJBekJUOztTQW9CYSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRmlsZVVwbG9hZCB9IGZyb20gJy4uL2ZpbGUtdXBsb2FkLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaXUtdXBsb2FkJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwidXBsb2FkXCIgW3N0eWxlLmhlaWdodF09XCJpbWc/LnN0eWxlPy5oZWlnaHRcIj5cbiAgPGRpdiBjbGFzcz1cImdyYXBoaWNcIiAjaW1nPlxuICAgIDxpbWcgKm5nSWY9XCJzaG93SW1hZ2VcIiBbc3JjXT1cInVwbG9hZC5zcmNcIiBbc3R5bGUubWF4LWhlaWdodC5weF09XCJoZWlnaHRcIiBbc3R5bGUubWF4LXdpZHRoLnB4XT1cIndpZHRoXCI+XG4gICAgPG1hdC1pY29uICpuZ0lmPVwiIXNob3dJbWFnZVwiIGNsYXNzPVwiaWNvbi1ncmFwaGljXCIgW3N0eWxlLm1heC1oZWlnaHQucHhdPVwiaGVpZ2h0XCIgW3N0eWxlLm1heC13aWR0aC5weF09XCJ3aWR0aFwiPnt7IGdyYXBoaWMgfX08L21hdC1pY29uPlxuICAgIDxtYXQtaWNvbiAqbmdJZj1cIiF1cGxvYWQubG9hZGluZ1wiIGNsYXNzPVwicmVtb3ZlLXVwbG9hZFwiIChjbGljayk9XCJvblJlbW92ZSgpXCI+Y2FuY2VsPC9tYXQtaWNvbj5cbiAgPC9kaXY+XG4gIDxtYXQtc3Bpbm5lciBtb2RlPVwiaW5kZXRlcm1pbmF0ZVwiICpuZ0lmPVwidXBsb2FkLmxvYWRpbmdcIj48L21hdC1zcGlubmVyPlxuICA8ZGl2IGNsYXNzPVwiZmlsZS1pbmZvXCIgKm5nSWY9XCIhdXBsb2FkLmxvYWRpbmdcIj5cbiAgICA8c3BhbiBjbGFzcz1cImZpbGUtbmFtZVwiPnt7IHVwbG9hZC5uYW1lIH19PC9zcGFuPlxuICA8L2Rpdj5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYC51cGxvYWR7bWF4LWhlaWdodDo0MjBweDttYXgtd2lkdGg6NjAwcHg7bWFyZ2luOjEwcHggMjBweDtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmZsZXh9LnVwbG9hZCBpbWd7bWF4LWhlaWdodDo0MDBweH0uZ3JhcGhpY3twYWRkaW5nOjAhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7bWFyZ2luOjEwcHg7cG9zaXRpb246cmVsYXRpdmV9Lmljb24tZ3JhcGhpY3tmb250LXNpemU6NzJweDtoZWlnaHQ6NzJweDt3aWR0aDo3MnB4fS5tYXQtcHJvZ3Jlc3MtYmFye3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6NzNweH0uZmlsZS1pbmZve2Zsb2F0OnJpZ2h0fS5maWxlLW5hbWV7bWFyZ2luOjE4cHggNnB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2xpbmUtaGVpZ2h0OjM2cHg7Zm9udC1zaXplOjIwcHg7aGVpZ2h0OjM2cHg7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOiMwMDB9LnJlbW92ZS11cGxvYWR7Y29sb3I6cmVkO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0Oi0yMHB4O3RvcDotMjBweDtmb250LXNpemU6NDBweDtoZWlnaHQ6NDBweDt3aWR0aDo0MHB4fWBdXG59KVxuZXhwb3J0IGNsYXNzIFVwbG9hZENvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgdXBsb2FkOiBGaWxlVXBsb2FkID0gbmV3IEZpbGVVcGxvYWQoKTtcbiAgQElucHV0KCkgaGVpZ2h0ID0gMjAwO1xuICBASW5wdXQoKSB3aWR0aCA9IDYwMDtcbiAgQE91dHB1dCgpIHJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZVVwbG9hZD4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIGdldCBncmFwaGljKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMudXBsb2FkLmxvYWRpbmcpIHtcbiAgICAgIHJldHVybiAnY2xvdWRfdXBsb2FkJztcbiAgICB9IGVsc2UgaWYgKHRoaXMudXBsb2FkLmlzSW1hZ2UpIHtcbiAgICAgIHJldHVybiAnaW1hZ2UnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2l0Y2ggKHRoaXMudXBsb2FkLmV4dGVuc2lvbikge1xuICAgICAgICBjYXNlICdwZGYnOlxuICAgICAgICAgIHJldHVybiAncGljdHVyZV9hc19wZGYnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiAnY2xvdWRfZG9uZSc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0IHNob3dJbWFnZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5ncmFwaGljID09PSAnaW1hZ2UnO1xuICB9XG5cbiAgb25SZW1vdmUoKSB7XG4gICAgdGhpcy5yZW1vdmUuZW1pdCh0aGlzLnVwbG9hZCk7XG4gIH1cblxufVxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';
var UploadsComponent = /** @class */ (function () {
    function UploadsComponent() {
        this.uploads = [];
        this.ordered = true;
        this.moveUp = new EventEmitter();
        this.moveDown = new EventEmitter();
        this.remove = new EventEmitter();
    }
    /**
     * @param {?} f
     * @return {?}
     */
    UploadsComponent.prototype.onMoveUp = /**
     * @param {?} f
     * @return {?}
     */
    function (f) {
        this.moveUp.emit(f);
    };
    /**
     * @param {?} f
     * @return {?}
     */
    UploadsComponent.prototype.onMoveDown = /**
     * @param {?} f
     * @return {?}
     */
    function (f) {
        this.moveDown.emit(f);
    };
    /**
     * @param {?} f
     * @return {?}
     */
    UploadsComponent.prototype.onRemove = /**
     * @param {?} f
     * @return {?}
     */
    function (f) {
        this.remove.emit(f);
    };
    UploadsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-uploads',
                    template: "<div class=\"uploads\" [style.height]=\"height\" [style.width]=\"width\">\n  <iu-file-preview *ngFor=\"let upload of uploads; let first = first; let last = last;\" [file]=\"upload\" [first]=\"first\" [last]=\"last\"\n    [ordered]=\"ordered\" (moveUp)=\"onMoveUp($event)\" (moveDown)=\"onMoveDown($event)\" (remove)=\"onRemove($event)\"></iu-file-preview>\n</div>\n",
                    styles: [".uploads{max-height:420px;max-width:600px;overflow-y:scroll;margin:10px 20px}.uploads::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);border-radius:10px;background-color:#424242}.uploads::-webkit-scrollbar{width:12px;background-color:#424242}.uploads::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3)}.uploads .dragging{background-color:#424242}"],
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    /** @nocollapse */
    UploadsComponent.ctorParameters = function () { return []; };
    UploadsComponent.propDecorators = {
        uploads: [{ type: Input }],
        height: [{ type: Input }],
        width: [{ type: Input }],
        ordered: [{ type: Input }],
        moveUp: [{ type: Output }],
        moveDown: [{ type: Output }],
        remove: [{ type: Output }]
    };
    return UploadsComponent;
}());
export { UploadsComponent };
function UploadsComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    UploadsComponent.prototype.uploads;
    /** @type {?} */
    UploadsComponent.prototype.height;
    /** @type {?} */
    UploadsComponent.prototype.width;
    /** @type {?} */
    UploadsComponent.prototype.ordered;
    /** @type {?} */
    UploadsComponent.prototype.moveUp;
    /** @type {?} */
    UploadsComponent.prototype.moveDown;
    /** @type {?} */
    UploadsComponent.prototype.remove;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2Fkcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmlsZS11cGxvYWQvdXBsb2Fkcy91cGxvYWRzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUF3QjlGO3VCQVJpQyxFQUFFO3VCQUdoQixJQUFJO3NCQUNKLElBQUksWUFBWSxFQUFjO3dCQUM1QixJQUFJLFlBQVksRUFBYztzQkFDaEMsSUFBSSxZQUFZLEVBQWM7S0FFaEM7Ozs7O0lBRWpCLG1DQUFROzs7O0lBQVIsVUFBUyxDQUFhO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3JCOzs7OztJQUVELHFDQUFVOzs7O0lBQVYsVUFBVyxDQUFhO1FBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3ZCOzs7OztJQUVELG1DQUFROzs7O0lBQVIsVUFBUyxDQUFhO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3JCOztnQkFoQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QixRQUFRLEVBQUUsK1dBSVg7b0JBQ0MsTUFBTSxFQUFFLENBQUMsOFpBQThaLENBQUM7b0JBQ3hhLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7Ozs7MEJBR0UsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7MEJBQ0wsS0FBSzt5QkFDTCxNQUFNOzJCQUNOLE1BQU07eUJBQ04sTUFBTTs7MkJBdEJUOztTQWNhLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBGaWxlVXBsb2FkIH0gZnJvbSAnLi4vZmlsZS11cGxvYWQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpdS11cGxvYWRzJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwidXBsb2Fkc1wiIFtzdHlsZS5oZWlnaHRdPVwiaGVpZ2h0XCIgW3N0eWxlLndpZHRoXT1cIndpZHRoXCI+XG4gIDxpdS1maWxlLXByZXZpZXcgKm5nRm9yPVwibGV0IHVwbG9hZCBvZiB1cGxvYWRzOyBsZXQgZmlyc3QgPSBmaXJzdDsgbGV0IGxhc3QgPSBsYXN0O1wiIFtmaWxlXT1cInVwbG9hZFwiIFtmaXJzdF09XCJmaXJzdFwiIFtsYXN0XT1cImxhc3RcIlxuICAgIFtvcmRlcmVkXT1cIm9yZGVyZWRcIiAobW92ZVVwKT1cIm9uTW92ZVVwKCRldmVudClcIiAobW92ZURvd24pPVwib25Nb3ZlRG93bigkZXZlbnQpXCIgKHJlbW92ZSk9XCJvblJlbW92ZSgkZXZlbnQpXCI+PC9pdS1maWxlLXByZXZpZXc+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2AudXBsb2Fkc3ttYXgtaGVpZ2h0OjQyMHB4O21heC13aWR0aDo2MDBweDtvdmVyZmxvdy15OnNjcm9sbDttYXJnaW46MTBweCAyMHB4fS51cGxvYWRzOjotd2Via2l0LXNjcm9sbGJhci10cmFja3std2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTtib3JkZXItcmFkaXVzOjEwcHg7YmFja2dyb3VuZC1jb2xvcjojNDI0MjQyfS51cGxvYWRzOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDoxMnB4O2JhY2tncm91bmQtY29sb3I6IzQyNDI0Mn0udXBsb2Fkczo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7Ym9yZGVyLXJhZGl1czoxMHB4Oy13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpfS51cGxvYWRzIC5kcmFnZ2luZ3tiYWNrZ3JvdW5kLWNvbG9yOiM0MjQyNDJ9YF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFVwbG9hZHNDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIHVwbG9hZHM6IEZpbGVVcGxvYWRbXSA9IFtdO1xuICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcbiAgQElucHV0KCkgd2lkdGg6IG51bWJlcjtcbiAgQElucHV0KCkgb3JkZXJlZCA9IHRydWU7XG4gIEBPdXRwdXQoKSBtb3ZlVXAgPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVVcGxvYWQ+KCk7XG4gIEBPdXRwdXQoKSBtb3ZlRG93biA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZVVwbG9hZD4oKTtcbiAgQE91dHB1dCgpIHJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZVVwbG9hZD4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG9uTW92ZVVwKGY6IEZpbGVVcGxvYWQpIHtcbiAgICB0aGlzLm1vdmVVcC5lbWl0KGYpO1xuICB9XG5cbiAgb25Nb3ZlRG93bihmOiBGaWxlVXBsb2FkKSB7XG4gICAgdGhpcy5tb3ZlRG93bi5lbWl0KGYpO1xuICB9XG5cbiAgb25SZW1vdmUoZjogRmlsZVVwbG9hZCkge1xuICAgIHRoaXMucmVtb3ZlLmVtaXQoZik7XG4gIH1cblxufVxuIl19
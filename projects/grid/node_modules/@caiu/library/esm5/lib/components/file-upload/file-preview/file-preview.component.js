/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { FileUpload } from '../file-upload.model';
var FilePreviewComponent = /** @class */ (function () {
    function FilePreviewComponent() {
        this.file = new FileUpload();
        this.ordered = true;
        this.first = false;
        this.last = false;
        this.moveUp = new EventEmitter();
        this.moveDown = new EventEmitter();
        this.remove = new EventEmitter();
    }
    Object.defineProperty(FilePreviewComponent.prototype, "cursorStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.ordered ? 'move' : 'default';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FilePreviewComponent.prototype, "graphic", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.file.loading) {
                return 'cloud_upload';
            }
            else if (this.file.isImage) {
                return 'image';
            }
            else {
                switch (this.file.extension) {
                    case 'pdf':
                        return 'picture_as_pdf';
                    default:
                        return 'cloud_done';
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FilePreviewComponent.prototype, "showImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.graphic === 'image';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FilePreviewComponent.prototype, "showUpArrow", {
        get: /**
         * @return {?}
         */
        function () {
            return this.ordered && !this.first;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FilePreviewComponent.prototype, "showDownArrow", {
        get: /**
         * @return {?}
         */
        function () {
            return this.ordered && !this.last;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FilePreviewComponent.prototype.onMoveUp = /**
     * @return {?}
     */
    function () {
        this.moveUp.emit(this.file);
    };
    /**
     * @return {?}
     */
    FilePreviewComponent.prototype.onMoveDown = /**
     * @return {?}
     */
    function () {
        this.moveDown.emit(this.file);
    };
    /**
     * @return {?}
     */
    FilePreviewComponent.prototype.onRemove = /**
     * @return {?}
     */
    function () {
        this.remove.emit(this.file);
    };
    FilePreviewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-file-preview',
                    template: "<mat-card class=\"file-preview\" [style.cursor]=\"cursorStyle\">\n  <div class=\"graphic\">\n    <img *ngIf=\"showImage\" [src]=\"file.src\" [style.height]=\"height\" [style.width]=\"width\">\n    <mat-icon *ngIf=\"!showImage\" class=\"icon-graphic\">{{ graphic }}</mat-icon>\n  </div>\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"file.loading\"></mat-progress-bar>\n  <div class=\"file-info\">\n    <span class=\"file-name\">{{ file.name }}</span>\n  </div>\n  <mat-icon *ngIf=\"showUpArrow\" class=\"up-arrow\" (click)=\"onMoveUp()\">keyboard_arrow_up</mat-icon>\n  <mat-icon *ngIf=\"showDownArrow\" class=\"down-arrow\" (click)=\"onMoveDown()\">keyboard_arrow_down</mat-icon>\n  <mat-icon class=\"remove-upload\" (click)=\"onRemove()\">cancel</mat-icon>\n</mat-card>\n",
                    styles: [".file-preview{height:80px;margin:2px 0;position:relative}.mat-card{padding:0}.file-preview img{max-height:72px}.graphic{position:absolute;left:50px;height:72px;max-width:200px;text-align:center;padding-left:20px;overflow:hidden}.icon-graphic{font-size:72px;height:72px;width:72px}.mat-progress-bar{position:absolute;left:0;top:73px}.file-info{position:absolute;left:250px;height:72px;max-width:300px;text-align:center}.file-name{margin:18px 6px;display:inline-block;line-height:36px;font-size:16px;height:36px;font-weight:700;color:#000}.arrow,.down-arrow,.up-arrow{cursor:pointer}.up-arrow{position:absolute;left:6px;top:0;font-size:36px;height:36px;width:36px;font-weight:700}.down-arrow{position:absolute;left:6px;top:36px;font-size:36px;height:36px;width:36px;font-weight:700}.remove-upload{cursor:pointer;position:absolute;right:10px;top:20px;font-size:40px;height:40px;width:40px}.down-arrow:hover,.up-arrow:hover{color:#fff}"]
                },] },
    ];
    /** @nocollapse */
    FilePreviewComponent.ctorParameters = function () { return []; };
    FilePreviewComponent.propDecorators = {
        file: [{ type: Input }],
        height: [{ type: Input }],
        width: [{ type: Input }],
        ordered: [{ type: Input }],
        first: [{ type: Input }],
        last: [{ type: Input }],
        moveUp: [{ type: Output }],
        moveDown: [{ type: Output }],
        remove: [{ type: Output }]
    };
    return FilePreviewComponent;
}());
export { FilePreviewComponent };
function FilePreviewComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FilePreviewComponent.prototype.file;
    /** @type {?} */
    FilePreviewComponent.prototype.height;
    /** @type {?} */
    FilePreviewComponent.prototype.width;
    /** @type {?} */
    FilePreviewComponent.prototype.ordered;
    /** @type {?} */
    FilePreviewComponent.prototype.first;
    /** @type {?} */
    FilePreviewComponent.prototype.last;
    /** @type {?} */
    FilePreviewComponent.prototype.moveUp;
    /** @type {?} */
    FilePreviewComponent.prototype.moveDown;
    /** @type {?} */
    FilePreviewComponent.prototype.remove;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1wcmV2aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9maWxlLXVwbG9hZC9maWxlLXByZXZpZXcvZmlsZS1wcmV2aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0lBZ0NoRDtvQkFWNEIsSUFBSSxVQUFVLEVBQUU7dUJBR3pCLElBQUk7cUJBQ04sS0FBSztvQkFDTixLQUFLO3NCQUNGLElBQUksWUFBWSxFQUFjO3dCQUM1QixJQUFJLFlBQVksRUFBYztzQkFDaEMsSUFBSSxZQUFZLEVBQWM7S0FFaEM7SUFFakIsc0JBQUksNkNBQVc7Ozs7UUFBZjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztTQUMxQzs7O09BQUE7SUFFRCxzQkFBSSx5Q0FBTzs7OztRQUFYO1lBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLENBQUMsY0FBYyxDQUFDO2FBQ3ZCO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsTUFBTSxDQUFDLE9BQU8sQ0FBQzthQUNoQjtZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztvQkFDNUIsS0FBSyxLQUFLO3dCQUNSLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDMUI7d0JBQ0UsTUFBTSxDQUFDLFlBQVksQ0FBQztpQkFDdkI7YUFDRjtTQUNGOzs7T0FBQTtJQUVELHNCQUFJLDJDQUFTOzs7O1FBQWI7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyxPQUFPLENBQUM7U0FDakM7OztPQUFBO0lBRUQsc0JBQUksNkNBQVc7Ozs7UUFBZjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNwQzs7O09BQUE7SUFFRCxzQkFBSSwrQ0FBYTs7OztRQUFqQjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztTQUNuQzs7O09BQUE7Ozs7SUFFRCx1Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDN0I7Ozs7SUFFRCx5Q0FBVTs7O0lBQVY7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDL0I7Ozs7SUFFRCx1Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDN0I7O2dCQXpFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsUUFBUSxFQUFFLDR3QkFhWDtvQkFDQyxNQUFNLEVBQUUsQ0FBQyxxNkJBQXE2QixDQUFDO2lCQUNoN0I7Ozs7O3VCQUdFLEtBQUs7eUJBQ0wsS0FBSzt3QkFDTCxLQUFLOzBCQUNMLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLE1BQU07MkJBQ04sTUFBTTt5QkFDTixNQUFNOzsrQkFoQ1Q7O1NBc0JhLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEZpbGVVcGxvYWQgfSBmcm9tICcuLi9maWxlLXVwbG9hZC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l1LWZpbGUtcHJldmlldycsXG4gIHRlbXBsYXRlOiBgPG1hdC1jYXJkIGNsYXNzPVwiZmlsZS1wcmV2aWV3XCIgW3N0eWxlLmN1cnNvcl09XCJjdXJzb3JTdHlsZVwiPlxuICA8ZGl2IGNsYXNzPVwiZ3JhcGhpY1wiPlxuICAgIDxpbWcgKm5nSWY9XCJzaG93SW1hZ2VcIiBbc3JjXT1cImZpbGUuc3JjXCIgW3N0eWxlLmhlaWdodF09XCJoZWlnaHRcIiBbc3R5bGUud2lkdGhdPVwid2lkdGhcIj5cbiAgICA8bWF0LWljb24gKm5nSWY9XCIhc2hvd0ltYWdlXCIgY2xhc3M9XCJpY29uLWdyYXBoaWNcIj57eyBncmFwaGljIH19PC9tYXQtaWNvbj5cbiAgPC9kaXY+XG4gIDxtYXQtcHJvZ3Jlc3MtYmFyIG1vZGU9XCJpbmRldGVybWluYXRlXCIgKm5nSWY9XCJmaWxlLmxvYWRpbmdcIj48L21hdC1wcm9ncmVzcy1iYXI+XG4gIDxkaXYgY2xhc3M9XCJmaWxlLWluZm9cIj5cbiAgICA8c3BhbiBjbGFzcz1cImZpbGUtbmFtZVwiPnt7IGZpbGUubmFtZSB9fTwvc3Bhbj5cbiAgPC9kaXY+XG4gIDxtYXQtaWNvbiAqbmdJZj1cInNob3dVcEFycm93XCIgY2xhc3M9XCJ1cC1hcnJvd1wiIChjbGljayk9XCJvbk1vdmVVcCgpXCI+a2V5Ym9hcmRfYXJyb3dfdXA8L21hdC1pY29uPlxuICA8bWF0LWljb24gKm5nSWY9XCJzaG93RG93bkFycm93XCIgY2xhc3M9XCJkb3duLWFycm93XCIgKGNsaWNrKT1cIm9uTW92ZURvd24oKVwiPmtleWJvYXJkX2Fycm93X2Rvd248L21hdC1pY29uPlxuICA8bWF0LWljb24gY2xhc3M9XCJyZW1vdmUtdXBsb2FkXCIgKGNsaWNrKT1cIm9uUmVtb3ZlKClcIj5jYW5jZWw8L21hdC1pY29uPlxuPC9tYXQtY2FyZD5cbmAsXG4gIHN0eWxlczogW2AuZmlsZS1wcmV2aWV3e2hlaWdodDo4MHB4O21hcmdpbjoycHggMDtwb3NpdGlvbjpyZWxhdGl2ZX0ubWF0LWNhcmR7cGFkZGluZzowfS5maWxlLXByZXZpZXcgaW1ne21heC1oZWlnaHQ6NzJweH0uZ3JhcGhpY3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjUwcHg7aGVpZ2h0OjcycHg7bWF4LXdpZHRoOjIwMHB4O3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmctbGVmdDoyMHB4O292ZXJmbG93OmhpZGRlbn0uaWNvbi1ncmFwaGlje2ZvbnQtc2l6ZTo3MnB4O2hlaWdodDo3MnB4O3dpZHRoOjcycHh9Lm1hdC1wcm9ncmVzcy1iYXJ7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDo3M3B4fS5maWxlLWluZm97cG9zaXRpb246YWJzb2x1dGU7bGVmdDoyNTBweDtoZWlnaHQ6NzJweDttYXgtd2lkdGg6MzAwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LmZpbGUtbmFtZXttYXJnaW46MThweCA2cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7bGluZS1oZWlnaHQ6MzZweDtmb250LXNpemU6MTZweDtoZWlnaHQ6MzZweDtmb250LXdlaWdodDo3MDA7Y29sb3I6IzAwMH0uYXJyb3csLmRvd24tYXJyb3csLnVwLWFycm93e2N1cnNvcjpwb2ludGVyfS51cC1hcnJvd3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjZweDt0b3A6MDtmb250LXNpemU6MzZweDtoZWlnaHQ6MzZweDt3aWR0aDozNnB4O2ZvbnQtd2VpZ2h0OjcwMH0uZG93bi1hcnJvd3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjZweDt0b3A6MzZweDtmb250LXNpemU6MzZweDtoZWlnaHQ6MzZweDt3aWR0aDozNnB4O2ZvbnQtd2VpZ2h0OjcwMH0ucmVtb3ZlLXVwbG9hZHtjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxMHB4O3RvcDoyMHB4O2ZvbnQtc2l6ZTo0MHB4O2hlaWdodDo0MHB4O3dpZHRoOjQwcHh9LmRvd24tYXJyb3c6aG92ZXIsLnVwLWFycm93OmhvdmVye2NvbG9yOiNmZmZ9YF1cbn0pXG5leHBvcnQgY2xhc3MgRmlsZVByZXZpZXdDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGZpbGU6IEZpbGVVcGxvYWQgPSBuZXcgRmlsZVVwbG9hZCgpO1xuICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcbiAgQElucHV0KCkgd2lkdGg6IG51bWJlcjtcbiAgQElucHV0KCkgb3JkZXJlZCA9IHRydWU7XG4gIEBJbnB1dCgpIGZpcnN0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxhc3QgPSBmYWxzZTtcbiAgQE91dHB1dCgpIG1vdmVVcCA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZVVwbG9hZD4oKTtcbiAgQE91dHB1dCgpIG1vdmVEb3duID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlVXBsb2FkPigpO1xuICBAT3V0cHV0KCkgcmVtb3ZlID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlVXBsb2FkPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgZ2V0IGN1cnNvclN0eWxlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMub3JkZXJlZCA/ICdtb3ZlJyA6ICdkZWZhdWx0JztcbiAgfVxuXG4gIGdldCBncmFwaGljKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuZmlsZS5sb2FkaW5nKSB7XG4gICAgICByZXR1cm4gJ2Nsb3VkX3VwbG9hZCc7XG4gICAgfSBlbHNlIGlmICh0aGlzLmZpbGUuaXNJbWFnZSkge1xuICAgICAgcmV0dXJuICdpbWFnZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXRjaCAodGhpcy5maWxlLmV4dGVuc2lvbikge1xuICAgICAgICBjYXNlICdwZGYnOlxuICAgICAgICAgIHJldHVybiAncGljdHVyZV9hc19wZGYnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiAnY2xvdWRfZG9uZSc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0IHNob3dJbWFnZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5ncmFwaGljID09PSAnaW1hZ2UnO1xuICB9XG5cbiAgZ2V0IHNob3dVcEFycm93KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLm9yZGVyZWQgJiYgIXRoaXMuZmlyc3Q7XG4gIH1cblxuICBnZXQgc2hvd0Rvd25BcnJvdygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5vcmRlcmVkICYmICF0aGlzLmxhc3Q7XG4gIH1cblxuICBvbk1vdmVVcCgpIHtcbiAgICB0aGlzLm1vdmVVcC5lbWl0KHRoaXMuZmlsZSk7XG4gIH1cblxuICBvbk1vdmVEb3duKCkge1xuICAgIHRoaXMubW92ZURvd24uZW1pdCh0aGlzLmZpbGUpO1xuICB9XG5cbiAgb25SZW1vdmUoKSB7XG4gICAgdGhpcy5yZW1vdmUuZW1pdCh0aGlzLmZpbGUpO1xuICB9XG5cbn1cbiJdfQ==
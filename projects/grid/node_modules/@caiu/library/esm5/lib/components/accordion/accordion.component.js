/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
var AccordionComponent = /** @class */ (function () {
    function AccordionComponent() {
        this.active = true;
        this.opened = true;
        this.showArrow = false;
        this.closeStart = new EventEmitter();
        this.closeDone = new EventEmitter();
        this.openStart = new EventEmitter();
        this.openDone = new EventEmitter();
    }
    /**
     * @return {?}
     */
    AccordionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    AccordionComponent.prototype.toggle = /**
     * @return {?}
     */
    function () {
        this.opened = !this.opened;
    };
    /**
     * @return {?}
     */
    AccordionComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.opened = true;
    };
    /**
     * @return {?}
     */
    AccordionComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.opened = false;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    AccordionComponent.prototype.onStart = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (this.opened) {
            this.openStart.emit();
        }
        else {
            this.closeStart.emit();
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    AccordionComponent.prototype.onDone = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (this.opened) {
            this.openDone.emit();
        }
        else {
            this.closeDone.emit();
        }
    };
    /**
     * @return {?}
     */
    AccordionComponent.prototype.onClickTrigger = /**
     * @return {?}
     */
    function () {
        if (this.active) {
            this.toggle();
        }
    };
    AccordionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-accordion',
                    template: "<div class=\"accordion\">\n  <div class=\"trigger-wrapper\" (click)=\"onClickTrigger()\" [class.active]=\"active\">\n    <ng-content select=\".accordion-trigger\"></ng-content>\n  </div>\n  <div class=\"content-wrapper\" [@toggle]=\"opened ? 'show' : 'hide'\" (@toggle.start)=\"onStart($event)\" (@toggle.done)=\"onDone($event)\">\n    <ng-content select=\".accordion-content\"></ng-content>\n  </div>\n</div>",
                    styles: [".trigger-wrapper{position:relative;padding:0}.trigger-wrapper.active{cursor:pointer}.content-wrapper{overflow:hidden;clear:both}.mat-icon{position:absolute;right:2%;top:25%;color:#fff;font-size:32px;height:50%;font-weight:700}"],
                    animations: [
                        trigger('toggle', [
                            state('*', style({ height: '0px' })),
                            state('show', style({ height: '*' })),
                            state('hide', style({ height: '0px' })),
                            transition('show <=> hide', [
                                animate('300ms ease-out')
                            ])
                        ])
                    ]
                },] },
    ];
    /** @nocollapse */
    AccordionComponent.ctorParameters = function () { return []; };
    AccordionComponent.propDecorators = {
        active: [{ type: Input }],
        opened: [{ type: Input }],
        showArrow: [{ type: Input }],
        closeStart: [{ type: Output }],
        closeDone: [{ type: Output }],
        openStart: [{ type: Output }],
        openDone: [{ type: Output }]
    };
    return AccordionComponent;
}());
export { AccordionComponent };
function AccordionComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    AccordionComponent.prototype.active;
    /** @type {?} */
    AccordionComponent.prototype.opened;
    /** @type {?} */
    AccordionComponent.prototype.showArrow;
    /** @type {?} */
    AccordionComponent.prototype.closeStart;
    /** @type {?} */
    AccordionComponent.prototype.closeDone;
    /** @type {?} */
    AccordionComponent.prototype.openStart;
    /** @type {?} */
    AccordionComponent.prototype.openDone;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9hY2NvcmRpb24vYWNjb3JkaW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDOztJQWtDL0U7c0JBUmtCLElBQUk7c0JBQ0osSUFBSTt5QkFDRCxLQUFLOzBCQUNILElBQUksWUFBWSxFQUFFO3lCQUNuQixJQUFJLFlBQVksRUFBRTt5QkFDbEIsSUFBSSxZQUFZLEVBQUU7d0JBQ25CLElBQUksWUFBWSxFQUFFO0tBRXRCOzs7O0lBRWpCLHFDQUFROzs7SUFBUjtLQUNDOzs7O0lBRUQsbUNBQU07OztJQUFOO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7S0FDNUI7Ozs7SUFFRCxpQ0FBSTs7O0lBQUo7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztLQUNwQjs7OztJQUVELGtDQUFLOzs7SUFBTDtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0tBQ3JCOzs7OztJQUVELG9DQUFPOzs7O0lBQVAsVUFBUSxDQUFNO1FBQ1osRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN2QjtRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN4QjtLQUNGOzs7OztJQUVELG1DQUFNOzs7O0lBQU4sVUFBTyxDQUFNO1FBQ1gsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN0QjtRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN2QjtLQUNGOzs7O0lBRUQsMkNBQWM7OztJQUFkO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2Y7S0FDRjs7Z0JBckVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsUUFBUSxFQUFFLDJaQU9MO29CQUNMLE1BQU0sRUFBRSxDQUFDLG9PQUFvTyxDQUFDO29CQUM5TyxVQUFVLEVBQUU7d0JBQ1YsT0FBTyxDQUFDLFFBQVEsRUFBRTs0QkFDaEIsS0FBSyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQzs0QkFDcEMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQzs0QkFDckMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQzs0QkFDdkMsVUFBVSxDQUFDLGVBQWUsRUFBRTtnQ0FDMUIsT0FBTyxDQUFDLGdCQUFnQixDQUFDOzZCQUMxQixDQUFDO3lCQUNILENBQUM7cUJBQ0g7aUJBQ0Y7Ozs7O3lCQUdFLEtBQUs7eUJBQ0wsS0FBSzs0QkFDTCxLQUFLOzZCQUNMLE1BQU07NEJBQ04sTUFBTTs0QkFDTixNQUFNOzJCQUNOLE1BQU07OzZCQWpDVDs7U0F5QmEsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB0cmlnZ2VyLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIGFuaW1hdGUgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXUtYWNjb3JkaW9uJyxcclxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJhY2NvcmRpb25cIj5cclxuICA8ZGl2IGNsYXNzPVwidHJpZ2dlci13cmFwcGVyXCIgKGNsaWNrKT1cIm9uQ2xpY2tUcmlnZ2VyKClcIiBbY2xhc3MuYWN0aXZlXT1cImFjdGl2ZVwiPlxyXG4gICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiLmFjY29yZGlvbi10cmlnZ2VyXCI+PC9uZy1jb250ZW50PlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJjb250ZW50LXdyYXBwZXJcIiBbQHRvZ2dsZV09XCJvcGVuZWQgPyAnc2hvdycgOiAnaGlkZSdcIiAoQHRvZ2dsZS5zdGFydCk9XCJvblN0YXJ0KCRldmVudClcIiAoQHRvZ2dsZS5kb25lKT1cIm9uRG9uZSgkZXZlbnQpXCI+XHJcbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCIuYWNjb3JkaW9uLWNvbnRlbnRcIj48L25nLWNvbnRlbnQ+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PmAsXHJcbiAgc3R5bGVzOiBbYC50cmlnZ2VyLXdyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowfS50cmlnZ2VyLXdyYXBwZXIuYWN0aXZle2N1cnNvcjpwb2ludGVyfS5jb250ZW50LXdyYXBwZXJ7b3ZlcmZsb3c6aGlkZGVuO2NsZWFyOmJvdGh9Lm1hdC1pY29ue3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjIlO3RvcDoyNSU7Y29sb3I6I2ZmZjtmb250LXNpemU6MzJweDtoZWlnaHQ6NTAlO2ZvbnQtd2VpZ2h0OjcwMH1gXSxcclxuICBhbmltYXRpb25zOiBbXHJcbiAgICB0cmlnZ2VyKCd0b2dnbGUnLCBbXHJcbiAgICAgIHN0YXRlKCcqJywgc3R5bGUoeyBoZWlnaHQ6ICcwcHgnIH0pKSxcclxuICAgICAgc3RhdGUoJ3Nob3cnLCBzdHlsZSh7IGhlaWdodDogJyonIH0pKSxcclxuICAgICAgc3RhdGUoJ2hpZGUnLCBzdHlsZSh7IGhlaWdodDogJzBweCcgfSkpLFxyXG4gICAgICB0cmFuc2l0aW9uKCdzaG93IDw9PiBoaWRlJywgW1xyXG4gICAgICAgIGFuaW1hdGUoJzMwMG1zIGVhc2Utb3V0JylcclxuICAgICAgXSlcclxuICAgIF0pXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWNjb3JkaW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgYWN0aXZlID0gdHJ1ZTtcclxuICBASW5wdXQoKSBvcGVuZWQgPSB0cnVlO1xyXG4gIEBJbnB1dCgpIHNob3dBcnJvdyA9IGZhbHNlO1xyXG4gIEBPdXRwdXQoKSBjbG9zZVN0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBjbG9zZURvbmUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIG9wZW5TdGFydCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgb3BlbkRvbmUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlKCkge1xyXG4gICAgdGhpcy5vcGVuZWQgPSAhdGhpcy5vcGVuZWQ7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5vcGVuZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLm9wZW5lZCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgb25TdGFydChlOiBhbnkpIHtcclxuICAgIGlmICh0aGlzLm9wZW5lZCkge1xyXG4gICAgICB0aGlzLm9wZW5TdGFydC5lbWl0KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsb3NlU3RhcnQuZW1pdCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25Eb25lKGU6IGFueSkge1xyXG4gICAgaWYgKHRoaXMub3BlbmVkKSB7XHJcbiAgICAgIHRoaXMub3BlbkRvbmUuZW1pdCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbG9zZURvbmUuZW1pdCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25DbGlja1RyaWdnZXIoKSB7XHJcbiAgICBpZiAodGhpcy5hY3RpdmUpIHtcclxuICAgICAgdGhpcy50b2dnbGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==
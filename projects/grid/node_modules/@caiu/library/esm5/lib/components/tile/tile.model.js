/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Dimensions, Image, Coordinates } from '../../shared/models';
var Tile = /** @class */ (function () {
    function Tile() {
        this.id = 0;
        this.cellHeight = 0;
        this.cellWidth = 0;
        this.color = '#fff';
        this.name = '';
        this.src = '';
        this.text = '';
        this._coordinates = new Coordinates();
        this._dimensions = new Dimensions();
        this._image = new Image();
    }
    Object.defineProperty(Tile.prototype, "coordinates", {
        get: /**
         * @return {?}
         */
        function () {
            return this._coordinates || new Coordinates();
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._coordinates = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "dimensions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dimensions || new Dimensions();
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._dimensions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "image", {
        get: /**
         * @return {?}
         */
        function () {
            return this._image || new Image();
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._image = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "height", {
        get: /**
         * @return {?}
         */
        function () {
            return this.rows * this.cellHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            return this.columns * this.cellWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "imageSrc", {
        get: /**
         * @return {?}
         */
        function () {
            return this.image.src;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "imageHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this.image.height * this.scale;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "imageWidth", {
        get: /**
         * @return {?}
         */
        function () {
            return this.image.width * this.scale;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "rows", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dimensions.rows;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "columns", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dimensions.columns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "positionTop", {
        get: /**
         * @return {?}
         */
        function () {
            return this.startRow * this.cellHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "positionLeft", {
        get: /**
         * @return {?}
         */
        function () {
            return this.startColumn * this.cellWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "approxRatio", {
        get: /**
         * @return {?}
         */
        function () {
            return this.rows * this.cellHeight / this.columns * this.cellWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "ratio", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dimensions.ratio;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "scale", {
        get: /**
         * @return {?}
         */
        function () {
            return this.heightScale >= this.widthScale ? this.heightScale : this.widthScale;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "heightScale", {
        get: /**
         * @return {?}
         */
        function () {
            return (this.rows * this.cellHeight) / this.image.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "widthScale", {
        get: /**
         * @return {?}
         */
        function () {
            return (this.columns * this.cellWidth) / this.image.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "startRow", {
        get: /**
         * @return {?}
         */
        function () {
            return this.coordinates.row;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "startColumn", {
        get: /**
         * @return {?}
         */
        function () {
            return this.coordinates.column;
        },
        enumerable: true,
        configurable: true
    });
    return Tile;
}());
export { Tile };
function Tile_tsickle_Closure_declarations() {
    /** @type {?} */
    Tile.prototype.id;
    /** @type {?} */
    Tile.prototype.cellHeight;
    /** @type {?} */
    Tile.prototype.cellWidth;
    /** @type {?} */
    Tile.prototype.color;
    /** @type {?} */
    Tile.prototype.name;
    /** @type {?} */
    Tile.prototype.src;
    /** @type {?} */
    Tile.prototype.text;
    /** @type {?} */
    Tile.prototype._coordinates;
    /** @type {?} */
    Tile.prototype._dimensions;
    /** @type {?} */
    Tile.prototype._image;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWxlL3RpbGUubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXJFLElBQUE7O2tCQUNTLENBQUM7MEJBQ08sQ0FBQzt5QkFDRixDQUFDO3FCQUNMLE1BQU07b0JBQ1AsRUFBRTttQkFDSCxFQUFFO29CQUNELEVBQUU7NEJBRW1CLElBQUksV0FBVyxFQUFFOzJCQUNuQixJQUFJLFVBQVUsRUFBRTtzQkFDMUIsSUFBSSxLQUFLLEVBQUU7O0lBRTNCLHNCQUFJLDZCQUFXOzs7O1FBQWY7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLFdBQVcsRUFBRSxDQUFDO1NBQ2pEOzs7OztRQUVELFVBQWdCLEtBQWtCO1lBQzlCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1NBQzdCOzs7T0FKQTtJQU1ELHNCQUFJLDRCQUFVOzs7O1FBQWQ7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLFVBQVUsRUFBRSxDQUFDO1NBQy9DOzs7OztRQUVELFVBQWUsS0FBaUI7WUFDNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDNUI7OztPQUpBO0lBTUQsc0JBQUksdUJBQUs7Ozs7UUFBVDtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFLENBQUM7U0FDckM7Ozs7O1FBRUQsVUFBVSxLQUFZO1lBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCOzs7T0FKQTtJQU1ELHNCQUFJLHdCQUFNOzs7O1FBQVY7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1NBQ3RDOzs7T0FBQTtJQUVELHNCQUFJLHVCQUFLOzs7O1FBQVQ7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQ3hDOzs7T0FBQTtJQUVELHNCQUFJLDBCQUFROzs7O1FBQVo7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7U0FDekI7OztPQUFBO0lBRUQsc0JBQUksNkJBQVc7Ozs7UUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1NBQ3pDOzs7T0FBQTtJQUVELHNCQUFJLDRCQUFVOzs7O1FBQWQ7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUN4Qzs7O09BQUE7SUFFRCxzQkFBSSxzQkFBSTs7OztRQUFSO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO1NBQy9COzs7T0FBQTtJQUVELHNCQUFJLHlCQUFPOzs7O1FBQVg7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7U0FDbEM7OztPQUFBO0lBRUQsc0JBQUksNkJBQVc7Ozs7UUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDMUM7OztPQUFBO0lBRUQsc0JBQUksOEJBQVk7Ozs7UUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQzVDOzs7T0FBQTtJQUVELHNCQUFJLDZCQUFXOzs7O1FBQWY7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUN0RTs7O09BQUE7SUFFRCxzQkFBSSx1QkFBSzs7OztRQUFUO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDO1NBQ2hDOzs7T0FBQTtJQUVELHNCQUFJLHVCQUFLOzs7O1FBQVQ7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1NBQ25GOzs7T0FBQTtJQUVELHNCQUFJLDZCQUFXOzs7O1FBQWY7WUFDSSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztTQUM1RDs7O09BQUE7SUFFRCxzQkFBSSw0QkFBVTs7OztRQUFkO1lBQ0ksTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7U0FDN0Q7OztPQUFBO0lBRUQsc0JBQUksMEJBQVE7Ozs7UUFBWjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQztTQUMvQjs7O09BQUE7SUFFRCxzQkFBSSw2QkFBVzs7OztRQUFmO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO1NBQ2xDOzs7T0FBQTtlQXJHTDtJQXVHQyxDQUFBO0FBckdELGdCQXFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpbWVuc2lvbnMsIEltYWdlLCBDb29yZGluYXRlcyB9IGZyb20gJy4uLy4uL3NoYXJlZC9tb2RlbHMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRpbGUge1xyXG4gICAgaWQgPSAwO1xyXG4gICAgY2VsbEhlaWdodCA9IDA7XHJcbiAgICBjZWxsV2lkdGggPSAwO1xyXG4gICAgY29sb3IgPSAnI2ZmZic7XHJcbiAgICBuYW1lID0gJyc7XHJcbiAgICBzcmMgPSAnJztcclxuICAgIHRleHQgPSAnJztcclxuXHJcbiAgICBfY29vcmRpbmF0ZXM6IENvb3JkaW5hdGVzID0gbmV3IENvb3JkaW5hdGVzKCk7XHJcbiAgICBfZGltZW5zaW9uczogRGltZW5zaW9ucyA9IG5ldyBEaW1lbnNpb25zKCk7XHJcbiAgICBfaW1hZ2U6IEltYWdlID0gbmV3IEltYWdlKCk7XHJcblxyXG4gICAgZ2V0IGNvb3JkaW5hdGVzKCk6IENvb3JkaW5hdGVzIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29vcmRpbmF0ZXMgfHwgbmV3IENvb3JkaW5hdGVzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGNvb3JkaW5hdGVzKHZhbHVlOiBDb29yZGluYXRlcykge1xyXG4gICAgICAgIHRoaXMuX2Nvb3JkaW5hdGVzID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGRpbWVuc2lvbnMoKTogRGltZW5zaW9ucyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RpbWVuc2lvbnMgfHwgbmV3IERpbWVuc2lvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZGltZW5zaW9ucyh2YWx1ZTogRGltZW5zaW9ucykge1xyXG4gICAgICAgIHRoaXMuX2RpbWVuc2lvbnMgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaW1hZ2UoKTogSW1hZ2Uge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbWFnZSB8fCBuZXcgSW1hZ2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgaW1hZ2UodmFsdWU6IEltYWdlKSB7XHJcbiAgICAgICAgdGhpcy5faW1hZ2UgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaGVpZ2h0KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm93cyAqIHRoaXMuY2VsbEhlaWdodDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgd2lkdGgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zICogdGhpcy5jZWxsV2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGltYWdlU3JjKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1hZ2Uuc3JjO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbWFnZUhlaWdodCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlLmhlaWdodCAqIHRoaXMuc2NhbGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGltYWdlV2lkdGgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pbWFnZS53aWR0aCAqIHRoaXMuc2NhbGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHJvd3MoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kaW1lbnNpb25zLnJvd3M7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGNvbHVtbnMoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kaW1lbnNpb25zLmNvbHVtbnM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHBvc2l0aW9uVG9wKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnRSb3cgKiB0aGlzLmNlbGxIZWlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHBvc2l0aW9uTGVmdCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN0YXJ0Q29sdW1uICogdGhpcy5jZWxsV2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGFwcHJveFJhdGlvKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm93cyAqIHRoaXMuY2VsbEhlaWdodCAvIHRoaXMuY29sdW1ucyAqIHRoaXMuY2VsbFdpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCByYXRpbygpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRpbWVuc2lvbnMucmF0aW87XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHNjYWxlKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0U2NhbGUgPj0gdGhpcy53aWR0aFNjYWxlID8gdGhpcy5oZWlnaHRTY2FsZSA6IHRoaXMud2lkdGhTY2FsZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaGVpZ2h0U2NhbGUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gKHRoaXMucm93cyAqIHRoaXMuY2VsbEhlaWdodCkgLyB0aGlzLmltYWdlLmhlaWdodDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgd2lkdGhTY2FsZSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiAodGhpcy5jb2x1bW5zICogdGhpcy5jZWxsV2lkdGgpIC8gdGhpcy5pbWFnZS53aWR0aDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgc3RhcnRSb3coKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb29yZGluYXRlcy5yb3c7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHN0YXJ0Q29sdW1uKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29vcmRpbmF0ZXMuY29sdW1uO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
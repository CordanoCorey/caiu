/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { DialogModel } from './dialog.model';
var DialogComponent = /** @class */ (function () {
    function DialogComponent() {
        this.model = new DialogModel();
        this.showActions = true;
        this.showCloseAction = false;
        this.showCloseIcon = true;
        this.defaultActionColor = 'accent';
    }
    Object.defineProperty(DialogComponent.prototype, "actions", {
        get: /**
         * @return {?}
         */
        function () {
            return this.model.actions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogComponent.prototype, "actionWidth", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ actionsCount = Math.max(this.actions.length, 1);
            return 100 / actionsCount + "%";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this.model.title;
        },
        enumerable: true,
        configurable: true
    });
    DialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iu-dialog',
                    template: "<mat-toolbar color=\"primary\" mat-dialog-title>\n  <span class=\"dialog-title\">\n    {{ title }}\n    <button *ngIf=\"showCloseIcon\" mat-button [mat-dialog-close]=\"null\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </span>\n</mat-toolbar>\n<mat-dialog-content class=\"scrollable\">\n  <ng-content></ng-content>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"showActions && actions.length > 0\">\n  <button *ngFor=\"let action of actions\" mat-raised-button [mat-dialog-close]=\"action.value\" [style.width]=\"actionWidth\" [style.color]=\"action.color\">{{ action.label }}</button>\n</mat-dialog-actions>\n<mat-dialog-actions *ngIf=\"showCloseAction && actions.length === 0\">\n  <button mat-raised-button mat-dialog-close=\"close\" [style.width]=\"actionWidth\" [style.color]=\"defaultActionColor\">Close</button>\n</mat-dialog-actions>\n",
                    styles: ["iu-dialog .mat-toolbar{margin:-24px -24px 0;width:calc(100% + 48px);min-height:32px}iu-dialog .mat-toolbar .dialog-title{position:relative;height:calc(100% - 8px);width:100%;margin-top:8px}iu-dialog .mat-toolbar .dialog-title button{cursor:pointer;position:absolute;right:0;top:-5px;border-radius:100%;height:42px;width:42px;min-width:36px}iu-dialog .mat-toolbar .dialog-title button:hover,iu-dialog .mat-toolbar .dialog-title button:hover mat-icon{font-weight:700}iu-dialog .mat-toolbar .dialog-title mat-icon{position:absolute;top:9px;right:8px;z-index:1}iu-dialog .mat-toolbar-row{height:48px}iu-dialog .mat-dialog-actions{margin-left:-24px;margin-right:-24px;color:#fff;padding:0}iu-dialog .mat-dialog-actions button{padding:12px 0}iu-dialog .mat-dialog-actions .mat-accent{color:#fff!important}"],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    DialogComponent.ctorParameters = function () { return []; };
    DialogComponent.propDecorators = {
        model: [{ type: Input }],
        showActions: [{ type: Input }],
        showCloseAction: [{ type: Input }],
        showCloseIcon: [{ type: Input }],
        defaultActionColor: [{ type: Input }]
    };
    return DialogComponent;
}());
export { DialogComponent };
function DialogComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    DialogComponent.prototype.model;
    /** @type {?} */
    DialogComponent.prototype.showActions;
    /** @type {?} */
    DialogComponent.prototype.showCloseAction;
    /** @type {?} */
    DialogComponent.prototype.showCloseIcon;
    /** @type {?} */
    DialogComponent.prototype.defaultActionColor;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kaWFsb2cvZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEUsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7SUFpQ3pEO3FCQU44QixJQUFJLFdBQVcsRUFBRTsyQkFDeEIsSUFBSTsrQkFDQSxLQUFLOzZCQUNQLElBQUk7a0NBQ0MsUUFBUTtLQUVyQjtJQUVqQixzQkFBSSxvQ0FBTzs7OztRQUFYO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO1NBQzNCOzs7T0FBQTtJQUVELHNCQUFJLHdDQUFXOzs7O1FBQWY7WUFDRSxxQkFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN0RCxNQUFNLENBQUksR0FBRyxHQUFHLFlBQVksTUFBRyxDQUFDO1NBQ2pDOzs7T0FBQTtJQUVELHNCQUFJLGtDQUFLOzs7O1FBQVQ7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7U0FDekI7OztPQUFBOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsMjFCQWlCWDtvQkFDQyxNQUFNLEVBQUUsQ0FBQyxpeUJBQWl5QixDQUFDO29CQUMzeUIsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzs7Ozt3QkFHRSxLQUFLOzhCQUNMLEtBQUs7a0NBQ0wsS0FBSztnQ0FDTCxLQUFLO3FDQUNMLEtBQUs7OzBCQWpDUjs7U0EyQmEsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBEaWFsb2dBY3Rpb24sIERpYWxvZ01vZGVsIH0gZnJvbSAnLi9kaWFsb2cubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpdS1kaWFsb2cnLFxyXG4gIHRlbXBsYXRlOiBgPG1hdC10b29sYmFyIGNvbG9yPVwicHJpbWFyeVwiIG1hdC1kaWFsb2ctdGl0bGU+XHJcbiAgPHNwYW4gY2xhc3M9XCJkaWFsb2ctdGl0bGVcIj5cclxuICAgIHt7IHRpdGxlIH19XHJcbiAgICA8YnV0dG9uICpuZ0lmPVwic2hvd0Nsb3NlSWNvblwiIG1hdC1idXR0b24gW21hdC1kaWFsb2ctY2xvc2VdPVwibnVsbFwiPlxyXG4gICAgICA8bWF0LWljb24+Y2xvc2U8L21hdC1pY29uPlxyXG4gICAgPC9idXR0b24+XHJcbiAgPC9zcGFuPlxyXG48L21hdC10b29sYmFyPlxyXG48bWF0LWRpYWxvZy1jb250ZW50IGNsYXNzPVwic2Nyb2xsYWJsZVwiPlxyXG4gIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuPC9tYXQtZGlhbG9nLWNvbnRlbnQ+XHJcbjxtYXQtZGlhbG9nLWFjdGlvbnMgKm5nSWY9XCJzaG93QWN0aW9ucyAmJiBhY3Rpb25zLmxlbmd0aCA+IDBcIj5cclxuICA8YnV0dG9uICpuZ0Zvcj1cImxldCBhY3Rpb24gb2YgYWN0aW9uc1wiIG1hdC1yYWlzZWQtYnV0dG9uIFttYXQtZGlhbG9nLWNsb3NlXT1cImFjdGlvbi52YWx1ZVwiIFtzdHlsZS53aWR0aF09XCJhY3Rpb25XaWR0aFwiIFtzdHlsZS5jb2xvcl09XCJhY3Rpb24uY29sb3JcIj57eyBhY3Rpb24ubGFiZWwgfX08L2J1dHRvbj5cclxuPC9tYXQtZGlhbG9nLWFjdGlvbnM+XHJcbjxtYXQtZGlhbG9nLWFjdGlvbnMgKm5nSWY9XCJzaG93Q2xvc2VBY3Rpb24gJiYgYWN0aW9ucy5sZW5ndGggPT09IDBcIj5cclxuICA8YnV0dG9uIG1hdC1yYWlzZWQtYnV0dG9uIG1hdC1kaWFsb2ctY2xvc2U9XCJjbG9zZVwiIFtzdHlsZS53aWR0aF09XCJhY3Rpb25XaWR0aFwiIFtzdHlsZS5jb2xvcl09XCJkZWZhdWx0QWN0aW9uQ29sb3JcIj5DbG9zZTwvYnV0dG9uPlxyXG48L21hdC1kaWFsb2ctYWN0aW9ucz5cclxuYCxcclxuICBzdHlsZXM6IFtgaXUtZGlhbG9nIC5tYXQtdG9vbGJhcnttYXJnaW46LTI0cHggLTI0cHggMDt3aWR0aDpjYWxjKDEwMCUgKyA0OHB4KTttaW4taGVpZ2h0OjMycHh9aXUtZGlhbG9nIC5tYXQtdG9vbGJhciAuZGlhbG9nLXRpdGxle3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDpjYWxjKDEwMCUgLSA4cHgpO3dpZHRoOjEwMCU7bWFyZ2luLXRvcDo4cHh9aXUtZGlhbG9nIC5tYXQtdG9vbGJhciAuZGlhbG9nLXRpdGxlIGJ1dHRvbntjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDotNXB4O2JvcmRlci1yYWRpdXM6MTAwJTtoZWlnaHQ6NDJweDt3aWR0aDo0MnB4O21pbi13aWR0aDozNnB4fWl1LWRpYWxvZyAubWF0LXRvb2xiYXIgLmRpYWxvZy10aXRsZSBidXR0b246aG92ZXIsaXUtZGlhbG9nIC5tYXQtdG9vbGJhciAuZGlhbG9nLXRpdGxlIGJ1dHRvbjpob3ZlciBtYXQtaWNvbntmb250LXdlaWdodDo3MDB9aXUtZGlhbG9nIC5tYXQtdG9vbGJhciAuZGlhbG9nLXRpdGxlIG1hdC1pY29ue3Bvc2l0aW9uOmFic29sdXRlO3RvcDo5cHg7cmlnaHQ6OHB4O3otaW5kZXg6MX1pdS1kaWFsb2cgLm1hdC10b29sYmFyLXJvd3toZWlnaHQ6NDhweH1pdS1kaWFsb2cgLm1hdC1kaWFsb2ctYWN0aW9uc3ttYXJnaW4tbGVmdDotMjRweDttYXJnaW4tcmlnaHQ6LTI0cHg7Y29sb3I6I2ZmZjtwYWRkaW5nOjB9aXUtZGlhbG9nIC5tYXQtZGlhbG9nLWFjdGlvbnMgYnV0dG9ue3BhZGRpbmc6MTJweCAwfWl1LWRpYWxvZyAubWF0LWRpYWxvZy1hY3Rpb25zIC5tYXQtYWNjZW50e2NvbG9yOiNmZmYhaW1wb3J0YW50fWBdLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIERpYWxvZ0NvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpIG1vZGVsOiBEaWFsb2dNb2RlbCA9IG5ldyBEaWFsb2dNb2RlbCgpO1xyXG4gIEBJbnB1dCgpIHNob3dBY3Rpb25zID0gdHJ1ZTtcclxuICBASW5wdXQoKSBzaG93Q2xvc2VBY3Rpb24gPSBmYWxzZTtcclxuICBASW5wdXQoKSBzaG93Q2xvc2VJY29uID0gdHJ1ZTtcclxuICBASW5wdXQoKSBkZWZhdWx0QWN0aW9uQ29sb3IgPSAnYWNjZW50JztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgZ2V0IGFjdGlvbnMoKTogRGlhbG9nQWN0aW9uW10ge1xyXG4gICAgcmV0dXJuIHRoaXMubW9kZWwuYWN0aW9ucztcclxuICB9XHJcblxyXG4gIGdldCBhY3Rpb25XaWR0aCgpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgYWN0aW9uc0NvdW50ID0gTWF0aC5tYXgodGhpcy5hY3Rpb25zLmxlbmd0aCwgMSk7XHJcbiAgICByZXR1cm4gYCR7MTAwIC8gYWN0aW9uc0NvdW50fSVgO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRpdGxlKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5tb2RlbC50aXRsZTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==
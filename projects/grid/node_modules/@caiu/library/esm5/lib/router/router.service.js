/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable, EventEmitter } from '@angular/core';
import { Router, ActivatedRoute, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, RoutesRecognized } from '@angular/router';
import { Store } from '@ngrx/store';
import { from } from 'rxjs';
import { RouterActions } from './actions';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngrx/store";
var RouterService = /** @class */ (function () {
    function RouterService(_router, _route, store) {
        var _this = this;
        this._router = _router;
        this._route = _route;
        this.store = store;
        this.navigationCancel = new EventEmitter();
        this.navigationEnd = new EventEmitter();
        this.navigationError = new EventEmitter();
        this.navigationStart = new EventEmitter();
        this.routesRecognized = new EventEmitter();
        _router.events.subscribe(function (e) {
            if (e instanceof NavigationCancel) {
                _this.onNavigationCancel(e);
            }
            else if (e instanceof NavigationEnd) {
                _this.onNavigationEnd(e);
            }
            else if (e instanceof NavigationError) {
                _this.onNavigationError(e);
            }
            else if (e instanceof NavigationStart) {
                _this.onNavigationStart(e);
            }
            else if (e instanceof RoutesRecognized) {
                _this.onRoutesRecognized(e);
            }
        });
    }
    /**
     * @param {?} e
     * @return {?}
     */
    RouterService.prototype.onNavigationCancel = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.store.dispatch(RouterActions.navCancel(e));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    RouterService.prototype.onNavigationEnd = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.store.dispatch(RouterActions.navEnd(e));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    RouterService.prototype.onNavigationError = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.store.dispatch(RouterActions.navError(e));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    RouterService.prototype.onNavigationStart = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.store.dispatch(RouterActions.navStart(e));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    RouterService.prototype.onRoutesRecognized = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.store.dispatch(RouterActions.routesRecognized(e));
    };
    Object.defineProperty(RouterService.prototype, "activatedRoute", {
        get: /**
         * @return {?}
         */
        function () {
            return this._route;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RouterService.prototype, "routeData$", {
        get: /**
         * @return {?}
         */
        function () {
            return this.activatedRoute.data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RouterService.prototype, "routeParams$", {
        get: /**
         * @return {?}
         */
        function () {
            return this.activatedRoute.params;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RouterService.prototype, "router", {
        get: /**
         * @return {?}
         */
        function () {
            return this._router;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RouterService.prototype, "url$", {
        get: /**
         * @return {?}
         */
        function () {
            return this.store.select(function (s) { return s.router.url; });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} commands
     * @param {?=} extras
     * @return {?}
     */
    RouterService.prototype.navigate = /**
     * @param {?} commands
     * @param {?=} extras
     * @return {?}
     */
    function (commands, extras) {
        var /** @type {?} */ promise = this.router.navigate(commands, extras);
        return from(promise);
    };
    /**
     * @param {?} url
     * @param {?=} extras
     * @return {?}
     */
    RouterService.prototype.navigateByUrl = /**
     * @param {?} url
     * @param {?=} extras
     * @return {?}
     */
    function (url, extras) {
        var /** @type {?} */ promise = this.router.navigateByUrl(url, extras);
        return from(promise);
    };
    RouterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    RouterService.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: Store }
    ]; };
    /** @nocollapse */ RouterService.ngInjectableDef = i0.defineInjectable({ factory: function RouterService_Factory() { return new RouterService(i0.inject(i1.Router), i0.inject(i1.ActivatedRoute), i0.inject(i2.Store)); }, token: RouterService, providedIn: "root" });
    return RouterService;
}());
export { RouterService };
function RouterService_tsickle_Closure_declarations() {
    /** @type {?} */
    RouterService.prototype.navigationCancel;
    /** @type {?} */
    RouterService.prototype.navigationEnd;
    /** @type {?} */
    RouterService.prototype.navigationError;
    /** @type {?} */
    RouterService.prototype.navigationStart;
    /** @type {?} */
    RouterService.prototype.routesRecognized;
    /** @type {?} */
    RouterService.prototype._router;
    /** @type {?} */
    RouterService.prototype._route;
    /** @type {?} */
    RouterService.prototype.store;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3JvdXRlci9yb3V0ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUNMLE1BQU0sRUFDTixjQUFjLEVBRWQsZ0JBQWdCLEVBQ2hCLGFBQWEsRUFDYixlQUFlLEVBQ2YsZUFBZSxFQUNmLGdCQUFnQixFQUlqQixNQUFNLGlCQUFpQixDQUFDO0FBQ3pCLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEMsT0FBTyxFQUFjLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV4QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7OztJQWF4Qyx1QkFDVSxTQUNBLFFBQ0E7UUFIVixpQkFpQkM7UUFoQlMsWUFBTyxHQUFQLE9BQU87UUFDUCxXQUFNLEdBQU4sTUFBTTtRQUNOLFVBQUssR0FBTCxLQUFLO2dDQVRJLElBQUksWUFBWSxFQUFvQjs2QkFDdkMsSUFBSSxZQUFZLEVBQWlCOytCQUMvQixJQUFJLFlBQVksRUFBbUI7K0JBQ25DLElBQUksWUFBWSxFQUFtQjtnQ0FDbEMsSUFBSSxZQUFZLEVBQW9CO1FBTXJELE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUMsQ0FBUTtZQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyxLQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUI7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLGFBQWEsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RDLEtBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDekI7WUFB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QyxNQUFNO2dCQUNOLGNBQWM7Z0JBV1AsS0FBSzs7O3dCQWRkOztTQXNCYSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBSb3V0ZXIsXG4gIEFjdGl2YXRlZFJvdXRlLFxuICBFdmVudCxcbiAgTmF2aWdhdGlvbkNhbmNlbCxcbiAgTmF2aWdhdGlvbkVuZCxcbiAgTmF2aWdhdGlvbkVycm9yLFxuICBOYXZpZ2F0aW9uU3RhcnQsXG4gIFJvdXRlc1JlY29nbml6ZWQsXG4gIFBhcmFtcyxcbiAgRGF0YSxcbiAgTmF2aWdhdGlvbkV4dHJhc1xufSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFJvdXRlckFjdGlvbnMgfSBmcm9tICcuL2FjdGlvbnMnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXJTZXJ2aWNlIHtcblxuICBuYXZpZ2F0aW9uQ2FuY2VsID0gbmV3IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uQ2FuY2VsPigpO1xuICBuYXZpZ2F0aW9uRW5kID0gbmV3IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRW5kPigpO1xuICBuYXZpZ2F0aW9uRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FcnJvcj4oKTtcbiAgbmF2aWdhdGlvblN0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uU3RhcnQ+KCk7XG4gIHJvdXRlc1JlY29nbml6ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPFJvdXRlc1JlY29nbml6ZWQ+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBfcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSBfcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHByaXZhdGUgc3RvcmU6IFN0b3JlPGFueT4pIHtcbiAgICBfcm91dGVyLmV2ZW50cy5zdWJzY3JpYmUoKGU6IEV2ZW50KSA9PiB7XG4gICAgICBpZiAoZSBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwpIHtcbiAgICAgICAgdGhpcy5vbk5hdmlnYXRpb25DYW5jZWwoZSk7XG4gICAgICB9IGVsc2UgaWYgKGUgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kKSB7XG4gICAgICAgIHRoaXMub25OYXZpZ2F0aW9uRW5kKGUpO1xuICAgICAgfSBlbHNlIGlmIChlIGluc3RhbmNlb2YgTmF2aWdhdGlvbkVycm9yKSB7XG4gICAgICAgIHRoaXMub25OYXZpZ2F0aW9uRXJyb3IoZSk7XG4gICAgICB9IGVsc2UgaWYgKGUgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uU3RhcnQpIHtcbiAgICAgICAgdGhpcy5vbk5hdmlnYXRpb25TdGFydChlKTtcbiAgICAgIH0gZWxzZSBpZiAoZSBpbnN0YW5jZW9mIFJvdXRlc1JlY29nbml6ZWQpIHtcbiAgICAgICAgdGhpcy5vblJvdXRlc1JlY29nbml6ZWQoZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBvbk5hdmlnYXRpb25DYW5jZWwoZTogTmF2aWdhdGlvbkNhbmNlbCk6IHZvaWQge1xuICAgIHRoaXMuc3RvcmUuZGlzcGF0Y2goUm91dGVyQWN0aW9ucy5uYXZDYW5jZWwoZSkpO1xuICB9XG5cbiAgb25OYXZpZ2F0aW9uRW5kKGU6IE5hdmlnYXRpb25FbmQpOiB2b2lkIHtcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKFJvdXRlckFjdGlvbnMubmF2RW5kKGUpKTtcbiAgfVxuXG4gIG9uTmF2aWdhdGlvbkVycm9yKGU6IE5hdmlnYXRpb25FcnJvcik6IHZvaWQge1xuICAgIHRoaXMuc3RvcmUuZGlzcGF0Y2goUm91dGVyQWN0aW9ucy5uYXZFcnJvcihlKSk7XG4gIH1cblxuICBvbk5hdmlnYXRpb25TdGFydChlOiBOYXZpZ2F0aW9uU3RhcnQpOiB2b2lkIHtcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKFJvdXRlckFjdGlvbnMubmF2U3RhcnQoZSkpO1xuICB9XG5cbiAgb25Sb3V0ZXNSZWNvZ25pemVkKGU6IFJvdXRlc1JlY29nbml6ZWQpOiB2b2lkIHtcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKFJvdXRlckFjdGlvbnMucm91dGVzUmVjb2duaXplZChlKSk7XG4gIH1cblxuICBnZXQgYWN0aXZhdGVkUm91dGUoKTogQWN0aXZhdGVkUm91dGUge1xuICAgIHJldHVybiB0aGlzLl9yb3V0ZTtcbiAgfVxuXG4gIGdldCByb3V0ZURhdGEkKCk6IE9ic2VydmFibGU8RGF0YT4ge1xuICAgIHJldHVybiB0aGlzLmFjdGl2YXRlZFJvdXRlLmRhdGE7XG4gIH1cblxuICBnZXQgcm91dGVQYXJhbXMkKCk6IE9ic2VydmFibGU8UGFyYW1zPiB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZhdGVkUm91dGUucGFyYW1zO1xuICB9XG5cbiAgZ2V0IHJvdXRlcigpOiBSb3V0ZXIge1xuICAgIHJldHVybiB0aGlzLl9yb3V0ZXI7XG4gIH1cblxuICBnZXQgdXJsJCgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgIHJldHVybiB0aGlzLnN0b3JlLnNlbGVjdChzID0+IHMucm91dGVyLnVybCk7XG4gIH1cblxuICBuYXZpZ2F0ZShjb21tYW5kczogYW55W10sIGV4dHJhcz86IE5hdmlnYXRpb25FeHRyYXMpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICBjb25zdCBwcm9taXNlID0gdGhpcy5yb3V0ZXIubmF2aWdhdGUoY29tbWFuZHMsIGV4dHJhcyk7XG4gICAgcmV0dXJuIGZyb20ocHJvbWlzZSk7XG4gIH1cblxuICBuYXZpZ2F0ZUJ5VXJsKHVybDogc3RyaW5nLCBleHRyYXM/OiBOYXZpZ2F0aW9uRXh0cmFzKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgY29uc3QgcHJvbWlzZSA9IHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwodXJsLCBleHRyYXMpO1xuICAgIHJldHVybiBmcm9tKHByb21pc2UpO1xuICB9XG5cbn0iXX0=
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { of } from 'rxjs';
import { map, distinctUntilChanged } from 'rxjs/operators';
import { Token } from '../shared/token';
import { build } from '../shared/utils';
import { Window } from '../shared/window';
/**
 * @param {?} store
 * @return {?}
 */
export function allSelector(store) {
    return store.pipe(map(function (x) { return x; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function emptySelector(store) {
    return of({});
}
/**
 * @param {?} store
 * @return {?}
 */
export function currentUserSelector(store) {
    return store.select('currentUser');
}
/**
 * @param {?} store
 * @return {?}
 */
export function authenticatedSelector(store) {
    return currentUserSelector(store).pipe(map(function (user) { return user.authenticated; }), distinctUntilChanged());
}
/**
 * @param {?} store
 * @return {?}
 */
export function configSelector(store) {
    return store.select('config');
}
/**
 * @param {?} store
 * @return {?}
 */
export function windowSelector(store) {
    return store.select('window').pipe(map(function (w) { return build(Window, w); }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function windowHeightSelector(store) {
    return windowSelector(store).pipe(map(function (window) { return window.windowHeight; }), distinctUntilChanged());
}
/**
 * @param {?} store
 * @return {?}
 */
export function windowWidthSelector(store) {
    return windowSelector(store).pipe(map(function (window) { return window.windowWidth; }), distinctUntilChanged());
}
/**
 * @param {?} store
 * @return {?}
 */
export function containerHeightSelector(store) {
    return windowHeightSelector(store).pipe(map(function (h) { return h === 0 ? 700 : h; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function containerWidthSelector(store) {
    return windowWidthSelector(store).pipe(map(function (w) { return w === 0 ? 1200 : w; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function contentHeightSelector(store) {
    return windowHeightSelector(store).pipe(map(function (h) { return h === 0 ? 700 : h; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function contentWidthSelector(store) {
    return windowWidthSelector(store).pipe(map(function (w) { return w === 0 ? 1200 : w; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function sidenavOpenedSelector(store) {
    return (/** @type {?} */ (store.select('sidenav'))).pipe(distinctUntilChanged());
}
/**
 * @param {?} store
 * @return {?}
 */
export function apiBaseUrlSelector(store) {
    return configSelector(store).pipe(map(function (config) { return config.apiBaseUrl; }));
}
/**
 * @param {?} store
 * @return {?}
 */
export function authTokenSelector(store) {
    return currentUserSelector(store).pipe(map(function (user) {
        var /** @type {?} */ token = user && user.token ? build(Token, user.token) : new Token();
        return token.toString();
    }));
}

//# sourceMappingURL=data:application/json;base64,
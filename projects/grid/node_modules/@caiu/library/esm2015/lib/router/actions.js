/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class RouterActions {
    /**
     * @param {?} routeName
     * @param {?=} parent
     * @return {?}
     */
    static activate(routeName, parent) {
        const /** @type {?} */ payload = {
            routeName,
            parent
        };
        return {
            type: RouterActions.ACTIVATE,
            payload
        };
    }
    /**
     * @param {?} r
     * @return {?}
     */
    static navigate(r) {
        return {
            type: RouterActions.NAVIGATE,
            payload: r
        };
    }
    /**
     * @return {?}
     */
    static navigateSuccess() {
        return {
            type: RouterActions.NAVIGATE_SUCCESS
        };
    }
    /**
     * @return {?}
     */
    static navigateError() {
        return {
            type: RouterActions.NAVIGATE_ERROR
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    static navCancel(e) {
        return {
            type: RouterActions.NAVIGATION_CANCEL,
            payload: e
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    static navEnd(e) {
        return {
            type: RouterActions.NAVIGATION_END,
            payload: e
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    static navError(e) {
        return {
            type: RouterActions.NAVIGATION_ERROR,
            payload: e
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    static navStart(e) {
        return {
            type: RouterActions.NAVIGATION_START,
            payload: e
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    static routesRecognized(e) {
        return {
            type: RouterActions.ROUTES_RECOGNIZED,
            payload: e
        };
    }
}
RouterActions.ACTIVATE = '[Router] Activate Route';
RouterActions.NAVIGATE = '[Router] Navigate';
RouterActions.NAVIGATE_SUCCESS = '[Router] Navigate Success';
RouterActions.NAVIGATE_ERROR = '[Router] Navigate Error';
RouterActions.NAVIGATION_CANCEL = '[Router] Cancel Navigation';
RouterActions.NAVIGATION_END = '[Router] End Navigation';
RouterActions.NAVIGATION_ERROR = '[Router] Error Navigation';
RouterActions.NAVIGATION_START = '[Router] Start Navigation';
RouterActions.ROUTES_RECOGNIZED = '[Router] Routes Recognized';
function RouterActions_tsickle_Closure_declarations() {
    /** @type {?} */
    RouterActions.ACTIVATE;
    /** @type {?} */
    RouterActions.NAVIGATE;
    /** @type {?} */
    RouterActions.NAVIGATE_SUCCESS;
    /** @type {?} */
    RouterActions.NAVIGATE_ERROR;
    /** @type {?} */
    RouterActions.NAVIGATION_CANCEL;
    /** @type {?} */
    RouterActions.NAVIGATION_END;
    /** @type {?} */
    RouterActions.NAVIGATION_ERROR;
    /** @type {?} */
    RouterActions.NAVIGATION_START;
    /** @type {?} */
    RouterActions.ROUTES_RECOGNIZED;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvcm91dGVyL2FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQVlBLE1BQU07Ozs7OztJQVlGLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBaUIsRUFBRSxNQUFlO1FBQzlDLHVCQUFNLE9BQU8sR0FBMEI7WUFDbkMsU0FBUztZQUNULE1BQU07U0FDVCxDQUFDO1FBQ0YsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLGFBQWEsQ0FBQyxRQUFRO1lBQzVCLE9BQU87U0FDVixDQUFDO0tBQ0w7Ozs7O0lBQ0QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUF5QjtRQUNyQyxNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLFFBQVE7WUFDNUIsT0FBTyxFQUFFLENBQUM7U0FDYixDQUFDO0tBQ0w7Ozs7SUFFRCxNQUFNLENBQUMsZUFBZTtRQUNsQixNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLGdCQUFnQjtTQUN2QyxDQUFDO0tBQ0w7Ozs7SUFFRCxNQUFNLENBQUMsYUFBYTtRQUNoQixNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLGNBQWM7U0FDckMsQ0FBQztLQUNMOzs7OztJQUVELE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBbUI7UUFDaEMsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLGFBQWEsQ0FBQyxpQkFBaUI7WUFDckMsT0FBTyxFQUFFLENBQUM7U0FDYixDQUFDO0tBQ0w7Ozs7O0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFnQjtRQUMxQixNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLGNBQWM7WUFDbEMsT0FBTyxFQUFFLENBQUM7U0FDYixDQUFDO0tBQ0w7Ozs7O0lBRUQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFrQjtRQUM5QixNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLGdCQUFnQjtZQUNwQyxPQUFPLEVBQUUsQ0FBQztTQUNiLENBQUM7S0FDTDs7Ozs7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLENBQWtCO1FBQzlCLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxhQUFhLENBQUMsZ0JBQWdCO1lBQ3BDLE9BQU8sRUFBRSxDQUFDO1NBQ2IsQ0FBQztLQUNMOzs7OztJQUVELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFtQjtRQUN2QyxNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsYUFBYSxDQUFDLGlCQUFpQjtZQUNyQyxPQUFPLEVBQUUsQ0FBQztTQUNiLENBQUM7S0FDTDs7eUJBeEVpQix5QkFBeUI7eUJBQ3pCLG1CQUFtQjtpQ0FDWCwyQkFBMkI7K0JBQzdCLHlCQUF5QjtrQ0FDdEIsNEJBQTRCOytCQUMvQix5QkFBeUI7aUNBQ3ZCLDJCQUEyQjtpQ0FDM0IsMkJBQTJCO2tDQUMxQiw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgUm91dGUsXHJcbiAgICBOYXZpZ2F0aW9uQ2FuY2VsLFxyXG4gICAgTmF2aWdhdGlvbkVuZCxcclxuICAgIE5hdmlnYXRpb25FcnJvcixcclxuICAgIE5hdmlnYXRpb25TdGFydCxcclxuICAgIFJvdXRlc1JlY29nbml6ZWRcclxufSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5cclxuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGVQYXlsb2FkIH0gZnJvbSAnLi9tb2RlbHMnO1xyXG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuLi9zdG9yZS9tb2RlbHMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJvdXRlckFjdGlvbnMge1xyXG5cclxuICAgIHN0YXRpYyBBQ1RJVkFURSA9ICdbUm91dGVyXSBBY3RpdmF0ZSBSb3V0ZSc7XHJcbiAgICBzdGF0aWMgTkFWSUdBVEUgPSAnW1JvdXRlcl0gTmF2aWdhdGUnO1xyXG4gICAgc3RhdGljIE5BVklHQVRFX1NVQ0NFU1MgPSAnW1JvdXRlcl0gTmF2aWdhdGUgU3VjY2Vzcyc7XHJcbiAgICBzdGF0aWMgTkFWSUdBVEVfRVJST1IgPSAnW1JvdXRlcl0gTmF2aWdhdGUgRXJyb3InO1xyXG4gICAgc3RhdGljIE5BVklHQVRJT05fQ0FOQ0VMID0gJ1tSb3V0ZXJdIENhbmNlbCBOYXZpZ2F0aW9uJztcclxuICAgIHN0YXRpYyBOQVZJR0FUSU9OX0VORCA9ICdbUm91dGVyXSBFbmQgTmF2aWdhdGlvbic7XHJcbiAgICBzdGF0aWMgTkFWSUdBVElPTl9FUlJPUiA9ICdbUm91dGVyXSBFcnJvciBOYXZpZ2F0aW9uJztcclxuICAgIHN0YXRpYyBOQVZJR0FUSU9OX1NUQVJUID0gJ1tSb3V0ZXJdIFN0YXJ0IE5hdmlnYXRpb24nO1xyXG4gICAgc3RhdGljIFJPVVRFU19SRUNPR05JWkVEID0gJ1tSb3V0ZXJdIFJvdXRlcyBSZWNvZ25pemVkJztcclxuXHJcbiAgICBzdGF0aWMgYWN0aXZhdGUocm91dGVOYW1lOiBzdHJpbmcsIHBhcmVudD86IHN0cmluZyk6IEFjdGlvbiB7XHJcbiAgICAgICAgY29uc3QgcGF5bG9hZDogQWN0aXZhdGVkUm91dGVQYXlsb2FkID0ge1xyXG4gICAgICAgICAgICByb3V0ZU5hbWUsXHJcbiAgICAgICAgICAgIHBhcmVudFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogUm91dGVyQWN0aW9ucy5BQ1RJVkFURSxcclxuICAgICAgICAgICAgcGF5bG9hZFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgbmF2aWdhdGUocjogc3RyaW5nIHwgUm91dGUgfCBhbnlbXSk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogUm91dGVyQWN0aW9ucy5OQVZJR0FURSxcclxuICAgICAgICAgICAgcGF5bG9hZDogclxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG5hdmlnYXRlU3VjY2VzcygpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFJvdXRlckFjdGlvbnMuTkFWSUdBVEVfU1VDQ0VTU1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG5hdmlnYXRlRXJyb3IoKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBSb3V0ZXJBY3Rpb25zLk5BVklHQVRFX0VSUk9SXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgbmF2Q2FuY2VsKGU6IE5hdmlnYXRpb25DYW5jZWwpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFJvdXRlckFjdGlvbnMuTkFWSUdBVElPTl9DQU5DRUwsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IGVcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBuYXZFbmQoZTogTmF2aWdhdGlvbkVuZCk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogUm91dGVyQWN0aW9ucy5OQVZJR0FUSU9OX0VORCxcclxuICAgICAgICAgICAgcGF5bG9hZDogZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG5hdkVycm9yKGU6IE5hdmlnYXRpb25FcnJvcik6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogUm91dGVyQWN0aW9ucy5OQVZJR0FUSU9OX0VSUk9SLFxyXG4gICAgICAgICAgICBwYXlsb2FkOiBlXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgbmF2U3RhcnQoZTogTmF2aWdhdGlvblN0YXJ0KTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBSb3V0ZXJBY3Rpb25zLk5BVklHQVRJT05fU1RBUlQsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IGVcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyByb3V0ZXNSZWNvZ25pemVkKGU6IFJvdXRlc1JlY29nbml6ZWQpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFJvdXRlckFjdGlvbnMuUk9VVEVTX1JFQ09HTklaRUQsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IGVcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
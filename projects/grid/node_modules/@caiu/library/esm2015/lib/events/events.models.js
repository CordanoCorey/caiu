/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Collection } from '../shared/collection';
import { build } from '../shared/utils';
export class Event {
    constructor() {
        this.emittedCount = 0;
        this.key = '';
        this.onAction = '';
        this.value = null;
    }
}
function Event_tsickle_Closure_declarations() {
    /** @type {?} */
    Event.prototype.emittedCount;
    /** @type {?} */
    Event.prototype.handler;
    /** @type {?} */
    Event.prototype.key;
    /** @type {?} */
    Event.prototype.onAction;
    /** @type {?} */
    Event.prototype.value;
}
export class Events extends Collection {
    /**
     * @return {?}
     */
    get actions() {
        return this.toArray().reduce((acc, event) => {
            const /** @type {?} */ addValues = !event.onAction ?
                [] : typeof event.onAction === 'string' ?
                acc.indexOf(event.onAction) === -1 ? [event.onAction] : []
                : event.onAction.filter(x => acc.indexOf(x) === -1);
            return [...acc, ...addValues];
        }, []);
    }
    /**
     * @return {?}
     */
    get eventsByAction() {
        return this.toArray().reduce((acc, event) => {
            if (typeof event.onAction === 'string') {
                const /** @type {?} */ val = acc[event.onAction] || [];
                acc[event.onAction] = [...val, event];
            }
            else {
                event.onAction.forEach(actionType => {
                    const /** @type {?} */ val = acc[actionType] || [];
                    acc[actionType] = [...val, event];
                });
            }
            return acc;
        }, {});
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    addEvent(payload) {
        return build(Events, this.addItem(payload, payload.key));
    }
    /**
     * @param {?} actionType
     * @return {?}
     */
    getActionEvents(actionType) {
        return this.eventsByAction[actionType];
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    removeEvent(payload) {
        return build(Events, this.removeItem(payload));
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    replaceEvents(payload) {
        const /** @type {?} */ events = this.copyItems();
        payload.forEach(e => {
            events[e.key] = e;
        });
        return build(Events, this, { items: events });
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    triggerEvent(payload) {
        const /** @type {?} */ events = this.getActionEvents(payload.type)
            .map(e => build(Event, e, { value: e.handler ? e.handler(payload) : payload }));
        return this.replaceEvents(events);
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    updateValue(payload) {
        const /** @type {?} */ event = build(Event, this.items[payload.key], { value: payload.value });
        return build(Events, this.updateItem(event, payload.key, Event));
    }
}
export class UpdateValuePayload {
}
function UpdateValuePayload_tsickle_Closure_declarations() {
    /** @type {?} */
    UpdateValuePayload.prototype.key;
    /** @type {?} */
    UpdateValuePayload.prototype.value;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLm1vZGVscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvZXZlbnRzL2V2ZW50cy5tb2RlbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVsRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEMsTUFBTTs7NEJBQ2EsQ0FBQzttQkFFVixFQUFFO3dCQUNzQixFQUFFO3FCQUNuQixJQUFJOztDQUNwQjs7Ozs7Ozs7Ozs7OztBQUVELE1BQU0sYUFBYyxTQUFRLFVBQWlCOzs7O0lBRXpDLElBQUksT0FBTztRQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBVSxFQUFFLEtBQVksRUFBRSxFQUFFO1lBQ3RELHVCQUFNLFNBQVMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDL0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUM7Z0JBQ3JDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDMUQsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVELE1BQU0sQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUM7U0FDakMsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUNWOzs7O0lBRUQsSUFBSSxjQUFjO1FB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ZnJvbSAnLi4vc3RvcmUvbW9kZWxzJztcclxuaW1wb3J0IHsgQ29sbGVjdGlvbiB9IGZyb20gJy4uL3NoYXJlZC9jb2xsZWN0aW9uJztcclxuaW1wb3J0IHsgRGljdGlvbmFyeSB9IGZyb20gJy4uL3NoYXJlZC9tb2RlbHMnO1xyXG5pbXBvcnQgeyBidWlsZCB9IGZyb20gJy4uL3NoYXJlZC91dGlscyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRXZlbnQge1xyXG4gICAgZW1pdHRlZENvdW50ID0gMDtcclxuICAgIGhhbmRsZXI6IChhY3Rpb246IEFjdGlvbikgPT4gYW55O1xyXG4gICAga2V5ID0gJyc7XHJcbiAgICBvbkFjdGlvbjogc3RyaW5nIHwgc3RyaW5nW10gPSAnJztcclxuICAgIHZhbHVlOiBhbnkgPSBudWxsO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRXZlbnRzIGV4dGVuZHMgQ29sbGVjdGlvbjxFdmVudD4ge1xyXG5cclxuICAgIGdldCBhY3Rpb25zKCk6IHN0cmluZ1tdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50b0FycmF5KCkucmVkdWNlKChhY2M6IGFueVtdLCBldmVudDogRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgYWRkVmFsdWVzID0gIWV2ZW50Lm9uQWN0aW9uID9cclxuICAgICAgICAgICAgICAgIFtdIDogdHlwZW9mIGV2ZW50Lm9uQWN0aW9uID09PSAnc3RyaW5nJyA/XHJcbiAgICAgICAgICAgICAgICAgICAgYWNjLmluZGV4T2YoZXZlbnQub25BY3Rpb24pID09PSAtMSA/IFtldmVudC5vbkFjdGlvbl0gOiBbXVxyXG4gICAgICAgICAgICAgICAgICAgIDogZXZlbnQub25BY3Rpb24uZmlsdGVyKHggPT4gYWNjLmluZGV4T2YoeCkgPT09IC0xKTtcclxuICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIC4uLmFkZFZhbHVlc107XHJcbiAgICAgICAgfSwgW10pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBldmVudHNCeUFjdGlvbigpOiBEaWN0aW9uYXJ5PEV2ZW50W10+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy50b0FycmF5KCkucmVkdWNlKChhY2M6IERpY3Rpb25hcnk8RXZlbnRbXT4sIGV2ZW50OiBFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGV2ZW50Lm9uQWN0aW9uID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsOiBFdmVudFtdID0gYWNjW2V2ZW50Lm9uQWN0aW9uXSB8fCBbXTtcclxuICAgICAgICAgICAgICAgIGFjY1tldmVudC5vbkFjdGlvbl0gPSBbLi4udmFsLCBldmVudF07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBldmVudC5vbkFjdGlvbi5mb3JFYWNoKGFjdGlvblR5cGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbDogRXZlbnRbXSA9IGFjY1thY3Rpb25UeXBlXSB8fCBbXTtcclxuICAgICAgICAgICAgICAgICAgICBhY2NbYWN0aW9uVHlwZV0gPSBbLi4udmFsLCBldmVudF07XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgICAgIH0sIHt9KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudChwYXlsb2FkOiBFdmVudCk6IEV2ZW50cyB7XHJcbiAgICAgICAgcmV0dXJuIGJ1aWxkKEV2ZW50cywgdGhpcy5hZGRJdGVtKHBheWxvYWQsIHBheWxvYWQua2V5KSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QWN0aW9uRXZlbnRzKGFjdGlvblR5cGU6IHN0cmluZyk6IEV2ZW50W10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50c0J5QWN0aW9uW2FjdGlvblR5cGVdO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUV2ZW50KHBheWxvYWQ6IHN0cmluZyk6IEV2ZW50cyB7XHJcbiAgICAgICAgcmV0dXJuIGJ1aWxkKEV2ZW50cywgdGhpcy5yZW1vdmVJdGVtKHBheWxvYWQpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXBsYWNlRXZlbnRzKHBheWxvYWQ6IEV2ZW50W10pOiBFdmVudHMge1xyXG4gICAgICAgIGNvbnN0IGV2ZW50cyA9IHRoaXMuY29weUl0ZW1zKCk7XHJcbiAgICAgICAgcGF5bG9hZC5mb3JFYWNoKGUgPT4ge1xyXG4gICAgICAgICAgICBldmVudHNbZS5rZXldID0gZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gYnVpbGQoRXZlbnRzLCB0aGlzLCB7IGl0ZW1zOiBldmVudHMgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJpZ2dlckV2ZW50KHBheWxvYWQ6IEFjdGlvbik6IEV2ZW50cyB7XHJcbiAgICAgICAgY29uc3QgZXZlbnRzID0gdGhpcy5nZXRBY3Rpb25FdmVudHMocGF5bG9hZC50eXBlKVxyXG4gICAgICAgICAgICAubWFwKGUgPT4gYnVpbGQoRXZlbnQsIGUsIHsgdmFsdWU6IGUuaGFuZGxlciA/IGUuaGFuZGxlcihwYXlsb2FkKSA6IHBheWxvYWQgfSkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlcGxhY2VFdmVudHMoZXZlbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVWYWx1ZShwYXlsb2FkOiBVcGRhdGVWYWx1ZVBheWxvYWQpOiBFdmVudHMge1xyXG4gICAgICAgIGNvbnN0IGV2ZW50ID0gYnVpbGQoRXZlbnQsIHRoaXMuaXRlbXNbcGF5bG9hZC5rZXldLCB7IHZhbHVlOiBwYXlsb2FkLnZhbHVlIH0pO1xyXG4gICAgICAgIHJldHVybiBidWlsZChFdmVudHMsIHRoaXMudXBkYXRlSXRlbShldmVudCwgcGF5bG9hZC5rZXksIEV2ZW50KSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVXBkYXRlVmFsdWVQYXlsb2FkIHtcclxuICAgIGtleTogc3RyaW5nO1xyXG4gICAgdmFsdWU6IGFueTtcclxufVxyXG4iXX0=
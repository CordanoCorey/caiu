/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class FormActions {
    /**
     * @param {?} control
     * @return {?}
     */
    static addForm(control) {
        return {
            type: FormActions.ADD,
            payload: control
        };
    }
    /**
     * @param {?} control
     * @param {?} changes
     * @return {?}
     */
    static changeStatus(control, changes) {
        return {
            type: FormActions.STATUS_CHANGES,
            payload: {
                control: control,
                changes: changes
            }
        };
    }
    /**
     * @param {?} control
     * @param {?} changes
     * @return {?}
     */
    static changeValue(control, changes) {
        return {
            type: FormActions.VALUE_CHANGES,
            payload: {
                control: control,
                changes: changes
            }
        };
    }
    /**
     * @param {?} route
     * @return {?}
     */
    static navigateToForm(route) {
        return {
            type: FormActions.NAVIGATE,
            payload: route
        };
    }
    /**
     * @param {?} forms
     * @return {?}
     */
    static resetForms(forms) {
        return {
            type: FormActions.RESET,
            payload: forms
        };
    }
}
FormActions.ADD = '[forms] Add Form';
FormActions.RESET = '[forms] Reset Forms';
FormActions.NAVIGATE = '[forms] Navigate to Form';
FormActions.STATUS_CHANGES = '[form] Status Changes';
FormActions.VALUE_CHANGES = '[form] Value Changes';
function FormActions_tsickle_Closure_declarations() {
    /** @type {?} */
    FormActions.ADD;
    /** @type {?} */
    FormActions.RESET;
    /** @type {?} */
    FormActions.NAVIGATE;
    /** @type {?} */
    FormActions.STATUS_CHANGES;
    /** @type {?} */
    FormActions.VALUE_CHANGES;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsTUFBTTs7Ozs7SUFPRixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQXdCO1FBQ25DLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxXQUFXLENBQUMsR0FBRztZQUNyQixPQUFPLEVBQUUsT0FBTztTQUNuQixDQUFDO0tBQ0w7Ozs7OztJQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBd0IsRUFBRSxPQUFZO1FBQ3RELE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxXQUFXLENBQUMsY0FBYztZQUNoQyxPQUFPLEVBQUU7Z0JBQ0wsT0FBTyxFQUFFLE9BQU87Z0JBQ2hCLE9BQU8sRUFBRSxPQUFPO2FBQ25CO1NBQ0osQ0FBQztLQUNMOzs7Ozs7SUFFRCxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQXdCLEVBQUUsT0FBWTtRQUNyRCxNQUFNLENBQUM7WUFDSCxJQUFJLEVBQUUsV0FBVyxDQUFDLGFBQWE7WUFDL0IsT0FBTyxFQUFFO2dCQUNMLE9BQU8sRUFBRSxPQUFPO2dCQUNoQixPQUFPLEVBQUUsT0FBTzthQUNuQjtTQUNKLENBQUM7S0FDTDs7Ozs7SUFFRCxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQWE7UUFDL0IsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLFdBQVcsQ0FBQyxRQUFRO1lBQzFCLE9BQU8sRUFBRSxLQUFLO1NBQ2pCLENBQUM7S0FDTDs7Ozs7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQWE7UUFDM0IsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLFdBQVcsQ0FBQyxLQUFLO1lBQ3ZCLE9BQU8sRUFBRSxLQUFLO1NBQ2pCLENBQUM7S0FDTDs7a0JBN0NZLGtCQUFrQjtvQkFDaEIscUJBQXFCO3VCQUNsQiwwQkFBMEI7NkJBQ3BCLHVCQUF1Qjs0QkFDeEIsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnLi4vc3RvcmUvbW9kZWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtQWN0aW9ucyB7XHJcbiAgICBzdGF0aWMgQUREID0gJ1tmb3Jtc10gQWRkIEZvcm0nO1xyXG4gICAgc3RhdGljIFJFU0VUID0gJ1tmb3Jtc10gUmVzZXQgRm9ybXMnO1xyXG4gICAgc3RhdGljIE5BVklHQVRFID0gJ1tmb3Jtc10gTmF2aWdhdGUgdG8gRm9ybSc7XHJcbiAgICBzdGF0aWMgU1RBVFVTX0NIQU5HRVMgPSAnW2Zvcm1dIFN0YXR1cyBDaGFuZ2VzJztcclxuICAgIHN0YXRpYyBWQUxVRV9DSEFOR0VTID0gJ1tmb3JtXSBWYWx1ZSBDaGFuZ2VzJztcclxuXHJcbiAgICBzdGF0aWMgYWRkRm9ybShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IEZvcm1BY3Rpb25zLkFERCxcclxuICAgICAgICAgICAgcGF5bG9hZDogY29udHJvbFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNoYW5nZVN0YXR1cyhjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGNoYW5nZXM6IGFueSk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogRm9ybUFjdGlvbnMuU1RBVFVTX0NIQU5HRVMsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IHtcclxuICAgICAgICAgICAgICAgIGNvbnRyb2w6IGNvbnRyb2wsXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VzOiBjaGFuZ2VzXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBjaGFuZ2VWYWx1ZShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGNoYW5nZXM6IGFueSk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogRm9ybUFjdGlvbnMuVkFMVUVfQ0hBTkdFUyxcclxuICAgICAgICAgICAgcGF5bG9hZDoge1xyXG4gICAgICAgICAgICAgICAgY29udHJvbDogY29udHJvbCxcclxuICAgICAgICAgICAgICAgIGNoYW5nZXM6IGNoYW5nZXNcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG5hdmlnYXRlVG9Gb3JtKHJvdXRlOiBzdHJpbmcpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IEZvcm1BY3Rpb25zLk5BVklHQVRFLFxyXG4gICAgICAgICAgICBwYXlsb2FkOiByb3V0ZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHJlc2V0Rm9ybXMoZm9ybXM6IEZvcm1bXSk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogRm9ybUFjdGlvbnMuUkVTRVQsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IGZvcm1zXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule, InjectionToken } from '@angular/core';
import { Store } from '@ngrx/store';
import { LookupService } from './lookup.service';
export const /** @type {?} */ LOOKUP_PATH = new InjectionToken('API lookup endpoint');
export const /** @type {?} */ LOOKUP_KEYS = new InjectionToken('API lookup keys');
/**
 * @param {?} store
 * @param {?=} LOOKUP_PATH
 * @param {?=} LOOKUP_KEYS
 * @return {?}
 */
export function lookupServiceFactory(store, LOOKUP_PATH = 'lookup', LOOKUP_KEYS = []) {
    return new LookupService(store, LOOKUP_PATH, LOOKUP_KEYS);
}
/**
 * @param {?=} path
 * @param {?=} keys
 * @return {?}
 */
export function provideLookup(path = '', keys = []) {
    return [
        { provide: LookupService, useFactory: lookupServiceFactory, deps: [Store, LOOKUP_PATH, LOOKUP_KEYS] },
        { provide: LOOKUP_PATH, useValue: path },
        { provide: LOOKUP_KEYS, useValue: keys },
    ];
}
export class LookupModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: LookupModule,
            providers: provideLookup('lookup', [])
        };
    }
    /**
     * @param {?=} path
     * @return {?}
     */
    static forRootWithPath(path = '') {
        return {
            ngModule: LookupModule,
            providers: provideLookup(path, [])
        };
    }
    /**
     * @param {?} keys
     * @return {?}
     */
    static forRootWithKeys(keys) {
        return {
            ngModule: LookupModule,
            providers: provideLookup('lookup', keys)
        };
    }
    /**
     * @param {?=} path
     * @param {?=} keys
     * @return {?}
     */
    static forRootWithPathAndKeys(path = '', keys) {
        return {
            ngModule: LookupModule,
            providers: provideLookup(path, keys)
        };
    }
}
LookupModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: []
            },] },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvbG9va3VwL2xvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXBDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRCxNQUFNLENBQUMsdUJBQU0sV0FBVyxHQUFHLElBQUksY0FBYyxDQUFTLHFCQUFxQixDQUFDLENBQUM7QUFDN0UsTUFBTSxDQUFDLHVCQUFNLFdBQVcsR0FBRyxJQUFJLGNBQWMsQ0FBVyxpQkFBaUIsQ0FBQyxDQUFDOzs7Ozs7O0FBRTNFLE1BQU0sK0JBQStCLEtBQWlCLEVBQUUsV0FBVyxHQUFHLFFBQVEsRUFBRSxjQUF3QixFQUFFO0lBQ3hHLE1BQU0sQ0FBQyxJQUFJLGFBQWEsQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0NBQzNEOzs7Ozs7QUFFRCxNQUFNLHdCQUF3QixJQUFJLEdBQUcsRUFBRSxFQUFFLE9BQWlCLEVBQUU7SUFDMUQsTUFBTSxDQUFDO1FBQ0wsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxvQkFBb0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxFQUFFO1FBQ3JHLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO1FBQ3hDLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO0tBQ3pDLENBQUM7Q0FDSDtBQU1ELE1BQU07Ozs7SUFFSixNQUFNLENBQUMsT0FBTztRQUNaLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFNBQVMsRUFBRSxhQUFhLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQztTQUN2QyxDQUFDO0tBQ0g7Ozs7O0lBRUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEdBQUcsRUFBRTtRQUM5QixNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUUsYUFBYSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7U0FDbkMsQ0FBQztLQUNIOzs7OztJQUVELE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBYztRQUNuQyxNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUUsYUFBYSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUM7U0FDekMsQ0FBQztLQUNIOzs7Ozs7SUFFRCxNQUFNLENBQUMsc0JBQXNCLENBQUMsSUFBSSxHQUFHLEVBQUUsRUFBRSxJQUFjO1FBQ3JELE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFNBQVMsRUFBRSxhQUFhLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztTQUNyQyxDQUFDO0tBQ0g7OztZQWhDRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsWUFBWSxFQUFFLEVBQUU7YUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuXG5pbXBvcnQgeyBMb29rdXBTZXJ2aWNlIH0gZnJvbSAnLi9sb29rdXAuc2VydmljZSc7XG5cbmV4cG9ydCBjb25zdCBMT09LVVBfUEFUSCA9IG5ldyBJbmplY3Rpb25Ub2tlbjxzdHJpbmc+KCdBUEkgbG9va3VwIGVuZHBvaW50Jyk7XG5leHBvcnQgY29uc3QgTE9PS1VQX0tFWVMgPSBuZXcgSW5qZWN0aW9uVG9rZW48c3RyaW5nW10+KCdBUEkgbG9va3VwIGtleXMnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvb2t1cFNlcnZpY2VGYWN0b3J5KHN0b3JlOiBTdG9yZTxhbnk+LCBMT09LVVBfUEFUSCA9ICdsb29rdXAnLCBMT09LVVBfS0VZUzogc3RyaW5nW10gPSBbXSk6IExvb2t1cFNlcnZpY2Uge1xuICByZXR1cm4gbmV3IExvb2t1cFNlcnZpY2Uoc3RvcmUsIExPT0tVUF9QQVRILCBMT09LVVBfS0VZUyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlTG9va3VwKHBhdGggPSAnJywga2V5czogc3RyaW5nW10gPSBbXSk6IGFueVtdIHtcbiAgcmV0dXJuIFtcbiAgICB7IHByb3ZpZGU6IExvb2t1cFNlcnZpY2UsIHVzZUZhY3Rvcnk6IGxvb2t1cFNlcnZpY2VGYWN0b3J5LCBkZXBzOiBbU3RvcmUsIExPT0tVUF9QQVRILCBMT09LVVBfS0VZU10gfSxcbiAgICB7IHByb3ZpZGU6IExPT0tVUF9QQVRILCB1c2VWYWx1ZTogcGF0aCB9LFxuICAgIHsgcHJvdmlkZTogTE9PS1VQX0tFWVMsIHVzZVZhbHVlOiBrZXlzIH0sXG4gIF07XG59XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIExvb2t1cE1vZHVsZSB7XG5cbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBMb29rdXBNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IHByb3ZpZGVMb29rdXAoJ2xvb2t1cCcsIFtdKVxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZm9yUm9vdFdpdGhQYXRoKHBhdGggPSAnJyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTG9va3VwTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBwcm92aWRlTG9va3VwKHBhdGgsIFtdKVxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZm9yUm9vdFdpdGhLZXlzKGtleXM6IHN0cmluZ1tdKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBMb29rdXBNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IHByb3ZpZGVMb29rdXAoJ2xvb2t1cCcsIGtleXMpXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290V2l0aFBhdGhBbmRLZXlzKHBhdGggPSAnJywga2V5czogc3RyaW5nW10pOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IExvb2t1cE1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogcHJvdmlkZUxvb2t1cChwYXRoLCBrZXlzKVxuICAgIH07XG4gIH1cblxufVxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class Token {
    constructor() {
        this.access_token = '';
        this.expiresIn = 0;
    }
    /**
     * @return {?}
     */
    get authenticated() {
        return !this.expired;
    }
    /**
     * @return {?}
     */
    get expires_in() {
        return this.expiresIn;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set expires_in(value) {
        this.expiresIn = value;
        this.expiresInDate = new Date();
    }
    /**
     * @return {?}
     */
    get expirationDate() {
        const /** @type {?} */ t = new Date(this.expiresInDate);
        t.setSeconds(t.getSeconds() + this.expiresIn);
        return t;
    }
    /**
     * @return {?}
     */
    get expired() {
        const /** @type {?} */ now = new Date();
        return this.access_token && this.expiresIn && this.expiresInDate ? now > this.expirationDate : true;
    }
    /**
     * @return {?}
     */
    toString() {
        return this.expired ? '' : this.access_token;
    }
}
function Token_tsickle_Closure_declarations() {
    /** @type {?} */
    Token.prototype.access_token;
    /** @type {?} */
    Token.prototype.expiresIn;
    /** @type {?} */
    Token.prototype.expiresInDate;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3NoYXJlZC90b2tlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTTs7NEJBQ2EsRUFBRTt5QkFDTCxDQUFDOzs7OztJQUdiLElBQUksYUFBYTtRQUNiLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7S0FDeEI7Ozs7SUFFRCxJQUFJLFVBQVU7UUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztLQUN6Qjs7Ozs7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztLQUNuQzs7OztJQUVELElBQUksY0FBYztRQUNkLHVCQUFNLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdkMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sQ0FBQyxDQUFDLENBQUM7S0FDWjs7OztJQUVELElBQUksT0FBTztRQUNQLHVCQUFNLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztLQUN2Rzs7OztJQUVELFFBQVE7UUFDSixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0tBQ2hEO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVG9rZW4ge1xyXG4gICAgYWNjZXNzX3Rva2VuID0gJyc7XHJcbiAgICBleHBpcmVzSW4gPSAwO1xyXG4gICAgZXhwaXJlc0luRGF0ZTogRGF0ZTtcclxuXHJcbiAgICBnZXQgYXV0aGVudGljYXRlZCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gIXRoaXMuZXhwaXJlZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZXhwaXJlc19pbigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmV4cGlyZXNJbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZXhwaXJlc19pbih2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5leHBpcmVzSW4gPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLmV4cGlyZXNJbkRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBleHBpcmF0aW9uRGF0ZSgpOiBEYXRlIHtcclxuICAgICAgICBjb25zdCB0ID0gbmV3IERhdGUodGhpcy5leHBpcmVzSW5EYXRlKTtcclxuICAgICAgICB0LnNldFNlY29uZHModC5nZXRTZWNvbmRzKCkgKyB0aGlzLmV4cGlyZXNJbik7XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGV4cGlyZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5hY2Nlc3NfdG9rZW4gJiYgdGhpcy5leHBpcmVzSW4gJiYgdGhpcy5leHBpcmVzSW5EYXRlID8gbm93ID4gdGhpcy5leHBpcmF0aW9uRGF0ZSA6IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5leHBpcmVkID8gJycgOiB0aGlzLmFjY2Vzc190b2tlbjtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
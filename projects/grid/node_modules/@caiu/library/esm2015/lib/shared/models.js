/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class Address {
    constructor() {
        this.firstName = '';
        this.lastName = '';
        this.streetAddress = '';
        this.address2 = '';
        this.city = '';
        this.state = '';
        this.stateId = 45;
        this.zipCode = 0;
        this.metadata = {
            streetAddress: {},
            address2: {},
            city: {},
            stateId: {},
            zipCode: {}
        };
    }
    /**
     * @return {?}
     */
    get cityStateZip() {
        return this.hasCityStateZip ?
            `${this.city}, ${this.state} ${this.zipCode} ` : '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set cityStateZip(value) {
    }
    /**
     * @return {?}
     */
    get fullName() {
        return this.firstName && this.lastName ? `${this.firstName} ${this.lastName}` : '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set fullName(value) {
    }
    /**
     * @return {?}
     */
    get hasAddress() {
        return this.hasStreetAddress && this.hasCityStateZip;
    }
    /**
     * @return {?}
     */
    get hasCityStateZip() {
        return this.city !== '' && (this.state !== '' || this.stateId !== 0) && this.zipCode !== 0;
    }
    /**
     * @return {?}
     */
    get hasStreetAddress() {
        return this.streetAddress !== '';
    }
}
function Address_tsickle_Closure_declarations() {
    /** @type {?} */
    Address.prototype.firstName;
    /** @type {?} */
    Address.prototype.lastName;
    /** @type {?} */
    Address.prototype.streetAddress;
    /** @type {?} */
    Address.prototype.address2;
    /** @type {?} */
    Address.prototype.city;
    /** @type {?} */
    Address.prototype.state;
    /** @type {?} */
    Address.prototype.stateId;
    /** @type {?} */
    Address.prototype.zipCode;
    /** @type {?} */
    Address.prototype.metadata;
}
export class Alert {
    constructor() {
        this.message = '';
    }
}
function Alert_tsickle_Closure_declarations() {
    /** @type {?} */
    Alert.prototype.message;
    /** @type {?} */
    Alert.prototype.type;
}
export class Coordinates {
    constructor() {
        this.row = 0;
        this.column = 0;
    }
}
function Coordinates_tsickle_Closure_declarations() {
    /** @type {?} */
    Coordinates.prototype.row;
    /** @type {?} */
    Coordinates.prototype.column;
}
/**
 * @record
 * @template T
 */
export function Dictionary() { }
function Dictionary_tsickle_Closure_declarations() {
    /* TODO: handle strange member:
    [id: string]: T;
    */
}
export class Dimensions {
    constructor() {
        this.height = 0;
        this.width = 0;
        this.rows = 0;
        this.columns = 0;
    }
    /**
     * @return {?}
     */
    get approxRatio() {
        return this.rows / this.columns;
    }
    /**
     * @return {?}
     */
    get ratio() {
        return this.height / this.width;
    }
}
function Dimensions_tsickle_Closure_declarations() {
    /** @type {?} */
    Dimensions.prototype.height;
    /** @type {?} */
    Dimensions.prototype.width;
    /** @type {?} */
    Dimensions.prototype.rows;
    /** @type {?} */
    Dimensions.prototype.columns;
}
export class Email {
    constructor() {
        this.id = 0;
        this.bcc = '';
        this.body = '';
        this.cc = '';
        this.failed = '';
        this.from = '';
        this.sent = false;
        this.sentDate = new Date();
        this.subject = '';
        this.to = '';
        this.createdById = null;
        this.createdDate = new Date();
        this.attachments = [];
    }
}
function Email_tsickle_Closure_declarations() {
    /** @type {?} */
    Email.prototype.id;
    /** @type {?} */
    Email.prototype.bcc;
    /** @type {?} */
    Email.prototype.body;
    /** @type {?} */
    Email.prototype.cc;
    /** @type {?} */
    Email.prototype.failed;
    /** @type {?} */
    Email.prototype.from;
    /** @type {?} */
    Email.prototype.sent;
    /** @type {?} */
    Email.prototype.sentDate;
    /** @type {?} */
    Email.prototype.subject;
    /** @type {?} */
    Email.prototype.to;
    /** @type {?} */
    Email.prototype.createdById;
    /** @type {?} */
    Email.prototype.createdDate;
    /** @type {?} */
    Email.prototype.createdBy;
    /** @type {?} */
    Email.prototype.attachments;
}
export const /** @type {?} */ EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
export class Filters {
    constructor() {
        this.skip = 0;
        this.sortBy = '';
        this.take = 0;
    }
}
function Filters_tsickle_Closure_declarations() {
    /** @type {?} */
    Filters.prototype.skip;
    /** @type {?} */
    Filters.prototype.sortBy;
    /** @type {?} */
    Filters.prototype.take;
}
/**
 * @record
 */
export function HasId() { }
function HasId_tsickle_Closure_declarations() {
    /** @type {?} */
    HasId.prototype.id;
}
/**
 * @record
 */
export function HasMetadata() { }
function HasMetadata_tsickle_Closure_declarations() {
    /** @type {?} */
    HasMetadata.prototype.metadata;
}
export class Image {
    constructor() {
        this.src = '';
        this.height = 0;
        this.width = 0;
    }
    /**
     * @return {?}
     */
    get horizontal() {
        return this.orientation === 'h';
    }
    /**
     * @return {?}
     */
    get vertical() {
        return this.orientation === 'v';
    }
    /**
     * @return {?}
     */
    get colspan() {
        return this.vertical ? 1 : 1;
    }
    /**
     * @return {?}
     */
    get rowspan() {
        return this.vertical ? 2 : 1;
    }
}
function Image_tsickle_Closure_declarations() {
    /** @type {?} */
    Image.prototype.src;
    /** @type {?} */
    Image.prototype.orientation;
    /** @type {?} */
    Image.prototype.height;
    /** @type {?} */
    Image.prototype.width;
}
export class Metadata {
    constructor() {
        this.controls = [];
        this.ignore = [];
        this.label = '';
        this.name = '';
    }
}
function Metadata_tsickle_Closure_declarations() {
    /** @type {?} */
    Metadata.prototype.controls;
    /** @type {?} */
    Metadata.prototype.ignore;
    /** @type {?} */
    Metadata.prototype.label;
    /** @type {?} */
    Metadata.prototype.name;
    /** @type {?} */
    Metadata.prototype.value;
}
/** @enum {number} */
const MetadataType = {
    CLASS: 0,
    METHOD: 1,
    PROPERTY: 2,
    PARAMETER: 3,
    STATIC_METHOD: 4,
    STATIC_PROPERTY: 5,
};
export { MetadataType };
MetadataType[MetadataType.CLASS] = "CLASS";
MetadataType[MetadataType.METHOD] = "METHOD";
MetadataType[MetadataType.PROPERTY] = "PROPERTY";
MetadataType[MetadataType.PARAMETER] = "PARAMETER";
MetadataType[MetadataType.STATIC_METHOD] = "STATIC_METHOD";
MetadataType[MetadataType.STATIC_PROPERTY] = "STATIC_PROPERTY";
/**
 * @template T
 */
export class PropertyMetadata {
    constructor() {
        this.ignore = [];
        this.label = '';
        this.name = '';
    }
}
function PropertyMetadata_tsickle_Closure_declarations() {
    /** @type {?} */
    PropertyMetadata.prototype.ignore;
    /** @type {?} */
    PropertyMetadata.prototype.label;
    /** @type {?} */
    PropertyMetadata.prototype.name;
    /** @type {?} */
    PropertyMetadata.prototype.value;
}
export class QueryItem {
    constructor() {
        this.label = '';
    }
}
function QueryItem_tsickle_Closure_declarations() {
    /** @type {?} */
    QueryItem.prototype.label;
    /** @type {?} */
    QueryItem.prototype.value;
}
/**
 * @template T
 */
export class QueryModel {
    constructor() {
        this.userId = 0;
        this.accountId = 0;
        this.fields = [];
        this.filters = [];
        this.groups = [];
        this.params = {};
        this.skip = 0;
        this.sort = [];
        this.take = 0;
        this.term = '';
    }
    /**
     * @return {?}
     */
    get hasParams() {
        return this.totalParams > 0;
    }
    /**
     * @return {?}
     */
    get keys() {
        return Object.keys(new QueryModel());
    }
    /**
     * @return {?}
     */
    get totalParams() {
        return Object.keys(this.params).length;
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static AppendQueryString(query) {
        const /** @type {?} */ obj = QueryModel.BuildQueryObject(query);
        return Object.keys(obj).reduce((acc, key) => {
            const /** @type {?} */ str = obj[key];
            return str ? QueryModel.AppendToQueryString(acc, str) : acc;
        }, '');
    }
    /**
     * @param {?} path
     * @param {?} str
     * @return {?}
     */
    static AppendToQueryString(path, str) {
        return path ? `${path}&${str}` : str;
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static BuildQueryString(query) {
        const /** @type {?} */ path = QueryModel.AppendQueryString(query);
        return path ? `?${path}` : '';
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static BuildQueryObject(query) {
        return Object.assign({
            skip: QueryModel.QuerySkip(query),
            take: QueryModel.QueryTake(query),
            term: QueryModel.QueryTerm(query)
        }, QueryModel.QueryParams(query));
    }
    /**
     * @param {?} date
     * @return {?}
     */
    static FormatDate(date) {
        const /** @type {?} */ d = new Date(date);
        let /** @type {?} */ month = '' + (d.getMonth() + 1);
        let /** @type {?} */ day = '' + d.getDate();
        const /** @type {?} */ year = d.getFullYear();
        if (month.length < 2) {
            month = '0' + month;
        }
        if (day.length < 2) {
            day = '0' + day;
        }
        return [year, month, day].join('-');
    }
    /**
     * @param {?} queryString
     * @return {?}
     */
    static ParseQuery(queryString) {
        const /** @type {?} */ query = {};
        const /** @type {?} */ pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');
        for (let /** @type {?} */ i = 0; i < pairs.length; i++) {
            const /** @type {?} */ pair = pairs[i].split('=');
            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');
        }
        return query;
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static QueryParams(query) {
        return Object.keys(query.params)
            .reduce((acc, key) => Object.assign({}, acc, { [key]: `${key}=${query.params[key]}` }), {});
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static QuerySkip(query) {
        return query.skip ? `skip=${query.skip}` : '';
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static QueryTake(query) {
        return query.take ? `take=${query.take}` : '';
    }
    /**
     * @param {?} query
     * @return {?}
     */
    static QueryTerm(query) {
        return query.term ? `term=${query.term}` : '';
    }
    /**
     * @return {?}
     */
    get queryParams() {
        return QueryModel.QueryParams(this);
    }
    /**
     * @return {?}
     */
    get queryString() {
        return QueryModel.BuildQueryString(this);
    }
    /**
     * @return {?}
     */
    get queryObject() {
        return QueryModel.BuildQueryObject(this);
    }
    /**
     * @return {?}
     */
    get querySkip() {
        return this.skip ? `skip=${this.skip}` : '';
    }
    /**
     * @return {?}
     */
    get queryTake() {
        return this.take ? `take=${this.take}` : '';
    }
    /**
     * @return {?}
     */
    get queryTerm() {
        return this.term ? `term=${this.term}` : '';
    }
}
function QueryModel_tsickle_Closure_declarations() {
    /** @type {?} */
    QueryModel.prototype.userId;
    /** @type {?} */
    QueryModel.prototype.accountId;
    /** @type {?} */
    QueryModel.prototype.fields;
    /** @type {?} */
    QueryModel.prototype.filterBy;
    /** @type {?} */
    QueryModel.prototype.filters;
    /** @type {?} */
    QueryModel.prototype.groupBy;
    /** @type {?} */
    QueryModel.prototype.groups;
    /** @type {?} */
    QueryModel.prototype.include;
    /** @type {?} */
    QueryModel.prototype.map;
    /** @type {?} */
    QueryModel.prototype.orderBy;
    /** @type {?} */
    QueryModel.prototype.params;
    /** @type {?} */
    QueryModel.prototype.skip;
    /** @type {?} */
    QueryModel.prototype.sort;
    /** @type {?} */
    QueryModel.prototype.take;
    /** @type {?} */
    QueryModel.prototype.term;
}
/**
 * @template T
 */
export class Search {
    constructor() {
        this.query = new QueryModel();
        this.results = [];
        this.total = 0;
    }
}
function Search_tsickle_Closure_declarations() {
    /** @type {?} */
    Search.prototype.query;
    /** @type {?} */
    Search.prototype.results;
    /** @type {?} */
    Search.prototype.total;
}
export class StyleModel {
    /**
     * @return {?}
     */
    get styles() {
        const /** @type {?} */ s = {};
        if (this.backgroundColor) {
            s['backgroundColor'] = this.backgroundColor;
        }
        if (this.border) {
            s['border'] = this.border;
        }
        if (this.borderRadius) {
            s['borderRadius.px'] = this.borderRadius;
        }
        if (this.color) {
            s['color'] = this.color;
        }
        if (this.cursor) {
            s['color'] = this.cursor;
        }
        if (this.display) {
            s['display'] = this.display;
        }
        if (this.fontSize) {
            s['fontSize'] = this.fontSize;
        }
        if (this.height) {
            s['height.px'] = this.height;
        }
        if (this.lineHeight) {
            s['line-height.px'] = this.lineHeight;
        }
        if (this.padding) {
            s['padding.px'] = this.padding;
        }
        if (this.paddingTop) {
            s['padding-top.px'] = this.paddingTop;
        }
        if (this.paddingBottom) {
            s['padding-bottom.px'] = this.paddingBottom;
        }
        if (this.paddingLeft) {
            s['padding-left.px'] = this.paddingLeft;
        }
        if (this.paddingRight) {
            s['padding-right.px'] = this.paddingRight;
        }
        if (this.textDecoration) {
            s['textDecoration'] = this.textDecoration;
        }
        if (this.width) {
            s['width.px'] = this.width;
        }
        return s;
    }
}
function StyleModel_tsickle_Closure_declarations() {
    /** @type {?} */
    StyleModel.prototype.backgroundColor;
    /** @type {?} */
    StyleModel.prototype.border;
    /** @type {?} */
    StyleModel.prototype.borderRadius;
    /** @type {?} */
    StyleModel.prototype.color;
    /** @type {?} */
    StyleModel.prototype.cursor;
    /** @type {?} */
    StyleModel.prototype.display;
    /** @type {?} */
    StyleModel.prototype.fontSize;
    /** @type {?} */
    StyleModel.prototype.height;
    /** @type {?} */
    StyleModel.prototype.lineHeight;
    /** @type {?} */
    StyleModel.prototype.padding;
    /** @type {?} */
    StyleModel.prototype.paddingTop;
    /** @type {?} */
    StyleModel.prototype.paddingBottom;
    /** @type {?} */
    StyleModel.prototype.paddingLeft;
    /** @type {?} */
    StyleModel.prototype.paddingRight;
    /** @type {?} */
    StyleModel.prototype.textDecoration;
    /** @type {?} */
    StyleModel.prototype.width;
}
/**
 * @record
 * @template T
 */
export function Type() { }
function Type_tsickle_Closure_declarations() {
    /* TODO: handle strange member:
    new(...args: any[]): T;
    */
}
/**
 * @record
 * @template T
 */
export function TypeConstructor() { }
function TypeConstructor_tsickle_Closure_declarations() {
    /* TODO: handle strange member:
    new(): T;
    */
}

//# sourceMappingURL=data:application/json;base64,
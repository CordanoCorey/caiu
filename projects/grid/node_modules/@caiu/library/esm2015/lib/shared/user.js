/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Token } from './token';
import { build } from './utils';
export class User {
    constructor() {
        this.email = '';
        this.firstName = '';
        this.lastName = '';
        this.fullName = '';
        this.password = '';
        this.confirmPassword = '';
        this.userName = '';
    }
}
function User_tsickle_Closure_declarations() {
    /** @type {?} */
    User.prototype.email;
    /** @type {?} */
    User.prototype.firstName;
    /** @type {?} */
    User.prototype.lastName;
    /** @type {?} */
    User.prototype.fullName;
    /** @type {?} */
    User.prototype.password;
    /** @type {?} */
    User.prototype.confirmPassword;
    /** @type {?} */
    User.prototype.userName;
}
export class CurrentUser extends User {
    constructor() {
        super(...arguments);
        this.token = new Token();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    static Build(data) {
        const /** @type {?} */ token = data && data.token ? build(Token, data.token) : new Token();
        return build(CurrentUser, data, { token });
    }
    /**
     * @return {?}
     */
    get authenticated() {
        return this.token && this.token.authenticated;
    }
    /**
     * @return {?}
     */
    get userRoles() {
        return new UserRoles(this);
    }
}
function CurrentUser_tsickle_Closure_declarations() {
    /** @type {?} */
    CurrentUser.prototype.token;
}
export class UserRoles {
    /**
     * @param {?=} user
     */
    constructor(user = new CurrentUser()) {
        this.user = user;
    }
}
function UserRoles_tsickle_Closure_declarations() {
    /** @type {?} */
    UserRoles.prototype.user;
}
export class Login {
    constructor() {
        this.grant_type = 'password';
        this.userName = '';
        this.password = '';
    }
}
function Login_tsickle_Closure_declarations() {
    /** @type {?} */
    Login.prototype.grant_type;
    /** @type {?} */
    Login.prototype.userName;
    /** @type {?} */
    Login.prototype.password;
}
export class ResetPassword {
    constructor() {
        this.passwordResetCode = '';
        this.password = '';
        this.confirmPassword = '';
    }
}
function ResetPassword_tsickle_Closure_declarations() {
    /** @type {?} */
    ResetPassword.prototype.passwordResetCode;
    /** @type {?} */
    ResetPassword.prototype.password;
    /** @type {?} */
    ResetPassword.prototype.confirmPassword;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL3VzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDaEMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxNQUFNOztxQkFDTSxFQUFFO3lCQUNFLEVBQUU7d0JBQ0gsRUFBRTt3QkFDRixFQUFFO3dCQUNGLEVBQUU7K0JBQ0ssRUFBRTt3QkFDVCxFQUFFOztDQUNoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFRCxNQUFNLGtCQUFtQixTQUFRLElBQUk7OztxQkFFbEIsSUFBSSxLQUFLLEVBQUU7Ozs7OztJQUUxQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQWlCO1FBQzFCLHVCQUFNLEtBQUssR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFLENBQUM7UUFDMUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztLQUM5Qzs7OztJQUVELElBQUksYUFBYTtRQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDO0tBQ2pEOzs7O0lBRUQsSUFBSSxTQUFTO1FBQ1QsTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCO0NBRUo7Ozs7O0FBRUQsTUFBTTs7OztJQUVGLFlBQW1CLE9BQW9CLElBQUksV0FBVyxFQUFFO1FBQXJDLFNBQUksR0FBSixJQUFJLENBQWlDO0tBQ3ZEO0NBRUo7Ozs7O0FBRUQsTUFBTTs7MEJBQ1csVUFBVTt3QkFDWixFQUFFO3dCQUNGLEVBQUU7O0NBQ2hCOzs7Ozs7Ozs7QUFFRCxNQUFNOztpQ0FDa0IsRUFBRTt3QkFDWCxFQUFFOytCQUNLLEVBQUU7O0NBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4gfSBmcm9tICcuL3Rva2VuJztcclxuaW1wb3J0IHsgYnVpbGQgfSBmcm9tICcuL3V0aWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBVc2VyIHtcclxuICAgIGVtYWlsID0gJyc7XHJcbiAgICBmaXJzdE5hbWUgPSAnJztcclxuICAgIGxhc3ROYW1lID0gJyc7XHJcbiAgICBmdWxsTmFtZSA9ICcnO1xyXG4gICAgcGFzc3dvcmQgPSAnJztcclxuICAgIGNvbmZpcm1QYXNzd29yZCA9ICcnO1xyXG4gICAgdXNlck5hbWUgPSAnJztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEN1cnJlbnRVc2VyIGV4dGVuZHMgVXNlciB7XHJcblxyXG4gICAgdG9rZW46IFRva2VuID0gbmV3IFRva2VuKCk7XHJcblxyXG4gICAgc3RhdGljIEJ1aWxkKGRhdGE6IEN1cnJlbnRVc2VyKTogQ3VycmVudFVzZXIge1xyXG4gICAgICAgIGNvbnN0IHRva2VuID0gZGF0YSAmJiBkYXRhLnRva2VuID8gYnVpbGQoVG9rZW4sIGRhdGEudG9rZW4pIDogbmV3IFRva2VuKCk7XHJcbiAgICAgICAgcmV0dXJuIGJ1aWxkKEN1cnJlbnRVc2VyLCBkYXRhLCB7IHRva2VuIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBhdXRoZW50aWNhdGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRva2VuICYmIHRoaXMudG9rZW4uYXV0aGVudGljYXRlZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgdXNlclJvbGVzKCk6IFVzZXJSb2xlcyB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBVc2VyUm9sZXModGhpcyk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVXNlclJvbGVzIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdXNlcjogQ3VycmVudFVzZXIgPSBuZXcgQ3VycmVudFVzZXIoKSkge1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIExvZ2luIHtcclxuICAgIGdyYW50X3R5cGUgPSAncGFzc3dvcmQnO1xyXG4gICAgdXNlck5hbWUgPSAnJztcclxuICAgIHBhc3N3b3JkID0gJyc7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBSZXNldFBhc3N3b3JkIHtcclxuICAgIHBhc3N3b3JkUmVzZXRDb2RlID0gJyc7XHJcbiAgICBwYXNzd29yZCA9ICcnO1xyXG4gICAgY29uZmlybVBhc3N3b3JkID0gJyc7XHJcbn1cclxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class AppActions {
    /**
     * @return {?}
     */
    static noAction() {
        return {
            type: AppActions.NO_ACTION
        };
    }
}
AppActions.INIT_STORE = '[Storage] Init Store';
AppActions.NO_ACTION = '[App] No Action';
function AppActions_tsickle_Closure_declarations() {
    /** @type {?} */
    AppActions.INIT_STORE;
    /** @type {?} */
    AppActions.NO_ACTION;
}
export class ConfigActions {
    /**
     * @param {?} config
     * @return {?}
     */
    static initialize(config) {
        return {
            type: ConfigActions.INITIALIZE,
            payload: config
        };
    }
}
ConfigActions.INITIALIZE = '[Config] Initialize Configuration';
function ConfigActions_tsickle_Closure_declarations() {
    /** @type {?} */
    ConfigActions.INITIALIZE;
}
export class SidenavActions {
    /**
     * @return {?}
     */
    static close() {
        return {
            type: SidenavActions.CLOSE
        };
    }
    /**
     * @return {?}
     */
    static open() {
        return {
            type: SidenavActions.OPEN
        };
    }
    /**
     * @return {?}
     */
    static toggle() {
        return {
            type: SidenavActions.TOGGLE
        };
    }
}
SidenavActions.CLOSE = '[Sidenav] Close';
SidenavActions.OPEN = '[Sidenav] Open';
SidenavActions.TOGGLE = '[Sidenav] Toggle';
function SidenavActions_tsickle_Closure_declarations() {
    /** @type {?} */
    SidenavActions.CLOSE;
    /** @type {?} */
    SidenavActions.OPEN;
    /** @type {?} */
    SidenavActions.TOGGLE;
}
export class WindowActions {
    /**
     * @param {?} payload
     * @return {?}
     */
    static resize(payload) {
        return {
            type: WindowActions.RESIZE,
            payload
        };
    }
}
WindowActions.RESIZE = '[Window] Resize';
function WindowActions_tsickle_Closure_declarations() {
    /** @type {?} */
    WindowActions.RESIZE;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvc3RvcmUvYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsTUFBTTs7OztJQUlGLE1BQU0sQ0FBQyxRQUFRO1FBQ1gsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLFVBQVUsQ0FBQyxTQUFTO1NBQzdCLENBQUM7S0FDTDs7d0JBUG1CLHNCQUFzQjt1QkFDdkIsaUJBQWlCOzs7Ozs7O0FBU3hDLE1BQU07Ozs7O0lBR0YsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFjO1FBQzVCLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxhQUFhLENBQUMsVUFBVTtZQUM5QixPQUFPLEVBQUUsTUFBTTtTQUNsQixDQUFDO0tBQ0w7OzJCQVBtQixtQ0FBbUM7Ozs7O0FBVTNELE1BQU07Ozs7SUFLRixNQUFNLENBQUMsS0FBSztRQUNSLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxjQUFjLENBQUMsS0FBSztTQUM3QixDQUFDO0tBQ0w7Ozs7SUFFRCxNQUFNLENBQUMsSUFBSTtRQUNQLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxjQUFjLENBQUMsSUFBSTtTQUM1QixDQUFDO0tBQ0w7Ozs7SUFFRCxNQUFNLENBQUMsTUFBTTtRQUNULE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxjQUFjLENBQUMsTUFBTTtTQUM5QixDQUFDO0tBQ0w7O3VCQXBCYyxpQkFBaUI7c0JBQ2xCLGdCQUFnQjt3QkFDZCxrQkFBa0I7Ozs7Ozs7OztBQXFCdEMsTUFBTTs7Ozs7SUFHRixNQUFNLENBQUMsTUFBTSxDQUFDLE9BQXFCO1FBQy9CLE1BQU0sQ0FBQztZQUNILElBQUksRUFBRSxhQUFhLENBQUMsTUFBTTtZQUMxQixPQUFPO1NBQ1YsQ0FBQztLQUNMOzt1QkFQZSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL21vZGVscyc7XHJcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uL3NoYXJlZC9jb25maWcnO1xyXG5pbXBvcnQgeyBXaW5kb3dSZXNpemUgfSBmcm9tICcuLi9zaGFyZWQvd2luZG93JztcclxuXHJcbmV4cG9ydCBjbGFzcyBBcHBBY3Rpb25zIHtcclxuICAgIHN0YXRpYyBJTklUX1NUT1JFID0gJ1tTdG9yYWdlXSBJbml0IFN0b3JlJztcclxuICAgIHN0YXRpYyBOT19BQ1RJT04gPSAnW0FwcF0gTm8gQWN0aW9uJztcclxuXHJcbiAgICBzdGF0aWMgbm9BY3Rpb24oKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBBcHBBY3Rpb25zLk5PX0FDVElPTlxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb25maWdBY3Rpb25zIHtcclxuICAgIHN0YXRpYyBJTklUSUFMSVpFID0gJ1tDb25maWddIEluaXRpYWxpemUgQ29uZmlndXJhdGlvbic7XHJcblxyXG4gICAgc3RhdGljIGluaXRpYWxpemUoY29uZmlnOiBDb25maWcpOiBBY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IENvbmZpZ0FjdGlvbnMuSU5JVElBTElaRSxcclxuICAgICAgICAgICAgcGF5bG9hZDogY29uZmlnXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNpZGVuYXZBY3Rpb25zIHtcclxuICAgIHN0YXRpYyBDTE9TRSA9ICdbU2lkZW5hdl0gQ2xvc2UnO1xyXG4gICAgc3RhdGljIE9QRU4gPSAnW1NpZGVuYXZdIE9wZW4nO1xyXG4gICAgc3RhdGljIFRPR0dMRSA9ICdbU2lkZW5hdl0gVG9nZ2xlJztcclxuXHJcbiAgICBzdGF0aWMgY2xvc2UoKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBTaWRlbmF2QWN0aW9ucy5DTE9TRVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG9wZW4oKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBTaWRlbmF2QWN0aW9ucy5PUEVOXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgdG9nZ2xlKCk6IEFjdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogU2lkZW5hdkFjdGlvbnMuVE9HR0xFXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmRvd0FjdGlvbnMge1xyXG4gICAgc3RhdGljIFJFU0laRSA9ICdbV2luZG93XSBSZXNpemUnO1xyXG5cclxuICAgIHN0YXRpYyByZXNpemUocGF5bG9hZDogV2luZG93UmVzaXplKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiBXaW5kb3dBY3Rpb25zLlJFU0laRSxcclxuICAgICAgICAgICAgcGF5bG9hZFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuIl19
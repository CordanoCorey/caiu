/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule, InjectionToken } from '@angular/core';
import { Store } from '@ngrx/store';
import { StorageEffects } from './storage.effects';
import { StorageService } from './storage.service';
export const /** @type {?} */ STORE_KEY = new InjectionToken('Local/Session Storage Key');
/**
 * @param {?} store
 * @param {?} storeKey
 * @return {?}
 */
export function storageServiceFactory(store, storeKey) {
    return new StorageService(store, storeKey);
}
/**
 * @param {?} storeKey
 * @return {?}
 */
export function provideStorage(storeKey) {
    return [
        StorageEffects,
        { provide: StorageService, useFactory: storageServiceFactory, deps: [Store, STORE_KEY] },
        { provide: STORE_KEY, useValue: storeKey },
    ];
}
export class StorageModule {
    /**
     * Provides StorageModule with storage service and effects.
     * @param {?} storeKey - The name of the key containing the store in storage.
     * @return {?}
     */
    static forRoot(storeKey) {
        return {
            ngModule: StorageModule,
            providers: provideStorage(storeKey)
        };
    }
}
StorageModule.decorators = [
    { type: NgModule },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL3N0b3JhZ2Uvc3RvcmFnZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXBDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsTUFBTSxDQUFDLHVCQUFNLFNBQVMsR0FBRyxJQUFJLGNBQWMsQ0FBUywyQkFBMkIsQ0FBQyxDQUFDOzs7Ozs7QUFFakYsTUFBTSxnQ0FBZ0MsS0FBaUIsRUFBRSxRQUFnQjtJQUN2RSxNQUFNLENBQUMsSUFBSSxjQUFjLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0NBQzVDOzs7OztBQUVELE1BQU0seUJBQXlCLFFBQWdCO0lBQzdDLE1BQU0sQ0FBQztRQUNMLGNBQWM7UUFDZCxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsVUFBVSxFQUFFLHFCQUFxQixFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsRUFBRTtRQUN4RixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRTtLQUMzQyxDQUFDO0NBQ0g7QUFHRCxNQUFNOzs7Ozs7SUFNSixNQUFNLENBQUMsT0FBTyxDQUFDLFFBQWdCO1FBQzdCLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRSxjQUFjLENBQUMsUUFBUSxDQUFDO1NBQ3BDLENBQUM7S0FDSDs7O1lBWkYsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuXHJcbmltcG9ydCB7IFN0b3JhZ2VFZmZlY3RzIH0gZnJvbSAnLi9zdG9yYWdlLmVmZmVjdHMnO1xyXG5pbXBvcnQgeyBTdG9yYWdlU2VydmljZSB9IGZyb20gJy4vc3RvcmFnZS5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBjb25zdCBTVE9SRV9LRVkgPSBuZXcgSW5qZWN0aW9uVG9rZW48c3RyaW5nPignTG9jYWwvU2Vzc2lvbiBTdG9yYWdlIEtleScpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHN0b3JhZ2VTZXJ2aWNlRmFjdG9yeShzdG9yZTogU3RvcmU8YW55Piwgc3RvcmVLZXk6IHN0cmluZyk6IFN0b3JhZ2VTZXJ2aWNlIHtcclxuICByZXR1cm4gbmV3IFN0b3JhZ2VTZXJ2aWNlKHN0b3JlLCBzdG9yZUtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlU3RvcmFnZShzdG9yZUtleTogc3RyaW5nKTogYW55W10ge1xyXG4gIHJldHVybiBbXHJcbiAgICBTdG9yYWdlRWZmZWN0cyxcclxuICAgIHsgcHJvdmlkZTogU3RvcmFnZVNlcnZpY2UsIHVzZUZhY3Rvcnk6IHN0b3JhZ2VTZXJ2aWNlRmFjdG9yeSwgZGVwczogW1N0b3JlLCBTVE9SRV9LRVldIH0sXHJcbiAgICB7IHByb3ZpZGU6IFNUT1JFX0tFWSwgdXNlVmFsdWU6IHN0b3JlS2V5IH0sXHJcbiAgXTtcclxufVxyXG5cclxuQE5nTW9kdWxlKClcclxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VNb2R1bGUge1xyXG5cclxuICAvKipcclxuICAgKiBQcm92aWRlcyBTdG9yYWdlTW9kdWxlIHdpdGggc3RvcmFnZSBzZXJ2aWNlIGFuZCBlZmZlY3RzLlxyXG4gICAqIEBwYXJhbSBzdG9yZUtleSAtIFRoZSBuYW1lIG9mIHRoZSBrZXkgY29udGFpbmluZyB0aGUgc3RvcmUgaW4gc3RvcmFnZS5cclxuICAgKi9cclxuICBzdGF0aWMgZm9yUm9vdChzdG9yZUtleTogc3RyaW5nKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogU3RvcmFnZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBwcm92aWRlU3RvcmFnZShzdG9yZUtleSlcclxuICAgIH07XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ElementRef, Input, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { GridColumn } from './grid-column.model';
export class GridColumnComponent {
    /**
     * @param {?} view
     */
    constructor(view) {
        this.view = view;
        this.editable = true;
        this.field = '';
        this.filter = 'text';
        this.filterable = true;
        this.hidden = false;
        this.locked = false;
        this.sortable = true;
    }
    /**
     * @return {?}
     */
    get colField() {
        return this.model.metadata.name;
    }
    /**
     * @return {?}
     */
    get colTitle() {
        return this.model.title;
    }
    /**
     * @return {?}
     */
    get colWidth() {
        return this.model.width;
    }
}
GridColumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'iu-grid-column',
                template: `<kendo-grid-column [field]="colField" [title]="colTitle" [width]="colWidth" #kendoGridColumn>
  <span #content>
    <ng-content></ng-content>
  </span>
</kendo-grid-column>
`,
                styles: [``]
            },] },
];
/** @nocollapse */
GridColumnComponent.ctorParameters = () => [
    { type: ViewContainerRef }
];
GridColumnComponent.propDecorators = {
    model: [{ type: Input }],
    templateRef: [{ type: Input }],
    class: [{ type: Input }],
    editable: [{ type: Input }],
    editor: [{ type: Input }],
    field: [{ type: Input }],
    filter: [{ type: Input }],
    filterable: [{ type: Input }],
    footerClass: [{ type: Input }],
    footerStyle: [{ type: Input }],
    format: [{ type: Input }],
    headerClass: [{ type: Input }],
    headerStyle: [{ type: Input }],
    hidden: [{ type: Input }],
    locked: [{ type: Input }],
    media: [{ type: Input }],
    sortable: [{ type: Input }],
    style: [{ type: Input }],
    title: [{ type: Input }],
    width: [{ type: Input }],
    content: [{ type: ViewChild, args: ['content',] }]
};
function GridColumnComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    GridColumnComponent.prototype.model;
    /** @type {?} */
    GridColumnComponent.prototype.templateRef;
    /** @type {?} */
    GridColumnComponent.prototype.class;
    /** @type {?} */
    GridColumnComponent.prototype.editable;
    /** @type {?} */
    GridColumnComponent.prototype.editor;
    /** @type {?} */
    GridColumnComponent.prototype.field;
    /** @type {?} */
    GridColumnComponent.prototype.filter;
    /** @type {?} */
    GridColumnComponent.prototype.filterable;
    /** @type {?} */
    GridColumnComponent.prototype.footerClass;
    /** @type {?} */
    GridColumnComponent.prototype.footerStyle;
    /** @type {?} */
    GridColumnComponent.prototype.format;
    /** @type {?} */
    GridColumnComponent.prototype.headerClass;
    /** @type {?} */
    GridColumnComponent.prototype.headerStyle;
    /** @type {?} */
    GridColumnComponent.prototype.hidden;
    /** @type {?} */
    GridColumnComponent.prototype.locked;
    /** @type {?} */
    GridColumnComponent.prototype.media;
    /** @type {?} */
    GridColumnComponent.prototype.sortable;
    /** @type {?} */
    GridColumnComponent.prototype.style;
    /** @type {?} */
    GridColumnComponent.prototype.title;
    /** @type {?} */
    GridColumnComponent.prototype.width;
    /** @type {?} */
    GridColumnComponent.prototype.content;
    /** @type {?} */
    GridColumnComponent.prototype.view;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNhaXUvbGlicmFyeS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2dyaWQvZ3JpZC1jb2x1bW4vZ3JpZC1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFZakQsTUFBTTs7OztJQXdCSixZQUFtQixJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjt3QkFuQnJCLElBQUk7cUJBRVAsRUFBRTtzQkFDd0MsTUFBTTswQkFDM0MsSUFBSTtzQkFNUixLQUFLO3NCQUNMLEtBQUs7d0JBRUgsSUFBSTtLQU1zQjs7OztJQUU5QyxJQUFJLFFBQVE7UUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO0tBQ2pDOzs7O0lBRUQsSUFBSSxRQUFRO1FBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0tBQ3pCOzs7O0lBRUQsSUFBSSxRQUFRO1FBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0tBQ3pCOzs7WUE5Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7Ozs7Q0FLWDtnQkFDQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDYjs7OztZQWI4RCxnQkFBZ0I7OztvQkFnQjVFLEtBQUs7MEJBQ0wsS0FBSztvQkFDTCxLQUFLO3VCQUNMLEtBQUs7cUJBQ0wsS0FBSztvQkFDTCxLQUFLO3FCQUNMLEtBQUs7eUJBQ0wsS0FBSzswQkFDTCxLQUFLOzBCQUNMLEtBQUs7cUJBQ0wsS0FBSzswQkFDTCxLQUFLOzBCQUNMLEtBQUs7cUJBQ0wsS0FBSztxQkFDTCxLQUFLO29CQUNMLEtBQUs7dUJBQ0wsS0FBSztvQkFDTCxLQUFLO29CQUNMLEtBQUs7b0JBQ0wsS0FBSztzQkFDTCxTQUFTLFNBQUMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEdyaWRDb2x1bW4gfSBmcm9tICcuL2dyaWQtY29sdW1uLm1vZGVsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXUtZ3JpZC1jb2x1bW4nLFxyXG4gIHRlbXBsYXRlOiBgPGtlbmRvLWdyaWQtY29sdW1uIFtmaWVsZF09XCJjb2xGaWVsZFwiIFt0aXRsZV09XCJjb2xUaXRsZVwiIFt3aWR0aF09XCJjb2xXaWR0aFwiICNrZW5kb0dyaWRDb2x1bW4+XHJcbiAgPHNwYW4gI2NvbnRlbnQ+XHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgPC9zcGFuPlxyXG48L2tlbmRvLWdyaWQtY29sdW1uPlxyXG5gLFxyXG4gIHN0eWxlczogW2BgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgR3JpZENvbHVtbkNvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpIG1vZGVsOiBHcmlkQ29sdW1uPGFueT47XHJcbiAgQElucHV0KCkgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgQElucHV0KCkgY2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdO1xyXG4gIEBJbnB1dCgpIGVkaXRhYmxlID0gdHJ1ZTtcclxuICBASW5wdXQoKSBlZGl0b3I6IHN0cmluZyB8IG51bWJlciB8IERhdGUgfCBib29sZWFuO1xyXG4gIEBJbnB1dCgpIGZpZWxkID0gJyc7XHJcbiAgQElucHV0KCkgZmlsdGVyOiAndGV4dCcgfCAnbnVtZXJpYycgfCAnZGF0ZScgfCAnYm9vbGVhbicgPSAndGV4dCc7XHJcbiAgQElucHV0KCkgZmlsdGVyYWJsZSA9IHRydWU7XHJcbiAgQElucHV0KCkgZm9vdGVyQ2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdIHwgeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcclxuICBASW5wdXQoKSBmb290ZXJTdHlsZTogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcclxuICBASW5wdXQoKSBmb3JtYXQ6IHN0cmluZztcclxuICBASW5wdXQoKSBoZWFkZXJDbGFzczogc3RyaW5nIHwgc3RyaW5nW10gfCB7IFtrZXk6IHN0cmluZ106IGFueSB9O1xyXG4gIEBJbnB1dCgpIGhlYWRlclN0eWxlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG4gIEBJbnB1dCgpIGhpZGRlbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGxvY2tlZCA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIG1lZGlhOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgc29ydGFibGUgPSB0cnVlO1xyXG4gIEBJbnB1dCgpIHN0eWxlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgd2lkdGg6IG51bWJlcjtcclxuICBAVmlld0NoaWxkKCdjb250ZW50JykgY29udGVudDogRWxlbWVudFJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHZpZXc6IFZpZXdDb250YWluZXJSZWYpIHsgfVxyXG5cclxuICBnZXQgY29sRmllbGQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLm1vZGVsLm1ldGFkYXRhLm5hbWU7XHJcbiAgfVxyXG5cclxuICBnZXQgY29sVGl0bGUoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLm1vZGVsLnRpdGxlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNvbFdpZHRoKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5tb2RlbC53aWR0aDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==
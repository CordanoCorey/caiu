/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { Collage } from './collage.model';
export class CollageComponent {
    constructor() {
        this.images = [];
        this.canvasHeight = 0;
        this.canvasWidth = 0;
        this.totalRows = 0;
        this.totalColumns = 0;
        this.maxRows = 0;
        this.maxColumns = 0;
    }
    /**
     * @return {?}
     */
    get collage() {
        return this.canvasHeight > 0 && this.canvasWidth > 0 ?
            Collage.Build(this.images, this.canvasHeight, this.canvasWidth, this.totalRows, this.totalColumns, this.maxRows, this.maxColumns)
            : new Collage();
    }
    /**
     * @return {?}
     */
    get tiles() {
        return this.collage.tiles;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CollageComponent.decorators = [
    { type: Component, args: [{
                selector: 'iu-collage',
                template: `<iu-tile *ngFor="let tile of tiles" [tile]="tile"></iu-tile>`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
CollageComponent.ctorParameters = () => [];
CollageComponent.propDecorators = {
    images: [{ type: Input }],
    canvasHeight: [{ type: Input }],
    canvasWidth: [{ type: Input }],
    totalRows: [{ type: Input }],
    totalColumns: [{ type: Input }],
    maxRows: [{ type: Input }],
    maxColumns: [{ type: Input }]
};
function CollageComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    CollageComponent.prototype.images;
    /** @type {?} */
    CollageComponent.prototype.canvasHeight;
    /** @type {?} */
    CollageComponent.prototype.canvasWidth;
    /** @type {?} */
    CollageComponent.prototype.totalRows;
    /** @type {?} */
    CollageComponent.prototype.totalColumns;
    /** @type {?} */
    CollageComponent.prototype.maxRows;
    /** @type {?} */
    CollageComponent.prototype.maxColumns;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvY29sbGFnZS9jb2xsYWdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSx1QkFBdUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEYsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBVTFDLE1BQU07SUFVSjtzQkFSMkIsRUFBRTs0QkFDTCxDQUFDOzJCQUNGLENBQUM7eUJBQ0gsQ0FBQzs0QkFDRSxDQUFDO3VCQUNOLENBQUM7MEJBQ0UsQ0FBQztLQUVOOzs7O0lBRWpCLElBQUksT0FBTztRQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3BELE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUNqSSxDQUFDLENBQUMsSUFBSSxPQUFPLEVBQUUsQ0FBQztLQUNuQjs7OztJQUVELElBQUksS0FBSztRQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztLQUMzQjs7OztJQUVELFFBQVE7S0FDUDs7O1lBN0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsUUFBUSxFQUFFLDhEQUE4RDtnQkFDeEUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNaLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7OztxQkFHRSxLQUFLOzJCQUNMLEtBQUs7MEJBQ0wsS0FBSzt3QkFDTCxLQUFLOzJCQUNMLEtBQUs7c0JBQ0wsS0FBSzt5QkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgQ29sbGFnZSB9IGZyb20gJy4vY29sbGFnZS5tb2RlbCc7XHJcbmltcG9ydCB7IFRpbGUgfSBmcm9tICcuLi90aWxlL3RpbGUubW9kZWwnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9tb2RlbHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpdS1jb2xsYWdlJyxcclxuICB0ZW1wbGF0ZTogYDxpdS10aWxlICpuZ0Zvcj1cImxldCB0aWxlIG9mIHRpbGVzXCIgW3RpbGVdPVwidGlsZVwiPjwvaXUtdGlsZT5gLFxyXG4gIHN0eWxlczogW2BgXSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29sbGFnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIGltYWdlczogSW1hZ2VbXSA9IFtdO1xyXG4gIEBJbnB1dCgpIGNhbnZhc0hlaWdodCA9IDA7XHJcbiAgQElucHV0KCkgY2FudmFzV2lkdGggPSAwO1xyXG4gIEBJbnB1dCgpIHRvdGFsUm93cyA9IDA7XHJcbiAgQElucHV0KCkgdG90YWxDb2x1bW5zID0gMDtcclxuICBASW5wdXQoKSBtYXhSb3dzID0gMDtcclxuICBASW5wdXQoKSBtYXhDb2x1bW5zID0gMDtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgZ2V0IGNvbGxhZ2UoKTogQ29sbGFnZSB7XHJcbiAgICByZXR1cm4gdGhpcy5jYW52YXNIZWlnaHQgPiAwICYmIHRoaXMuY2FudmFzV2lkdGggPiAwID9cclxuICAgICAgQ29sbGFnZS5CdWlsZCh0aGlzLmltYWdlcywgdGhpcy5jYW52YXNIZWlnaHQsIHRoaXMuY2FudmFzV2lkdGgsIHRoaXMudG90YWxSb3dzLCB0aGlzLnRvdGFsQ29sdW1ucywgdGhpcy5tYXhSb3dzLCB0aGlzLm1heENvbHVtbnMpXHJcbiAgICAgIDogbmV3IENvbGxhZ2UoKTtcclxuICB9XHJcblxyXG4gIGdldCB0aWxlcygpOiBUaWxlW10ge1xyXG4gICAgcmV0dXJuIHRoaXMuY29sbGFnZS50aWxlcztcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbn1cclxuIl19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Dimensions, Image, Coordinates } from '../../shared/models';
export class Tile {
    constructor() {
        this.id = 0;
        this.cellHeight = 0;
        this.cellWidth = 0;
        this.color = '#fff';
        this.name = '';
        this.src = '';
        this.text = '';
        this._coordinates = new Coordinates();
        this._dimensions = new Dimensions();
        this._image = new Image();
    }
    /**
     * @return {?}
     */
    get coordinates() {
        return this._coordinates || new Coordinates();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set coordinates(value) {
        this._coordinates = value;
    }
    /**
     * @return {?}
     */
    get dimensions() {
        return this._dimensions || new Dimensions();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set dimensions(value) {
        this._dimensions = value;
    }
    /**
     * @return {?}
     */
    get image() {
        return this._image || new Image();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set image(value) {
        this._image = value;
    }
    /**
     * @return {?}
     */
    get height() {
        return this.rows * this.cellHeight;
    }
    /**
     * @return {?}
     */
    get width() {
        return this.columns * this.cellWidth;
    }
    /**
     * @return {?}
     */
    get imageSrc() {
        return this.image.src;
    }
    /**
     * @return {?}
     */
    get imageHeight() {
        return this.image.height * this.scale;
    }
    /**
     * @return {?}
     */
    get imageWidth() {
        return this.image.width * this.scale;
    }
    /**
     * @return {?}
     */
    get rows() {
        return this.dimensions.rows;
    }
    /**
     * @return {?}
     */
    get columns() {
        return this.dimensions.columns;
    }
    /**
     * @return {?}
     */
    get positionTop() {
        return this.startRow * this.cellHeight;
    }
    /**
     * @return {?}
     */
    get positionLeft() {
        return this.startColumn * this.cellWidth;
    }
    /**
     * @return {?}
     */
    get approxRatio() {
        return this.rows * this.cellHeight / this.columns * this.cellWidth;
    }
    /**
     * @return {?}
     */
    get ratio() {
        return this.dimensions.ratio;
    }
    /**
     * @return {?}
     */
    get scale() {
        return this.heightScale >= this.widthScale ? this.heightScale : this.widthScale;
    }
    /**
     * @return {?}
     */
    get heightScale() {
        return (this.rows * this.cellHeight) / this.image.height;
    }
    /**
     * @return {?}
     */
    get widthScale() {
        return (this.columns * this.cellWidth) / this.image.width;
    }
    /**
     * @return {?}
     */
    get startRow() {
        return this.coordinates.row;
    }
    /**
     * @return {?}
     */
    get startColumn() {
        return this.coordinates.column;
    }
}
function Tile_tsickle_Closure_declarations() {
    /** @type {?} */
    Tile.prototype.id;
    /** @type {?} */
    Tile.prototype.cellHeight;
    /** @type {?} */
    Tile.prototype.cellWidth;
    /** @type {?} */
    Tile.prototype.color;
    /** @type {?} */
    Tile.prototype.name;
    /** @type {?} */
    Tile.prototype.src;
    /** @type {?} */
    Tile.prototype.text;
    /** @type {?} */
    Tile.prototype._coordinates;
    /** @type {?} */
    Tile.prototype._dimensions;
    /** @type {?} */
    Tile.prototype._image;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWxlL3RpbGUubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXJFLE1BQU07O2tCQUNHLENBQUM7MEJBQ08sQ0FBQzt5QkFDRixDQUFDO3FCQUNMLE1BQU07b0JBQ1AsRUFBRTttQkFDSCxFQUFFO29CQUNELEVBQUU7NEJBRW1CLElBQUksV0FBVyxFQUFFOzJCQUNuQixJQUFJLFVBQVUsRUFBRTtzQkFDMUIsSUFBSSxLQUFLLEVBQUU7Ozs7O0lBRTNCLElBQUksV0FBVztRQUNYLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksV0FBVyxFQUFFLENBQUM7S0FDakQ7Ozs7O0lBRUQsSUFBSSxXQUFXLENBQUMsS0FBa0I7UUFDOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7S0FDN0I7Ozs7SUFFRCxJQUFJLFVBQVU7UUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLFVBQVUsRUFBRSxDQUFDO0tBQy9DOzs7OztJQUVELElBQUksVUFBVSxDQUFDLEtBQWlCO1FBQzVCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0tBQzVCOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUUsQ0FBQztLQUNyQzs7Ozs7SUFFRCxJQUFJLEtBQUssQ0FBQyxLQUFZO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0tBQ3ZCOzs7O0lBRUQsSUFBSSxNQUFNO1FBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztLQUN0Qzs7OztJQUVELElBQUksS0FBSztRQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7S0FDeEM7Ozs7SUFFRCxJQUFJLFFBQVE7UUFDUixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7S0FDekI7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDWCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUN6Qzs7OztJQUVELElBQUksVUFBVTtRQUNWLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0tBQ3hDOzs7O0lBRUQsSUFBSSxJQUFJO1FBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO0tBQy9COzs7O0lBRUQsSUFBSSxPQUFPO1FBQ1AsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO0tBQ2xDOzs7O0lBRUQsSUFBSSxXQUFXO1FBQ1gsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztLQUMxQzs7OztJQUVELElBQUksWUFBWTtRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7S0FDNUM7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDWCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztLQUN0RTs7OztJQUVELElBQUksS0FBSztRQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztLQUNoQzs7OztJQUVELElBQUksS0FBSztRQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7S0FDbkY7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDWCxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztLQUM1RDs7OztJQUVELElBQUksVUFBVTtRQUNWLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0tBQzdEOzs7O0lBRUQsSUFBSSxRQUFRO1FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDO0tBQy9COzs7O0lBRUQsSUFBSSxXQUFXO1FBQ1gsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO0tBQ2xDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaW1lbnNpb25zLCBJbWFnZSwgQ29vcmRpbmF0ZXMgfSBmcm9tICcuLi8uLi9zaGFyZWQvbW9kZWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBUaWxlIHtcclxuICAgIGlkID0gMDtcclxuICAgIGNlbGxIZWlnaHQgPSAwO1xyXG4gICAgY2VsbFdpZHRoID0gMDtcclxuICAgIGNvbG9yID0gJyNmZmYnO1xyXG4gICAgbmFtZSA9ICcnO1xyXG4gICAgc3JjID0gJyc7XHJcbiAgICB0ZXh0ID0gJyc7XHJcblxyXG4gICAgX2Nvb3JkaW5hdGVzOiBDb29yZGluYXRlcyA9IG5ldyBDb29yZGluYXRlcygpO1xyXG4gICAgX2RpbWVuc2lvbnM6IERpbWVuc2lvbnMgPSBuZXcgRGltZW5zaW9ucygpO1xyXG4gICAgX2ltYWdlOiBJbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG5cclxuICAgIGdldCBjb29yZGluYXRlcygpOiBDb29yZGluYXRlcyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Nvb3JkaW5hdGVzIHx8IG5ldyBDb29yZGluYXRlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBjb29yZGluYXRlcyh2YWx1ZTogQ29vcmRpbmF0ZXMpIHtcclxuICAgICAgICB0aGlzLl9jb29yZGluYXRlcyA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBkaW1lbnNpb25zKCk6IERpbWVuc2lvbnMge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kaW1lbnNpb25zIHx8IG5ldyBEaW1lbnNpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGRpbWVuc2lvbnModmFsdWU6IERpbWVuc2lvbnMpIHtcclxuICAgICAgICB0aGlzLl9kaW1lbnNpb25zID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGltYWdlKCk6IEltYWdlIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW1hZ2UgfHwgbmV3IEltYWdlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGltYWdlKHZhbHVlOiBJbWFnZSkge1xyXG4gICAgICAgIHRoaXMuX2ltYWdlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGhlaWdodCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJvd3MgKiB0aGlzLmNlbGxIZWlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHdpZHRoKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1ucyAqIHRoaXMuY2VsbFdpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbWFnZVNyYygpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlLnNyYztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaW1hZ2VIZWlnaHQoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pbWFnZS5oZWlnaHQgKiB0aGlzLnNjYWxlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbWFnZVdpZHRoKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1hZ2Uud2lkdGggKiB0aGlzLnNjYWxlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCByb3dzKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGltZW5zaW9ucy5yb3dzO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjb2x1bW5zKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGltZW5zaW9ucy5jb2x1bW5zO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwb3NpdGlvblRvcCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN0YXJ0Um93ICogdGhpcy5jZWxsSGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwb3NpdGlvbkxlZnQoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGFydENvbHVtbiAqIHRoaXMuY2VsbFdpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBhcHByb3hSYXRpbygpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJvd3MgKiB0aGlzLmNlbGxIZWlnaHQgLyB0aGlzLmNvbHVtbnMgKiB0aGlzLmNlbGxXaWR0aDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgcmF0aW8oKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kaW1lbnNpb25zLnJhdGlvO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzY2FsZSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhlaWdodFNjYWxlID49IHRoaXMud2lkdGhTY2FsZSA/IHRoaXMuaGVpZ2h0U2NhbGUgOiB0aGlzLndpZHRoU2NhbGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGhlaWdodFNjYWxlKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLnJvd3MgKiB0aGlzLmNlbGxIZWlnaHQpIC8gdGhpcy5pbWFnZS5oZWlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHdpZHRoU2NhbGUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gKHRoaXMuY29sdW1ucyAqIHRoaXMuY2VsbFdpZHRoKSAvIHRoaXMuaW1hZ2Uud2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHN0YXJ0Um93KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29vcmRpbmF0ZXMucm93O1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzdGFydENvbHVtbigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvb3JkaW5hdGVzLmNvbHVtbjtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
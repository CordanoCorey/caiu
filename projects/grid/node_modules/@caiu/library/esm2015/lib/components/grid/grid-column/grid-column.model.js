/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { StyleModel } from '../../../shared/models';
/**
 * @template T
 */
export class GridColumn {
    /**
     * @param {?} name
     * @param {?} label
     */
    constructor(name, label) {
        this.name = name;
        this.label = label;
        this.styleModel = new StyleModel();
        this.editable = true;
        this.editor = 'text';
        this.filter = 'text';
        this.filterable = true;
        this.hidden = false;
        this.locked = false;
        this.sortable = true;
        this.metadata = { name, label };
        this.title = label;
    }
    /**
     * @return {?}
     */
    get class() {
        return this._class;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set class(value) {
        this._class = value;
    }
    /**
     * @return {?}
     */
    get field() {
        return this._field ? this._field : this.metadata.name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set field(value) {
        this._field = value;
    }
    /**
     * @return {?}
     */
    get title() {
        return this._title ? this._title : this.metadata.label;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set title(value) {
        this._title = value;
    }
    /**
     * @return {?}
     */
    get width() {
        return this._width;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set width(value) {
        this._width = value;
    }
    /**
     * @param {?} col
     * @return {?}
     */
    update(col) {
        this.class = col.class;
        this.editable = col.editable;
        this.editor = col.editor;
        this.field = col.field;
        this.filter = col.filter;
        this.filterable = col.filterable;
        this.footerClass = col.footerClass;
        this.footerStyle = col.footerStyle;
        this.format = col.format;
        this.headerClass = col.headerClass;
        this.headerStyle = col.headerStyle;
        this.hidden = col.hidden;
        this.locked = col.locked;
        this.media = col.media;
        this.sortable = col.sortable;
        this.style = col.style;
        this.title = col.title;
        this.width = col.width;
    }
}
function GridColumn_tsickle_Closure_declarations() {
    /** @type {?} */
    GridColumn.prototype._class;
    /** @type {?} */
    GridColumn.prototype._field;
    /** @type {?} */
    GridColumn.prototype._title;
    /** @type {?} */
    GridColumn.prototype._width;
    /** @type {?} */
    GridColumn.prototype.styleModel;
    /** @type {?} */
    GridColumn.prototype.metadata;
    /** @type {?} */
    GridColumn.prototype.editable;
    /** @type {?} */
    GridColumn.prototype.editor;
    /** @type {?} */
    GridColumn.prototype.filter;
    /** @type {?} */
    GridColumn.prototype.filterable;
    /** @type {?} */
    GridColumn.prototype.footerClass;
    /** @type {?} */
    GridColumn.prototype.footerStyle;
    /** @type {?} */
    GridColumn.prototype.format;
    /** @type {?} */
    GridColumn.prototype.headerClass;
    /** @type {?} */
    GridColumn.prototype.headerStyle;
    /** @type {?} */
    GridColumn.prototype.hidden;
    /** @type {?} */
    GridColumn.prototype.locked;
    /** @type {?} */
    GridColumn.prototype.media;
    /** @type {?} */
    GridColumn.prototype.sortable;
    /** @type {?} */
    GridColumn.prototype.style;
    /** @type {?} */
    GridColumn.prototype.name;
    /** @type {?} */
    GridColumn.prototype.label;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1jb2x1bW4ubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FpdS9saWJyYXJ5LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZ3JpZC9ncmlkLWNvbHVtbi9ncmlkLWNvbHVtbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsT0FBTyxFQUFvQixVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQUV0RSxNQUFNOzs7OztJQXlCRixZQUFtQixJQUFZLEVBQVMsS0FBYTtRQUFsQyxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBUTswQkFsQjVCLElBQUksVUFBVSxFQUFFO3dCQUU5QixJQUFJO3NCQUM0QixNQUFNO3NCQUNOLE1BQU07MEJBQ3BDLElBQUk7c0JBTVIsS0FBSztzQkFDTCxLQUFLO3dCQUVILElBQUk7UUFLWCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0tBQ3RCOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7S0FDdEI7Ozs7O0lBRUQsSUFBSSxLQUFLLENBQUMsS0FBd0I7UUFDOUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7S0FDdkI7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDTCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7S0FDekQ7Ozs7O0lBRUQsSUFBSSxLQUFLLENBQUMsS0FBYTtRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztLQUN2Qjs7OztJQUVELElBQUksS0FBSztRQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztLQUMxRDs7Ozs7SUFFRCxJQUFJLEtBQUssQ0FBQyxLQUFhO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0tBQ3ZCOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7S0FDdEI7Ozs7O0lBRUQsSUFBSSxLQUFLLENBQUMsS0FBYTtRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztLQUN2Qjs7Ozs7SUFFRCxNQUFNLENBQUMsR0FBd0I7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQztRQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUM7UUFDakMsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztRQUNuQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztRQUNuQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUM7UUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7S0FDMUI7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyaWRDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuL2dyaWQtY29sdW1uLmNvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgeyBQcm9wZXJ0eU1ldGFkYXRhLCBTdHlsZU1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL21vZGVscyc7XHJcblxyXG5leHBvcnQgY2xhc3MgR3JpZENvbHVtbjxUPiB7XHJcblxyXG4gICAgcHJpdmF0ZSBfY2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdO1xyXG4gICAgcHJpdmF0ZSBfZmllbGQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3RpdGxlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF93aWR0aDogbnVtYmVyO1xyXG5cclxuICAgIHN0eWxlTW9kZWw6IFN0eWxlTW9kZWwgPSBuZXcgU3R5bGVNb2RlbCgpO1xyXG4gICAgbWV0YWRhdGE6IFByb3BlcnR5TWV0YWRhdGE8VD47XHJcbiAgICBlZGl0YWJsZSA9IHRydWU7XHJcbiAgICBlZGl0b3I6IHN0cmluZyB8IG51bWJlciB8IERhdGUgfCBib29sZWFuID0gJ3RleHQnO1xyXG4gICAgZmlsdGVyOiBzdHJpbmcgfCBudW1iZXIgfCBEYXRlIHwgYm9vbGVhbiA9ICd0ZXh0JztcclxuICAgIGZpbHRlcmFibGUgPSB0cnVlO1xyXG4gICAgZm9vdGVyQ2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdIHwgeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcclxuICAgIGZvb3RlclN0eWxlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG4gICAgZm9ybWF0OiBzdHJpbmc7XHJcbiAgICBoZWFkZXJDbGFzczogc3RyaW5nIHwgc3RyaW5nW10gfCB7IFtrZXk6IHN0cmluZ106IGFueSB9O1xyXG4gICAgaGVhZGVyU3R5bGU6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XHJcbiAgICBoaWRkZW4gPSBmYWxzZTtcclxuICAgIGxvY2tlZCA9IGZhbHNlO1xyXG4gICAgbWVkaWE6IHN0cmluZztcclxuICAgIHNvcnRhYmxlID0gdHJ1ZTtcclxuICAgIHN0eWxlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nLCBwdWJsaWMgbGFiZWw6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSB7IG5hbWUsIGxhYmVsIH07XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IGxhYmVsO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjbGFzcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY2xhc3M7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGNsYXNzKHZhbHVlOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xyXG4gICAgICAgIHRoaXMuX2NsYXNzID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGZpZWxkKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZpZWxkID8gdGhpcy5fZmllbGQgOiB0aGlzLm1ldGFkYXRhLm5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGZpZWxkKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9maWVsZCA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCB0aXRsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90aXRsZSA/IHRoaXMuX3RpdGxlIDogdGhpcy5tZXRhZGF0YS5sYWJlbDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgdGl0bGUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHdpZHRoKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCB3aWR0aCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5fd2lkdGggPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoY29sOiBHcmlkQ29sdW1uQ29tcG9uZW50KSB7XHJcbiAgICAgICAgdGhpcy5jbGFzcyA9IGNvbC5jbGFzcztcclxuICAgICAgICB0aGlzLmVkaXRhYmxlID0gY29sLmVkaXRhYmxlO1xyXG4gICAgICAgIHRoaXMuZWRpdG9yID0gY29sLmVkaXRvcjtcclxuICAgICAgICB0aGlzLmZpZWxkID0gY29sLmZpZWxkO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyID0gY29sLmZpbHRlcjtcclxuICAgICAgICB0aGlzLmZpbHRlcmFibGUgPSBjb2wuZmlsdGVyYWJsZTtcclxuICAgICAgICB0aGlzLmZvb3RlckNsYXNzID0gY29sLmZvb3RlckNsYXNzO1xyXG4gICAgICAgIHRoaXMuZm9vdGVyU3R5bGUgPSBjb2wuZm9vdGVyU3R5bGU7XHJcbiAgICAgICAgdGhpcy5mb3JtYXQgPSBjb2wuZm9ybWF0O1xyXG4gICAgICAgIHRoaXMuaGVhZGVyQ2xhc3MgPSBjb2wuaGVhZGVyQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5oZWFkZXJTdHlsZSA9IGNvbC5oZWFkZXJTdHlsZTtcclxuICAgICAgICB0aGlzLmhpZGRlbiA9IGNvbC5oaWRkZW47XHJcbiAgICAgICAgdGhpcy5sb2NrZWQgPSBjb2wubG9ja2VkO1xyXG4gICAgICAgIHRoaXMubWVkaWEgPSBjb2wubWVkaWE7XHJcbiAgICAgICAgdGhpcy5zb3J0YWJsZSA9IGNvbC5zb3J0YWJsZTtcclxuICAgICAgICB0aGlzLnN0eWxlID0gY29sLnN0eWxlO1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSBjb2wudGl0bGU7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IGNvbC53aWR0aDtcclxuICAgIH1cclxufVxyXG4iXX0=
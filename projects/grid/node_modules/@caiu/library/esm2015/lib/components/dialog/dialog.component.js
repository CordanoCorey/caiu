/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { DialogModel } from './dialog.model';
export class DialogComponent {
    constructor() {
        this.model = new DialogModel();
        this.showActions = true;
        this.showCloseAction = false;
        this.showCloseIcon = true;
        this.defaultActionColor = 'accent';
    }
    /**
     * @return {?}
     */
    get actions() {
        return this.model.actions;
    }
    /**
     * @return {?}
     */
    get actionWidth() {
        const /** @type {?} */ actionsCount = Math.max(this.actions.length, 1);
        return `${100 / actionsCount}%`;
    }
    /**
     * @return {?}
     */
    get title() {
        return this.model.title;
    }
}
DialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'iu-dialog',
                template: `<mat-toolbar color="primary" mat-dialog-title>
  <span class="dialog-title">
    {{ title }}
    <button *ngIf="showCloseIcon" mat-button [mat-dialog-close]="null">
      <mat-icon>close</mat-icon>
    </button>
  </span>
</mat-toolbar>
<mat-dialog-content class="scrollable">
  <ng-content></ng-content>
</mat-dialog-content>
<mat-dialog-actions *ngIf="showActions && actions.length > 0">
  <button *ngFor="let action of actions" mat-raised-button [mat-dialog-close]="action.value" [style.width]="actionWidth" [style.color]="action.color">{{ action.label }}</button>
</mat-dialog-actions>
<mat-dialog-actions *ngIf="showCloseAction && actions.length === 0">
  <button mat-raised-button mat-dialog-close="close" [style.width]="actionWidth" [style.color]="defaultActionColor">Close</button>
</mat-dialog-actions>
`,
                styles: [`iu-dialog .mat-toolbar{margin:-24px -24px 0;width:calc(100% + 48px);min-height:32px}iu-dialog .mat-toolbar .dialog-title{position:relative;height:calc(100% - 8px);width:100%;margin-top:8px}iu-dialog .mat-toolbar .dialog-title button{cursor:pointer;position:absolute;right:0;top:-5px;border-radius:100%;height:42px;width:42px;min-width:36px}iu-dialog .mat-toolbar .dialog-title button:hover,iu-dialog .mat-toolbar .dialog-title button:hover mat-icon{font-weight:700}iu-dialog .mat-toolbar .dialog-title mat-icon{position:absolute;top:9px;right:8px;z-index:1}iu-dialog .mat-toolbar-row{height:48px}iu-dialog .mat-dialog-actions{margin-left:-24px;margin-right:-24px;color:#fff;padding:0}iu-dialog .mat-dialog-actions button{padding:12px 0}iu-dialog .mat-dialog-actions .mat-accent{color:#fff!important}`],
                encapsulation: ViewEncapsulation.None
            },] },
];
/** @nocollapse */
DialogComponent.ctorParameters = () => [];
DialogComponent.propDecorators = {
    model: [{ type: Input }],
    showActions: [{ type: Input }],
    showCloseAction: [{ type: Input }],
    showCloseIcon: [{ type: Input }],
    defaultActionColor: [{ type: Input }]
};
function DialogComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    DialogComponent.prototype.model;
    /** @type {?} */
    DialogComponent.prototype.showActions;
    /** @type {?} */
    DialogComponent.prototype.showCloseAction;
    /** @type {?} */
    DialogComponent.prototype.showCloseIcon;
    /** @type {?} */
    DialogComponent.prototype.defaultActionColor;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kaWFsb2cvZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEUsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQXlCM0QsTUFBTTtJQVFKO3FCQU44QixJQUFJLFdBQVcsRUFBRTsyQkFDeEIsSUFBSTsrQkFDQSxLQUFLOzZCQUNQLElBQUk7a0NBQ0MsUUFBUTtLQUVyQjs7OztJQUVqQixJQUFJLE9BQU87UUFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7S0FDM0I7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDYix1QkFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0RCxNQUFNLENBQUMsR0FBRyxHQUFHLEdBQUcsWUFBWSxHQUFHLENBQUM7S0FDakM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDUCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7S0FDekI7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQlg7Z0JBQ0MsTUFBTSxFQUFFLENBQUMsaXlCQUFpeUIsQ0FBQztnQkFDM3lCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2FBQ3RDOzs7OztvQkFHRSxLQUFLOzBCQUNMLEtBQUs7OEJBQ0wsS0FBSzs0QkFDTCxLQUFLO2lDQUNMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgRGlhbG9nQWN0aW9uLCBEaWFsb2dNb2RlbCB9IGZyb20gJy4vZGlhbG9nLm1vZGVsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXUtZGlhbG9nJyxcclxuICB0ZW1wbGF0ZTogYDxtYXQtdG9vbGJhciBjb2xvcj1cInByaW1hcnlcIiBtYXQtZGlhbG9nLXRpdGxlPlxyXG4gIDxzcGFuIGNsYXNzPVwiZGlhbG9nLXRpdGxlXCI+XHJcbiAgICB7eyB0aXRsZSB9fVxyXG4gICAgPGJ1dHRvbiAqbmdJZj1cInNob3dDbG9zZUljb25cIiBtYXQtYnV0dG9uIFttYXQtZGlhbG9nLWNsb3NlXT1cIm51bGxcIj5cclxuICAgICAgPG1hdC1pY29uPmNsb3NlPC9tYXQtaWNvbj5cclxuICAgIDwvYnV0dG9uPlxyXG4gIDwvc3Bhbj5cclxuPC9tYXQtdG9vbGJhcj5cclxuPG1hdC1kaWFsb2ctY29udGVudCBjbGFzcz1cInNjcm9sbGFibGVcIj5cclxuICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbjwvbWF0LWRpYWxvZy1jb250ZW50PlxyXG48bWF0LWRpYWxvZy1hY3Rpb25zICpuZ0lmPVwic2hvd0FjdGlvbnMgJiYgYWN0aW9ucy5sZW5ndGggPiAwXCI+XHJcbiAgPGJ1dHRvbiAqbmdGb3I9XCJsZXQgYWN0aW9uIG9mIGFjdGlvbnNcIiBtYXQtcmFpc2VkLWJ1dHRvbiBbbWF0LWRpYWxvZy1jbG9zZV09XCJhY3Rpb24udmFsdWVcIiBbc3R5bGUud2lkdGhdPVwiYWN0aW9uV2lkdGhcIiBbc3R5bGUuY29sb3JdPVwiYWN0aW9uLmNvbG9yXCI+e3sgYWN0aW9uLmxhYmVsIH19PC9idXR0b24+XHJcbjwvbWF0LWRpYWxvZy1hY3Rpb25zPlxyXG48bWF0LWRpYWxvZy1hY3Rpb25zICpuZ0lmPVwic2hvd0Nsb3NlQWN0aW9uICYmIGFjdGlvbnMubGVuZ3RoID09PSAwXCI+XHJcbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvbiBtYXQtZGlhbG9nLWNsb3NlPVwiY2xvc2VcIiBbc3R5bGUud2lkdGhdPVwiYWN0aW9uV2lkdGhcIiBbc3R5bGUuY29sb3JdPVwiZGVmYXVsdEFjdGlvbkNvbG9yXCI+Q2xvc2U8L2J1dHRvbj5cclxuPC9tYXQtZGlhbG9nLWFjdGlvbnM+XHJcbmAsXHJcbiAgc3R5bGVzOiBbYGl1LWRpYWxvZyAubWF0LXRvb2xiYXJ7bWFyZ2luOi0yNHB4IC0yNHB4IDA7d2lkdGg6Y2FsYygxMDAlICsgNDhweCk7bWluLWhlaWdodDozMnB4fWl1LWRpYWxvZyAubWF0LXRvb2xiYXIgLmRpYWxvZy10aXRsZXtwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6Y2FsYygxMDAlIC0gOHB4KTt3aWR0aDoxMDAlO21hcmdpbi10b3A6OHB4fWl1LWRpYWxvZyAubWF0LXRvb2xiYXIgLmRpYWxvZy10aXRsZSBidXR0b257Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDt0b3A6LTVweDtib3JkZXItcmFkaXVzOjEwMCU7aGVpZ2h0OjQycHg7d2lkdGg6NDJweDttaW4td2lkdGg6MzZweH1pdS1kaWFsb2cgLm1hdC10b29sYmFyIC5kaWFsb2ctdGl0bGUgYnV0dG9uOmhvdmVyLGl1LWRpYWxvZyAubWF0LXRvb2xiYXIgLmRpYWxvZy10aXRsZSBidXR0b246aG92ZXIgbWF0LWljb257Zm9udC13ZWlnaHQ6NzAwfWl1LWRpYWxvZyAubWF0LXRvb2xiYXIgLmRpYWxvZy10aXRsZSBtYXQtaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6OXB4O3JpZ2h0OjhweDt6LWluZGV4OjF9aXUtZGlhbG9nIC5tYXQtdG9vbGJhci1yb3d7aGVpZ2h0OjQ4cHh9aXUtZGlhbG9nIC5tYXQtZGlhbG9nLWFjdGlvbnN7bWFyZ2luLWxlZnQ6LTI0cHg7bWFyZ2luLXJpZ2h0Oi0yNHB4O2NvbG9yOiNmZmY7cGFkZGluZzowfWl1LWRpYWxvZyAubWF0LWRpYWxvZy1hY3Rpb25zIGJ1dHRvbntwYWRkaW5nOjEycHggMH1pdS1kaWFsb2cgLm1hdC1kaWFsb2ctYWN0aW9ucyAubWF0LWFjY2VudHtjb2xvcjojZmZmIWltcG9ydGFudH1gXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaWFsb2dDb21wb25lbnQge1xyXG5cclxuICBASW5wdXQoKSBtb2RlbDogRGlhbG9nTW9kZWwgPSBuZXcgRGlhbG9nTW9kZWwoKTtcclxuICBASW5wdXQoKSBzaG93QWN0aW9ucyA9IHRydWU7XHJcbiAgQElucHV0KCkgc2hvd0Nsb3NlQWN0aW9uID0gZmFsc2U7XHJcbiAgQElucHV0KCkgc2hvd0Nsb3NlSWNvbiA9IHRydWU7XHJcbiAgQElucHV0KCkgZGVmYXVsdEFjdGlvbkNvbG9yID0gJ2FjY2VudCc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGdldCBhY3Rpb25zKCk6IERpYWxvZ0FjdGlvbltdIHtcclxuICAgIHJldHVybiB0aGlzLm1vZGVsLmFjdGlvbnM7XHJcbiAgfVxyXG5cclxuICBnZXQgYWN0aW9uV2lkdGgoKTogc3RyaW5nIHtcclxuICAgIGNvbnN0IGFjdGlvbnNDb3VudCA9IE1hdGgubWF4KHRoaXMuYWN0aW9ucy5sZW5ndGgsIDEpO1xyXG4gICAgcmV0dXJuIGAkezEwMCAvIGFjdGlvbnNDb3VudH0lYDtcclxuICB9XHJcblxyXG4gIGdldCB0aXRsZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMubW9kZWwudGl0bGU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input, ElementRef } from '@angular/core';
import { toPx } from '../../shared/utils';
export class WallpaperComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.images = [];
        this.windowHeight = 0;
        this.windowWidth = 0;
    }
    /**
     * @return {?}
     */
    get canvasHeight() {
        return this.windowWidth * 2;
    }
    /**
     * @return {?}
     */
    get canvasWidth() {
        return this.windowWidth - 100;
    }
    /**
     * @return {?}
     */
    get elementHeight() {
        return this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.style ?
            this.elementRef.nativeElement.style.height : 0;
    }
    /**
     * @return {?}
     */
    get elementHeightPx() {
        return toPx(this.elementHeight);
    }
    /**
     * @return {?}
     */
    get elementWidth() {
        return this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.style ?
            this.elementRef.nativeElement.style.width : 0;
    }
    /**
     * @return {?}
     */
    get elementWidthPx() {
        return toPx(this.elementWidth);
    }
    /**
     * @return {?}
     */
    get maxColumns() {
        return 3;
    }
    /**
     * @return {?}
     */
    get maxRows() {
        return 3;
    }
    /**
     * @return {?}
     */
    get totalColumns() {
        return 12;
    }
    /**
     * @return {?}
     */
    get totalRows() {
        return 24;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
WallpaperComponent.decorators = [
    { type: Component, args: [{
                selector: 'iu-wallpaper',
                template: `<div class="wallpaper" [style.height.px]="windowHeight" [style.width.px]="windowWidth">
  <iu-collage [images]="images" [canvasHeight]="canvasHeight" [canvasWidth]="canvasWidth" [totalRows]="totalRows" [totalColumns]="totalColumns"
    [maxRows]="maxRows" [maxColumns]="maxColumns"></iu-collage>
</div>`,
                styles: [`.wallpaper{height:100%;width:100%}`],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
WallpaperComponent.ctorParameters = () => [
    { type: ElementRef }
];
WallpaperComponent.propDecorators = {
    images: [{ type: Input }],
    windowHeight: [{ type: Input }],
    windowWidth: [{ type: Input }]
};
function WallpaperComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    WallpaperComponent.prototype.images;
    /** @type {?} */
    WallpaperComponent.prototype.windowHeight;
    /** @type {?} */
    WallpaperComponent.prototype.windowWidth;
    /** @type {?} */
    WallpaperComponent.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbHBhcGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjYWl1L2xpYnJhcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy93YWxscGFwZXIvd2FsbHBhcGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSx1QkFBdUIsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzlGLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVcxQyxNQUFNOzs7O0lBS0osWUFBbUIsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtzQkFKZCxFQUFFOzRCQUNMLENBQUM7MkJBQ0YsQ0FBQztLQUVzQjs7OztJQUU5QyxJQUFJLFlBQVk7UUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7S0FDN0I7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUM7S0FDL0I7Ozs7SUFFRCxJQUFJLGFBQWE7UUFDZixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM5RixJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEQ7Ozs7SUFFRCxJQUFJLGVBQWU7UUFDakIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDakM7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM5RixJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDakQ7Ozs7SUFFRCxJQUFJLGNBQWM7UUFDaEIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDaEM7Ozs7SUFFRCxJQUFJLFVBQVU7UUFDWixNQUFNLENBQUMsQ0FBQyxDQUFDO0tBQ1Y7Ozs7SUFFRCxJQUFJLE9BQU87UUFDVCxNQUFNLENBQUMsQ0FBQyxDQUFDO0tBQ1Y7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDZCxNQUFNLENBQUMsRUFBRSxDQUFDO0tBQ1g7Ozs7SUFFRCxJQUFJLFNBQVM7UUFDWCxNQUFNLENBQUMsRUFBRSxDQUFDO0tBQ1g7Ozs7SUFFRCxRQUFRO0tBRVA7OztZQTVERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLFFBQVEsRUFBRTs7O09BR0w7Z0JBQ0wsTUFBTSxFQUFFLENBQUMsb0NBQW9DLENBQUM7Z0JBQzlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7O1lBYjJELFVBQVU7OztxQkFlbkUsS0FBSzsyQkFDTCxLQUFLOzBCQUNMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9tb2RlbHMnO1xyXG5pbXBvcnQgeyB0b1B4IH0gZnJvbSAnLi4vLi4vc2hhcmVkL3V0aWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXUtd2FsbHBhcGVyJyxcclxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJ3YWxscGFwZXJcIiBbc3R5bGUuaGVpZ2h0LnB4XT1cIndpbmRvd0hlaWdodFwiIFtzdHlsZS53aWR0aC5weF09XCJ3aW5kb3dXaWR0aFwiPlxyXG4gIDxpdS1jb2xsYWdlIFtpbWFnZXNdPVwiaW1hZ2VzXCIgW2NhbnZhc0hlaWdodF09XCJjYW52YXNIZWlnaHRcIiBbY2FudmFzV2lkdGhdPVwiY2FudmFzV2lkdGhcIiBbdG90YWxSb3dzXT1cInRvdGFsUm93c1wiIFt0b3RhbENvbHVtbnNdPVwidG90YWxDb2x1bW5zXCJcclxuICAgIFttYXhSb3dzXT1cIm1heFJvd3NcIiBbbWF4Q29sdW1uc109XCJtYXhDb2x1bW5zXCI+PC9pdS1jb2xsYWdlPlxyXG48L2Rpdj5gLFxyXG4gIHN0eWxlczogW2Aud2FsbHBhcGVye2hlaWdodDoxMDAlO3dpZHRoOjEwMCV9YF0sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFdhbGxwYXBlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgaW1hZ2VzOiBJbWFnZVtdID0gW107XHJcbiAgQElucHV0KCkgd2luZG93SGVpZ2h0ID0gMDtcclxuICBASW5wdXQoKSB3aW5kb3dXaWR0aCA9IDA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cclxuXHJcbiAgZ2V0IGNhbnZhc0hlaWdodCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMud2luZG93V2lkdGggKiAyO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNhbnZhc1dpZHRoKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy53aW5kb3dXaWR0aCAtIDEwMDtcclxuICB9XHJcblxyXG4gIGdldCBlbGVtZW50SGVpZ2h0KCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50ICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlID9cclxuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0IDogMDtcclxuICB9XHJcblxyXG4gIGdldCBlbGVtZW50SGVpZ2h0UHgoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0b1B4KHRoaXMuZWxlbWVudEhlaWdodCk7XHJcbiAgfVxyXG5cclxuICBnZXQgZWxlbWVudFdpZHRoKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50ICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlID9cclxuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUud2lkdGggOiAwO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGVsZW1lbnRXaWR0aFB4KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdG9QeCh0aGlzLmVsZW1lbnRXaWR0aCk7XHJcbiAgfVxyXG5cclxuICBnZXQgbWF4Q29sdW1ucygpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIDM7XHJcbiAgfVxyXG5cclxuICBnZXQgbWF4Um93cygpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIDM7XHJcbiAgfVxyXG5cclxuICBnZXQgdG90YWxDb2x1bW5zKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gMTI7XHJcbiAgfVxyXG5cclxuICBnZXQgdG90YWxSb3dzKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gMjQ7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgfVxyXG5cclxufVxyXG4iXX0=